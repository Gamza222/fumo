name: Code Quality & Testing

on:
  push:
    branches: [main, master, develop, feature/*]
  pull_request:
    branches: [main, master, develop]

env:
  NODE_VERSION: "18"

jobs:
  # ============================================================================
  # CODE QUALITY & TESTING
  # ============================================================================

  quality-check:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get version and config info
        run: |
          echo "=== Version Information ==="
          npx ts-node --project tsconfig.scripts.json scripts/version.ts current
          echo "=== Environment Configuration ==="
          npx ts-node --project tsconfig.scripts.json scripts/version.ts env
          echo "=== CI Configuration ==="
          npx ts-node --project tsconfig.scripts.json scripts/version.ts ci

      - name: Set environment variables from config
        run: |
          COVERAGE_THRESHOLD=$(npx ts-node --project tsconfig.scripts.json -e "const { getCiConfig } = require('./config/ci/ci.config'); const config = getCiConfig(process.env.NODE_ENV || 'development'); console.log(config.test.coverageThreshold);")
          echo "COVERAGE_THRESHOLD=$COVERAGE_THRESHOLD" >> $GITHUB_ENV
          echo "Set coverage threshold to: $COVERAGE_THRESHOLD"

      - name: Type checking
        run: npm run type-check

      - name: Linting
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Run tests with coverage
        run: npm run test:ci
        env:
          COVERAGE_THRESHOLD: ${{ env.COVERAGE_THRESHOLD }}
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload coverage to Codecov (optional)
        run: |
          echo "üìä Codecov upload (optional)"
          echo "‚ö†Ô∏è  Codecov upload disabled - configure if needed"
          echo "üí° To enable Codecov, uncomment the codecov action"
          echo "‚úÖ Coverage report generated locally"

  # ============================================================================
  # QUALITY GATES
  # ============================================================================

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: quality-check
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Quality Gate - TypeScript
        run: |
          if [ "${{ needs.quality-check.result }}" != "success" ]; then
            echo "‚ùå TypeScript compilation failed"
            exit 1
          fi
          echo "‚úÖ TypeScript compilation passed"

      - name: Quality Gate - Linting
        run: |
          if [ "${{ needs.quality-check.result }}" != "success" ]; then
            echo "‚ùå Linting failed"
            exit 1
          fi
          echo "‚úÖ Linting passed"

      - name: Quality Gate - Tests
        run: |
          if [ "${{ needs.quality-check.result }}" != "success" ]; then
            echo "‚ùå Tests failed"
            exit 1
          fi
          echo "‚úÖ Tests passed"

      - name: Quality Gate - Coverage
        run: |
          if [ "${{ needs.quality-check.result }}" != "success" ]; then
            echo "‚ùå Coverage threshold not met"
            exit 1
          fi
          echo "‚úÖ Coverage threshold met"

      - name: All Quality Gates Passed
        run: |
          echo "üéâ All quality gates passed!"
          echo "‚úÖ Code is ready for deployment"
