9f1c51f739c758cc47a6facf18a64c9e
"use strict";

/**
 * Authentication Token Constants
 *
 * Centralized auth token keys for consistent usage.
 * Foundation-level only - no overengineering.
 */
/* istanbul ignore next */
function cov_2qq6xmnmjf() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/authTokens.ts";
  var hash = "447748cb7cfb71045bdcf10ef6ed31ff6c3f1f5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/authTokens.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "4": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "5": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 50
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "9": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "10": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 1
          },
          end: {
            line: 19,
            column: 2
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "getAllAuthTokenKeys",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "getPrimaryAuthTokenKey",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 31
          }
        },
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 60
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/authTokens.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAuBH,kDAEC;AAKD,wDAEC;AA9BD,+EAA+E;AAC/E,kBAAkB;AAClB,+EAA+E;AAE/E;;GAEG;AACH,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,yCAAyB,CAAA;IACzB,6CAA6B,CAAA;IAC7B,+CAA+B,CAAA;IAC/B,qCAAqB,CAAA;AACvB,CAAC,EALW,YAAY,4BAAZ,YAAY,QAKvB;AAED,+EAA+E;AAC/E,uBAAuB;AACvB,+EAA+E;AAE/E;;GAEG;AACH,SAAgB,mBAAmB;IACjC,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACrC,CAAC;AAED;;GAEG;AACH,SAAgB,sBAAsB;IACpC,OAAO,YAAY,CAAC,YAAY,CAAC;AACnC,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/authTokens.ts"],
      sourcesContent: ["/**\n * Authentication Token Constants\n *\n * Centralized auth token keys for consistent usage.\n * Foundation-level only - no overengineering.\n */\n\n// ============================================================================\n// AUTH TOKEN KEYS\n// ============================================================================\n\n/**\n * Authentication token storage keys\n */\nexport enum AuthTokenKey {\n  AUTH_TOKEN = 'auth_token',\n  ACCESS_TOKEN = 'access_token',\n  REFRESH_TOKEN = 'refresh_token',\n  ID_TOKEN = 'id_token',\n}\n\n// ============================================================================\n// AUTH TOKEN UTILITIES\n// ============================================================================\n\n/**\n * Get all possible auth token keys\n */\nexport function getAllAuthTokenKeys(): string[] {\n  return Object.values(AuthTokenKey);\n}\n\n/**\n * Get primary auth token key (most commonly used)\n */\nexport function getPrimaryAuthTokenKey(): string {\n  return AuthTokenKey.ACCESS_TOKEN;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "447748cb7cfb71045bdcf10ef6ed31ff6c3f1f5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qq6xmnmjf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qq6xmnmjf();
cov_2qq6xmnmjf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qq6xmnmjf().s[1]++;
exports.AuthTokenKey = void 0;
/* istanbul ignore next */
cov_2qq6xmnmjf().s[2]++;
exports.getAllAuthTokenKeys = getAllAuthTokenKeys;
/* istanbul ignore next */
cov_2qq6xmnmjf().s[3]++;
exports.getPrimaryAuthTokenKey = getPrimaryAuthTokenKey;
// ============================================================================
// AUTH TOKEN KEYS
// ============================================================================
/**
 * Authentication token storage keys
 */
var AuthTokenKey;
/* istanbul ignore next */
cov_2qq6xmnmjf().s[4]++;
(function (AuthTokenKey) {
  /* istanbul ignore next */
  cov_2qq6xmnmjf().f[0]++;
  cov_2qq6xmnmjf().s[5]++;
  AuthTokenKey["AUTH_TOKEN"] = "auth_token";
  /* istanbul ignore next */
  cov_2qq6xmnmjf().s[6]++;
  AuthTokenKey["ACCESS_TOKEN"] = "access_token";
  /* istanbul ignore next */
  cov_2qq6xmnmjf().s[7]++;
  AuthTokenKey["REFRESH_TOKEN"] = "refresh_token";
  /* istanbul ignore next */
  cov_2qq6xmnmjf().s[8]++;
  AuthTokenKey["ID_TOKEN"] = "id_token";
})(
/* istanbul ignore next */
(cov_2qq6xmnmjf().b[0][0]++, AuthTokenKey) ||
/* istanbul ignore next */
(cov_2qq6xmnmjf().b[0][1]++, exports.AuthTokenKey = AuthTokenKey = {}));
// ============================================================================
// AUTH TOKEN UTILITIES
// ============================================================================
/**
 * Get all possible auth token keys
 */
function getAllAuthTokenKeys() {
  /* istanbul ignore next */
  cov_2qq6xmnmjf().f[1]++;
  cov_2qq6xmnmjf().s[9]++;
  return Object.values(AuthTokenKey);
}
/**
 * Get primary auth token key (most commonly used)
 */
function getPrimaryAuthTokenKey() {
  /* istanbul ignore next */
  cov_2qq6xmnmjf().f[2]++;
  cov_2qq6xmnmjf().s[10]++;
  return AuthTokenKey.ACCESS_TOKEN;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnFxNnhtbm1qZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImV4cG9ydHMiLCJnZXRBbGxBdXRoVG9rZW5LZXlzIiwiZ2V0UHJpbWFyeUF1dGhUb2tlbktleSIsIkF1dGhUb2tlbktleSIsIk9iamVjdCIsInZhbHVlcyIsIkFDQ0VTU19UT0tFTiJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL2luZnJhc3RydWN0dXJlL2RhdGEvdHlwZXMvYXV0aFRva2Vucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEF1dGhlbnRpY2F0aW9uIFRva2VuIENvbnN0YW50c1xuICpcbiAqIENlbnRyYWxpemVkIGF1dGggdG9rZW4ga2V5cyBmb3IgY29uc2lzdGVudCB1c2FnZS5cbiAqIEZvdW5kYXRpb24tbGV2ZWwgb25seSAtIG5vIG92ZXJlbmdpbmVlcmluZy5cbiAqL1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBBVVRIIFRPS0VOIEtFWVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBBdXRoZW50aWNhdGlvbiB0b2tlbiBzdG9yYWdlIGtleXNcbiAqL1xuZXhwb3J0IGVudW0gQXV0aFRva2VuS2V5IHtcbiAgQVVUSF9UT0tFTiA9ICdhdXRoX3Rva2VuJyxcbiAgQUNDRVNTX1RPS0VOID0gJ2FjY2Vzc190b2tlbicsXG4gIFJFRlJFU0hfVE9LRU4gPSAncmVmcmVzaF90b2tlbicsXG4gIElEX1RPS0VOID0gJ2lkX3Rva2VuJyxcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQVVUSCBUT0tFTiBVVElMSVRJRVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBHZXQgYWxsIHBvc3NpYmxlIGF1dGggdG9rZW4ga2V5c1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsQXV0aFRva2VuS2V5cygpOiBzdHJpbmdbXSB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKEF1dGhUb2tlbktleSk7XG59XG5cbi8qKlxuICogR2V0IHByaW1hcnkgYXV0aCB0b2tlbiBrZXkgKG1vc3QgY29tbW9ubHkgdXNlZClcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByaW1hcnlBdXRoVG9rZW5LZXkoKTogc3RyaW5nIHtcbiAgcmV0dXJuIEF1dGhUb2tlbktleS5BQ0NFU1NfVE9LRU47XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVUsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsY0FBQTtNQUFBQyxJQUFBO01BQUFDLFFBQUE7TUFBQUMsS0FBQTtNQUFBQyxPQUFBO01BQUFDLGNBQUE7TUFBQUMsT0FBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQTNCLElBQUE7RUFBQTtFQUFBLElBQUE0QixRQUFBLEdBQUEzQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQXlCLFFBQUEsQ0FBQTdCLElBQUEsS0FBQTZCLFFBQUEsQ0FBQTdCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUE0QixRQUFBLENBQUE3QixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUF5QixjQUFBLEdBQUFELFFBQUEsQ0FBQTdCLElBQUE7RUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBK0IsT0FBQSxDQUFBQyxtQkFBQSxHQUFBQSxtQkFBQTtBQUVDO0FBQUFqQyxjQUFBLEdBQUFtQixDQUFBO0FBS0RhLE9BQUEsQ0FBQUUsc0JBQUEsR0FBQUEsc0JBQUE7QUE1QkE7QUFDQTtBQUNBO0FBRUE7OztBQUdBLElBQVlDLFlBS1g7QUFBQTtBQUFBbkMsY0FBQSxHQUFBbUIsQ0FBQTtBQUxELFdBQVlnQixZQUFZO0VBQUE7RUFBQW5DLGNBQUEsR0FBQW9CLENBQUE7RUFBQXBCLGNBQUEsR0FBQW1CLENBQUE7RUFDdEJnQixZQUFBLDZCQUF5QjtFQUFBO0VBQUFuQyxjQUFBLEdBQUFtQixDQUFBO0VBQ3pCZ0IsWUFBQSxpQ0FBNkI7RUFBQTtFQUFBbkMsY0FBQSxHQUFBbUIsQ0FBQTtFQUM3QmdCLFlBQUEsbUNBQStCO0VBQUE7RUFBQW5DLGNBQUEsR0FBQW1CLENBQUE7RUFDL0JnQixZQUFBLHlCQUFxQjtBQUN2QixDQUFDO0FBTFc7QUFBQSxDQUFBbkMsY0FBQSxHQUFBcUIsQ0FBQSxVQUFBYyxZQUFZO0FBQUE7QUFBQSxDQUFBbkMsY0FBQSxHQUFBcUIsQ0FBQSxVQUFBVyxPQUFBLENBQUFHLFlBQUEsR0FBWkEsWUFBWTtBQU94QjtBQUNBO0FBQ0E7QUFFQTs7O0FBR0EsU0FBZ0JGLG1CQUFtQkEsQ0FBQTtFQUFBO0VBQUFqQyxjQUFBLEdBQUFvQixDQUFBO0VBQUFwQixjQUFBLEdBQUFtQixDQUFBO0VBQ2pDLE9BQU9pQixNQUFNLENBQUNDLE1BQU0sQ0FBQ0YsWUFBWSxDQUFDO0FBQ3BDO0FBRUE7OztBQUdBLFNBQWdCRCxzQkFBc0JBLENBQUE7RUFBQTtFQUFBbEMsY0FBQSxHQUFBb0IsQ0FBQTtFQUFBcEIsY0FBQSxHQUFBbUIsQ0FBQTtFQUNwQyxPQUFPZ0IsWUFBWSxDQUFDRyxZQUFZO0FBQ2xDIiwiaWdub3JlTGlzdCI6W119