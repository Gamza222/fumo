{"file":"/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;GAKG;AAEH,6CAAoC;AACpC,sFAA+C;AAE/C,kCAAiE;AAEjE,yCAAwC;AACxC,4DAA2D;AAS9C,QAAA,WAAW,GAAG,IAAA,YAAI,EAAmB,UAAC,KAAK;IAC9C,IAAA,QAAQ,GAAqD,KAAK,SAA1D,EAAE,KAAmD,KAAK,eAAnC,EAArB,cAAc,mBAAG,IAAI,KAAA,EAAE,SAAS,GAAmB,KAAK,UAAxB,EAAE,KAAiB,KAAK,QAAV,EAAZ,OAAO,mBAAG,EAAE,KAAA,CAAW;IAC3E,IAAM,gBAAgB,GAAG,IAAA,yBAAmB,EAAC,QAAQ,CAAC,CAAC;IACvD,IAAM,eAAe,GAAG,IAAA,oBAAc,EAAC,QAAQ,CAAC,CAAC;IAEjD,OAAO,CACL,gDACc,cAAc,EAC1B,SAAS,EAAE,IAAA,uBAAU,EAAC,iCAAM,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,aAEhE,gCAAK,SAAS,EAAE,iCAAM,CAAC,SAAS,YAC9B,+CACc,mBAAmB,EAC/B,SAAS,EAAE,iCAAM,CAAC,GAAG,EACrB,KAAK,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAClC,GACE,EACL,cAAc,IAAI,CACjB,uBAAC,WAAI,IAAC,SAAS,EAAE,iCAAM,CAAC,UAAU,YAAG,eAAe,GAAQ,CAC7D,EACA,OAAO,IAAI,uBAAC,WAAI,IAAC,SAAS,EAAE,iCAAM,CAAC,OAAO,YAAG,OAAO,GAAQ,IACzD,CACP,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,mBAAW,CAAC,WAAW,GAAG,aAAa,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx"],"sourcesContent":["/**\n * ProgressBar Component\n *\n * Reusable progress bar component with smooth animations.\n * Can be moved to shared/ui later if needed elsewhere.\n */\n\nimport React, { memo } from \"react\";\nimport styles from \"./ProgressBar.module.scss\";\n\nimport { formatProgress, getProgressBarWidth } from \"../lib/lib\";\n\nimport { Text } from \"@/shared/ui/Text\";\nimport { classNames } from \"@/shared/lib/utils/classNames\";\n\nexport interface ProgressBarProps {\n  progress: number;\n  showPercentage?: boolean;\n  className?: string;\n  message?: string;\n}\n\nexport const ProgressBar = memo<ProgressBarProps>((props) => {\n  const { progress, showPercentage = true, className, message = \"\" } = props;\n  const progressBarWidth = getProgressBarWidth(progress);\n  const displayProgress = formatProgress(progress);\n\n  return (\n    <div\n      data-testid=\"progress-bar\"\n      className={classNames(styles.progressBar || \"\", {}, [className])}\n    >\n      <div className={styles.container}>\n        <div\n          data-testid=\"progress-bar-fill\"\n          className={styles.bar}\n          style={{ width: progressBarWidth }}\n        />\n      </div>\n      {showPercentage && (\n        <Text className={styles.percentage}>{displayProgress}</Text>\n      )}\n      {message && <Text className={styles.message}>{message}</Text>}\n    </div>\n  );\n});\n\nProgressBar.displayName = \"ProgressBar\";\n"],"version":3}