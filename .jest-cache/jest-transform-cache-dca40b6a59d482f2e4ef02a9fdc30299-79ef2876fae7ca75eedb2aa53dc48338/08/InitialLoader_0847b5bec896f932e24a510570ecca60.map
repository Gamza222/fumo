{"file":"/Users/gamzaramazanov/Desktop/fumo/src/widgets/InitialLoader/ui/InitialLoader.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/InitialLoader/ui/InitialLoader.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { memo, useEffect, useState } from \"react\";\n\n//styles\nimport styles from \"./InitialLoader.module.scss\";\n\n//lib\nimport { formatStepName } from \"../lib/lib\";\n\nimport { usePathname } from \"next/navigation\";\n\n//external\nimport { useAppLoadingContext } from \"@/infrastructure/providers/app-loading\";\nimport { getCurrentRouteConfig, AppRoute } from \"@/shared/config/route\";\nimport { classNames } from \"@/shared/lib/utils/classNames\";\n\n//components\nimport { ProgressBar } from \"@/widgets/ProgressBar\";\nimport { Mods } from \"@/shared/lib/utils/classNames/classNames\";\n\nexport interface InitialLoaderProps {\n  className?: string;\n  loadingMessage?: string;\n  showProgress?: boolean;\n}\n\nexport const InitialLoader = memo<InitialLoaderProps>(\n  ({\n    className,\n    loadingMessage,\n    showProgress = true,\n  }) => {\n    const pathname = usePathname();\n    const { isOverallLoading, progress, currentStep } = useAppLoadingContext();\n    const [isVisible, setIsVisible] = useState(true);\n    const [isFadingOut, setIsFadingOut] = useState(false);\n    const [shouldShowLoader, setShouldShowLoader] = useState(false);\n\n    // Get route config\n    const routeConfig = getCurrentRouteConfig(pathname).config;\n\n    // Simple cache check\n    const isCached = (): boolean => {\n      if (!routeConfig.cache.enabled) return false;\n\n      const cacheKey = routeConfig.cache.key || `cache-${routeConfig.route}`;\n      const cached = localStorage.getItem(cacheKey);\n\n      if (!cached) return false;\n\n      try {\n        const { timestamp, ttl } = JSON.parse(cached);\n        return Date.now() - timestamp < ttl;\n      } catch {\n        return false;\n      }\n    };\n\n    useEffect(() => {\n      const shouldShow = routeConfig.route === AppRoute.HOME || !isCached();\n      setShouldShowLoader(shouldShow);\n    }, [pathname, routeConfig.route]);\n\n    // Save cache when done\n    useEffect(() => {\n      if (!isOverallLoading && shouldShowLoader && routeConfig.cache.enabled) {\n        const cacheKey = routeConfig.cache.key || `cache-${routeConfig.route}`;\n        localStorage.setItem(\n          cacheKey,\n          JSON.stringify({\n            timestamp: Date.now(),\n            ttl: routeConfig.cache.ttl || 86400000, // 24 hours\n          })\n        );\n      }\n    }, [isOverallLoading, shouldShowLoader, routeConfig]);\n\n    // Visibility logic\n    useEffect(() => {\n      if (isOverallLoading) {\n        setIsVisible(true);\n        setIsFadingOut(false);\n        return;\n      }\n\n      setIsFadingOut(true);\n      setTimeout(\n        () => setIsVisible(false),\n        routeConfig.loader.minDisplayTime || 2000\n      );\n    }, [isOverallLoading, routeConfig.loader.minDisplayTime]);\n\n    if (!shouldShowLoader || !isVisible) return null;\n\n    const displayMessage =\n      loadingMessage ||\n      (progress >= 100 ? \"Ready!\" : formatStepName(currentStep));\n\n    const mods: Mods = {\n      [styles.fadeOut || \"\"]: isFadingOut,\n    };\n\n    return (\n      <div\n        className={classNames(styles.initialLoader || \"\", { ...mods }, [\n          className,\n        ])}\n        role=\"progressbar\"\n        aria-valuenow={progress}\n        aria-valuemin={0}\n        aria-valuemax={100}\n        aria-label=\"Loading application\"\n      >\n        <div className={styles.overlay} />\n        <div className={styles.content}>\n          <ProgressBar\n            progress={progress}\n            message={displayMessage}\n            showPercentage={showProgress}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nInitialLoader.displayName = \"InitialLoader\";\n"],"version":3}