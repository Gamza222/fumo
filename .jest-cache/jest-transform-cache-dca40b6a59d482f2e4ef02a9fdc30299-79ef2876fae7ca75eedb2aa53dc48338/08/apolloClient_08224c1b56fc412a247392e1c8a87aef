69300b63de81b31cca4abc2f530dd2f5
"use strict";
/**
 * Apollo GraphQL Client Configuration
 *
 * Universal GraphQL client foundation that can be used by any enterprise application.
 * Simplified version for initial foundation - can be enhanced later.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = exports.resetApolloStore = exports.refetchActiveQueries = exports.clearApolloCache = exports.apolloClient = void 0;
var client_1 = require("@apollo/client");
// ============================================================================
// ENVIRONMENT CONFIGURATION
// ============================================================================
// Import centralized environment configuration
var env_1 = require("../../../../config/env");
var GRAPHQL_ENDPOINT = env_1.envConfig.graphqlUrl;
// ============================================================================
// CACHE CONFIGURATION
// ============================================================================
/**
 * Universal cache configuration suitable for any GraphQL application
 */
var cache = new client_1.InMemoryCache({
    typePolicies: {
        Query: {
            fields: {
                // Generic pagination support for any paginated field
                __typename: {
                    read: function (existing) {
                        return existing || 'Query';
                    },
                },
            },
        },
    },
});
// ============================================================================
// HTTP LINK
// ============================================================================
/**
 * Universal HTTP link configuration
 */
var httpLink = (0, client_1.createHttpLink)({
    uri: GRAPHQL_ENDPOINT,
    credentials: 'same-origin',
});
// ============================================================================
// APOLLO CLIENT CONFIGURATION
// ============================================================================
/**
 * Universal Apollo Client configuration suitable for any enterprise application
 */
exports.apolloClient = new client_1.ApolloClient({
    link: httpLink,
    cache: cache,
    defaultOptions: {
        watchQuery: {
            errorPolicy: 'all',
            fetchPolicy: 'cache-first',
        },
        query: {
            errorPolicy: 'all',
            fetchPolicy: 'cache-first',
        },
        mutate: {
            errorPolicy: 'all',
        },
    },
});
exports.default = exports.apolloClient;
// ============================================================================
// UTILITY FUNCTIONS
// ============================================================================
/**
 * Clear Apollo cache - useful for logout or data refresh scenarios
 */
var clearApolloCache = function () { return __awaiter(void 0, void 0, Promise, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, exports.apolloClient.clearStore()];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
exports.clearApolloCache = clearApolloCache;
/**
 * Refetch all active queries - useful for data refresh scenarios
 */
var refetchActiveQueries = function () { return __awaiter(void 0, void 0, Promise, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, exports.apolloClient.refetchQueries({
                    include: 'active',
                })];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
exports.refetchActiveQueries = refetchActiveQueries;
/**
 * Reset Apollo store completely - useful for user switching scenarios
 */
var resetApolloStore = function () { return __awaiter(void 0, void 0, Promise, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, exports.apolloClient.resetStore()];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
exports.resetApolloStore = resetApolloStore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvaW5mcmFzdHJ1Y3R1cmUvZGF0YS9hcG9sbG8vYXBvbGxvQ2xpZW50LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7R0FLRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUgseUNBQTZFO0FBRTdFLCtFQUErRTtBQUMvRSw0QkFBNEI7QUFDNUIsK0VBQStFO0FBRS9FLCtDQUErQztBQUMvQyw4Q0FBbUQ7QUFFbkQsSUFBTSxnQkFBZ0IsR0FBRyxlQUFTLENBQUMsVUFBVSxDQUFDO0FBRTlDLCtFQUErRTtBQUMvRSxzQkFBc0I7QUFDdEIsK0VBQStFO0FBRS9FOztHQUVHO0FBQ0gsSUFBTSxLQUFLLEdBQUcsSUFBSSxzQkFBYSxDQUFDO0lBQzlCLFlBQVksRUFBRTtRQUNaLEtBQUssRUFBRTtZQUNMLE1BQU0sRUFBRTtnQkFDTixxREFBcUQ7Z0JBQ3JELFVBQVUsRUFBRTtvQkFDVixJQUFJLFlBQUMsUUFBNEI7d0JBQy9CLE9BQU8sUUFBUSxJQUFJLE9BQU8sQ0FBQztvQkFDN0IsQ0FBQztpQkFDRjthQUNGO1NBQ0Y7S0FDRjtDQUNGLENBQUMsQ0FBQztBQUVILCtFQUErRTtBQUMvRSxZQUFZO0FBQ1osK0VBQStFO0FBRS9FOztHQUVHO0FBQ0gsSUFBTSxRQUFRLEdBQUcsSUFBQSx1QkFBYyxFQUFDO0lBQzlCLEdBQUcsRUFBRSxnQkFBZ0I7SUFDckIsV0FBVyxFQUFFLGFBQWE7Q0FDM0IsQ0FBQyxDQUFDO0FBRUgsK0VBQStFO0FBQy9FLDhCQUE4QjtBQUM5QiwrRUFBK0U7QUFFL0U7O0dBRUc7QUFDVSxRQUFBLFlBQVksR0FBRyxJQUFJLHFCQUFZLENBQUM7SUFDM0MsSUFBSSxFQUFFLFFBQVE7SUFDZCxLQUFLLE9BQUE7SUFDTCxjQUFjLEVBQUU7UUFDZCxVQUFVLEVBQUU7WUFDVixXQUFXLEVBQUUsS0FBSztZQUNsQixXQUFXLEVBQUUsYUFBYTtTQUMzQjtRQUNELEtBQUssRUFBRTtZQUNMLFdBQVcsRUFBRSxLQUFLO1lBQ2xCLFdBQVcsRUFBRSxhQUFhO1NBQzNCO1FBQ0QsTUFBTSxFQUFFO1lBQ04sV0FBVyxFQUFFLEtBQUs7U0FDbkI7S0FDRjtDQUNGLENBQUMsQ0FBQztBQWtDc0Isa0JBbERaLG9CQUFZLENBa0RPO0FBaENoQywrRUFBK0U7QUFDL0Usb0JBQW9CO0FBQ3BCLCtFQUErRTtBQUUvRTs7R0FFRztBQUNJLElBQU0sZ0JBQWdCLEdBQUcsK0NBQVUsT0FBTzs7O29CQUMvQyxxQkFBTSxvQkFBWSxDQUFDLFVBQVUsRUFBRSxFQUFBOztnQkFBL0IsU0FBK0IsQ0FBQzs7OztLQUNqQyxDQUFDO0FBRlcsUUFBQSxnQkFBZ0Isb0JBRTNCO0FBRUY7O0dBRUc7QUFDSSxJQUFNLG9CQUFvQixHQUFHLCtDQUFVLE9BQU87OztvQkFDbkQscUJBQU0sb0JBQVksQ0FBQyxjQUFjLENBQUM7b0JBQ2hDLE9BQU8sRUFBRSxRQUFRO2lCQUNsQixDQUFDLEVBQUE7O2dCQUZGLFNBRUUsQ0FBQzs7OztLQUNKLENBQUM7QUFKVyxRQUFBLG9CQUFvQix3QkFJL0I7QUFFRjs7R0FFRztBQUNJLElBQU0sZ0JBQWdCLEdBQUcsK0NBQVUsT0FBTzs7O29CQUMvQyxxQkFBTSxvQkFBWSxDQUFDLFVBQVUsRUFBRSxFQUFBOztnQkFBL0IsU0FBK0IsQ0FBQzs7OztLQUNqQyxDQUFDO0FBRlcsUUFBQSxnQkFBZ0Isb0JBRTNCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL2luZnJhc3RydWN0dXJlL2RhdGEvYXBvbGxvL2Fwb2xsb0NsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwb2xsbyBHcmFwaFFMIENsaWVudCBDb25maWd1cmF0aW9uXG4gKlxuICogVW5pdmVyc2FsIEdyYXBoUUwgY2xpZW50IGZvdW5kYXRpb24gdGhhdCBjYW4gYmUgdXNlZCBieSBhbnkgZW50ZXJwcmlzZSBhcHBsaWNhdGlvbi5cbiAqIFNpbXBsaWZpZWQgdmVyc2lvbiBmb3IgaW5pdGlhbCBmb3VuZGF0aW9uIC0gY2FuIGJlIGVuaGFuY2VkIGxhdGVyLlxuICovXG5cbmltcG9ydCB7IEFwb2xsb0NsaWVudCwgY3JlYXRlSHR0cExpbmssIEluTWVtb3J5Q2FjaGUgfSBmcm9tICdAYXBvbGxvL2NsaWVudCc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVOVklST05NRU5UIENPTkZJR1VSQVRJT05cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gSW1wb3J0IGNlbnRyYWxpemVkIGVudmlyb25tZW50IGNvbmZpZ3VyYXRpb25cbmltcG9ydCB7IGVudkNvbmZpZyB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbmZpZy9lbnYnO1xuXG5jb25zdCBHUkFQSFFMX0VORFBPSU5UID0gZW52Q29uZmlnLmdyYXBocWxVcmw7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENBQ0hFIENPTkZJR1VSQVRJT05cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBVbml2ZXJzYWwgY2FjaGUgY29uZmlndXJhdGlvbiBzdWl0YWJsZSBmb3IgYW55IEdyYXBoUUwgYXBwbGljYXRpb25cbiAqL1xuY29uc3QgY2FjaGUgPSBuZXcgSW5NZW1vcnlDYWNoZSh7XG4gIHR5cGVQb2xpY2llczoge1xuICAgIFF1ZXJ5OiB7XG4gICAgICBmaWVsZHM6IHtcbiAgICAgICAgLy8gR2VuZXJpYyBwYWdpbmF0aW9uIHN1cHBvcnQgZm9yIGFueSBwYWdpbmF0ZWQgZmllbGRcbiAgICAgICAgX190eXBlbmFtZToge1xuICAgICAgICAgIHJlYWQoZXhpc3Rpbmc6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB7XG4gICAgICAgICAgICByZXR1cm4gZXhpc3RpbmcgfHwgJ1F1ZXJ5JztcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSk7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEhUVFAgTElOS1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIFVuaXZlcnNhbCBIVFRQIGxpbmsgY29uZmlndXJhdGlvblxuICovXG5jb25zdCBodHRwTGluayA9IGNyZWF0ZUh0dHBMaW5rKHtcbiAgdXJpOiBHUkFQSFFMX0VORFBPSU5ULFxuICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbn0pO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBBUE9MTE8gQ0xJRU5UIENPTkZJR1VSQVRJT05cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBVbml2ZXJzYWwgQXBvbGxvIENsaWVudCBjb25maWd1cmF0aW9uIHN1aXRhYmxlIGZvciBhbnkgZW50ZXJwcmlzZSBhcHBsaWNhdGlvblxuICovXG5leHBvcnQgY29uc3QgYXBvbGxvQ2xpZW50ID0gbmV3IEFwb2xsb0NsaWVudCh7XG4gIGxpbms6IGh0dHBMaW5rLFxuICBjYWNoZSxcbiAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICB3YXRjaFF1ZXJ5OiB7XG4gICAgICBlcnJvclBvbGljeTogJ2FsbCcsXG4gICAgICBmZXRjaFBvbGljeTogJ2NhY2hlLWZpcnN0JyxcbiAgICB9LFxuICAgIHF1ZXJ5OiB7XG4gICAgICBlcnJvclBvbGljeTogJ2FsbCcsXG4gICAgICBmZXRjaFBvbGljeTogJ2NhY2hlLWZpcnN0JyxcbiAgICB9LFxuICAgIG11dGF0ZToge1xuICAgICAgZXJyb3JQb2xpY3k6ICdhbGwnLFxuICAgIH0sXG4gIH0sXG59KTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVVRJTElUWSBGVU5DVElPTlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBDbGVhciBBcG9sbG8gY2FjaGUgLSB1c2VmdWwgZm9yIGxvZ291dCBvciBkYXRhIHJlZnJlc2ggc2NlbmFyaW9zXG4gKi9cbmV4cG9ydCBjb25zdCBjbGVhckFwb2xsb0NhY2hlID0gYXN5bmMgKCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICBhd2FpdCBhcG9sbG9DbGllbnQuY2xlYXJTdG9yZSgpO1xufTtcblxuLyoqXG4gKiBSZWZldGNoIGFsbCBhY3RpdmUgcXVlcmllcyAtIHVzZWZ1bCBmb3IgZGF0YSByZWZyZXNoIHNjZW5hcmlvc1xuICovXG5leHBvcnQgY29uc3QgcmVmZXRjaEFjdGl2ZVF1ZXJpZXMgPSBhc3luYyAoKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIGF3YWl0IGFwb2xsb0NsaWVudC5yZWZldGNoUXVlcmllcyh7XG4gICAgaW5jbHVkZTogJ2FjdGl2ZScsXG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZXNldCBBcG9sbG8gc3RvcmUgY29tcGxldGVseSAtIHVzZWZ1bCBmb3IgdXNlciBzd2l0Y2hpbmcgc2NlbmFyaW9zXG4gKi9cbmV4cG9ydCBjb25zdCByZXNldEFwb2xsb1N0b3JlID0gYXN5bmMgKCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICBhd2FpdCBhcG9sbG9DbGllbnQucmVzZXRTdG9yZSgpO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVFlQRSBFWFBPUlRTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCB0eXBlIHsgQXBvbGxvQ2xpZW50IH0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xuZXhwb3J0IHsgYXBvbGxvQ2xpZW50IGFzIGRlZmF1bHQgfTtcbiJdLCJ2ZXJzaW9uIjozfQ==