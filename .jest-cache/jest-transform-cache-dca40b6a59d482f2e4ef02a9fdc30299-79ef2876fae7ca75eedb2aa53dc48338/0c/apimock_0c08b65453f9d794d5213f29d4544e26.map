{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/api/api.mock.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/api/api.mock.ts"],"sourcesContent":["/**\n * API Mock Utilities\n *\n * Common API-related mocks for testing HTTP responses,\n * middleware, and API interactions.\n */\n\n/**\n * Creates a mock HTTP response object\n */\nexport const createMockResponse = (overrides: Partial<Response> = {}) => ({\n  headers: {\n    set: jest.fn(),\n    get: jest.fn(),\n    has: jest.fn(),\n    delete: jest.fn(),\n    clear: jest.fn(),\n    forEach: jest.fn(),\n    entries: jest.fn(),\n    keys: jest.fn(),\n    values: jest.fn(),\n    [Symbol.iterator]: jest.fn(),\n  },\n  status: 200,\n  statusText: 'OK',\n  ok: true,\n  url: 'http://localhost:3000/api/test',\n  redirected: false,\n  type: 'basic' as ResponseType,\n  body: null,\n  bodyUsed: false,\n  arrayBuffer: jest.fn(),\n  blob: jest.fn(),\n  formData: jest.fn(),\n  json: jest.fn(),\n  text: jest.fn(),\n  clone: jest.fn(),\n  ...overrides,\n});\n\n/**\n * Creates a mock Next.js response object\n */\nexport const createMockNextResponse = (overrides: Record<string, unknown> = {}) => ({\n  headers: {\n    set: jest.fn(),\n    get: jest.fn(),\n    has: jest.fn(),\n    delete: jest.fn(),\n    clear: jest.fn(),\n    forEach: jest.fn(),\n    entries: jest.fn(),\n    keys: jest.fn(),\n    values: jest.fn(),\n    [Symbol.iterator]: jest.fn(),\n  },\n  status: 200,\n  statusText: 'OK',\n  ok: true,\n  url: 'http://localhost:3000/api/test',\n  redirected: false,\n  type: 'basic',\n  body: null,\n  bodyUsed: false,\n  arrayBuffer: jest.fn(),\n  blob: jest.fn(),\n  formData: jest.fn(),\n  json: jest.fn(),\n  text: jest.fn(),\n  clone: jest.fn(),\n  ...overrides,\n});\n\n/**\n * Creates a mock HTTP request object\n */\nexport const createMockRequest = (overrides: Partial<Request> = {}) => ({\n  method: 'GET',\n  url: 'http://localhost:3000/api/test',\n  headers: new Headers(),\n  body: null,\n  bodyUsed: false,\n  cache: 'default' as RequestCache,\n  credentials: 'same-origin' as RequestCredentials,\n  destination: '',\n  integrity: '',\n  keepalive: false,\n  mode: 'cors' as RequestMode,\n  redirect: 'follow' as RequestRedirect,\n  referrer: '',\n  referrerPolicy: 'no-referrer' as ReferrerPolicy,\n  signal: new AbortSignal(),\n  arrayBuffer: jest.fn(),\n  blob: jest.fn(),\n  formData: jest.fn(),\n  json: jest.fn(),\n  text: jest.fn(),\n  clone: jest.fn(),\n  ...overrides,\n});\n\n/**\n * Creates a mock API error response\n */\nexport const createMockApiError = (\n  status: number = 500,\n  message: string = 'Internal Server Error'\n) => ({\n  status,\n  statusText: message,\n  ok: false,\n  headers: {\n    set: jest.fn(),\n    get: jest.fn(),\n    has: jest.fn(),\n    delete: jest.fn(),\n    clear: jest.fn(),\n    forEach: jest.fn(),\n    entries: jest.fn(),\n    keys: jest.fn(),\n    values: jest.fn(),\n    [Symbol.iterator]: jest.fn(),\n  },\n  url: 'http://localhost:3000/api/error',\n  redirected: false,\n  type: 'error' as ResponseType,\n  body: null,\n  bodyUsed: false,\n  arrayBuffer: jest.fn(),\n  blob: jest.fn(),\n  formData: jest.fn(),\n  json: jest.fn().mockResolvedValue({ error: message }),\n  text: jest.fn().mockResolvedValue(message),\n  clone: jest.fn(),\n});\n\n/**\n * Creates a mock fetch function\n */\nexport const createMockFetch = (responses: Response[] = []) => {\n  let callCount = 0;\n  const mockFetch = jest.fn();\n\n  responses.forEach((response) => {\n    mockFetch.mockResolvedValueOnce(response);\n  });\n\n  // Default response for any additional calls\n  mockFetch.mockResolvedValue(createMockResponse());\n\n  return {\n    fetch: mockFetch,\n    getCallCount: () => callCount++,\n    getCalls: () => mockFetch.mock.calls as unknown[],\n    getLastCall: () => mockFetch.mock.calls[mockFetch.mock.calls.length - 1] as unknown,\n  };\n};\n"],"version":3}