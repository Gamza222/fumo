{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts","mappings":";AAAA;;;;;GAKG;;;;;;;;;;;;;;AAIH,gCAAgC;AAChC,IAAM,sBAAsB,GAAG;IAC7B,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;IACxB,MAAM,EAAE;QACN,eAAe,EAAE,CAAC;QAClB,YAAY,EAAE,IAAI;KACnB;IACD,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,UAAC,IAAY;QACrC,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;YAC1B,OAAO;gBACL;oBACE,IAAI,EAAE,YAAY;oBAClB,SAAS,EAAE,CAAC;oBACZ,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC;QACJ,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;CACH,CAAC;AAEF;;;;;GAKG;AACI,IAAM,eAAe,GAAG,UAC7B,UAAkD;IAAlD,2BAAA,EAAA,eAAkD;IAElD,IAAM,eAAe,yBAChB,sBAAsB,GACtB,UAAU,CACd,CAAC;IAEF,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B;AAEF,gCAAgC;AACzB,IAAM,oBAAoB,GAAG,UAAC,UAAkD;IAAlD,2BAAA,EAAA,eAAkD;IACrF,IAAM,eAAe,GAAG,IAAA,uBAAe,EAAC,UAAU,CAAC,CAAC;IAEpD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE;QAC3C,KAAK,EAAE,eAAe;QACtB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;AACL,CAAC,CAAC;AAPW,QAAA,oBAAoB,wBAO/B;AAEF,oCAAoC;AACvB,QAAA,sBAAsB,GAAG,IAAA,uBAAe,GAAE,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts"],"sourcesContent":["/**\n * Performance API Mock for Testing\n *\n * Provides a mock implementation of the Performance API for testing environments.\n * Simulates performance timing and measurement capabilities.\n */\n\nimport { mockPerformanceInterface } from '../../types/types';\n\n// Default performance mock data\nconst defaultPerformanceData = {\n  now: jest.fn(() => 1000),\n  timing: {\n    navigationStart: 0,\n    loadEventEnd: 1000,\n  },\n  getEntriesByType: jest.fn((type: string) => {\n    if (type === 'navigation') {\n      return [\n        {\n          name: 'navigation',\n          startTime: 0,\n          duration: 1000,\n        },\n      ];\n    }\n    return [];\n  }),\n};\n\n/**\n * Creates a mock performance object for testing\n *\n * @param customData - Optional custom performance data to override defaults\n * @returns A mock performance object that implements mockPerformanceInterface\n */\nexport const mockPerformance = (\n  customData: Partial<mockPerformanceInterface> = {}\n): mockPerformanceInterface => {\n  const performanceMock: mockPerformanceInterface = {\n    ...defaultPerformanceData,\n    ...customData,\n  };\n\n  return performanceMock;\n};\n\n// Global performance mock setup\nexport const setupPerformanceMock = (customData: Partial<mockPerformanceInterface> = {}): void => {\n  const performanceMock = mockPerformance(customData);\n\n  Object.defineProperty(window, 'performance', {\n    value: performanceMock,\n    writable: true,\n  });\n};\n\n// Default performance mock instance\nexport const defaultPerformanceMock = mockPerformance();\n"],"version":3}