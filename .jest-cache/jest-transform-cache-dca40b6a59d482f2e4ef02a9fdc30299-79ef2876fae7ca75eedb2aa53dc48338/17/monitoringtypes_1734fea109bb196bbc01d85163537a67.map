{"version":3,"names":["cov_1xu2nql8ok","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","HealthStatus","exports","AnalyticsEventType","AlertLevel"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/monitoring/types/monitoring.types.ts"],"sourcesContent":["/**\n * Monitoring Infrastructure Types\n *\n * Type definitions for monitoring, analytics, and health check systems.\n */\n\n// ============================================================================\n// HEALTH CHECK TYPES\n// ============================================================================\n\n/**\n * Health status levels\n */\nexport enum HealthStatus {\n  HEALTHY = 'healthy',\n  DEGRADED = 'degraded',\n  UNHEALTHY = 'unhealthy',\n  UNKNOWN = 'unknown',\n}\n\n/**\n * Service health information\n */\nexport interface ServiceHealth {\n  name: string;\n  status: HealthStatus;\n  responseTime?: number;\n  lastCheck: Date;\n  error?: string;\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * Overall system health status\n */\nexport interface SystemHealth {\n  status: HealthStatus;\n  timestamp: Date;\n  uptime: number;\n  version: string;\n  versionDisplay: string;\n  versionInfo: {\n    major: number;\n    minor: number;\n    patch: number;\n    prerelease?: string;\n    versionCode: number;\n    commitHash?: string;\n    branch?: string;\n  };\n  environment: string;\n  services: ServiceHealth[];\n  summary: {\n    total: number;\n    healthy: number;\n    degraded: number;\n    unhealthy: number;\n  };\n}\n\n// ============================================================================\n// ANALYTICS TYPES\n// ============================================================================\n\n/**\n * Analytics event types\n */\nexport enum AnalyticsEventType {\n  PAGE_VIEW = 'page_view',\n  USER_INTERACTION = 'user_interaction',\n  PERFORMANCE_METRIC = 'performance_metric',\n  ERROR_EVENT = 'error_event',\n  CUSTOM_EVENT = 'custom_event',\n}\n\n/**\n * Analytics event data\n */\nexport interface AnalyticsEvent {\n  id: string;\n  type: AnalyticsEventType;\n  name: string;\n  timestamp: Date;\n  userId?: string;\n  sessionId?: string;\n  properties?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * Analytics configuration\n */\nexport interface AnalyticsConfig {\n  enabled: boolean;\n  trackingId?: string;\n  respectDoNotTrack: boolean;\n  anonymizeIp: boolean;\n  sampleRate: number;\n  debug: boolean;\n}\n\n/**\n * Analytics session information\n */\nexport interface AnalyticsSession {\n  id: string;\n  startTime: Date;\n  lastActivity: Date;\n  pageViews: number;\n  events: number;\n  userId?: string;\n}\n\n// ============================================================================\n// MONITORING TYPES\n// ============================================================================\n\n/**\n * Monitoring metrics\n */\nexport interface MonitoringMetric {\n  name: string;\n  value: number;\n  unit: string;\n  timestamp: Date;\n  tags?: Record<string, string>;\n}\n\n/**\n * Monitoring alert levels\n */\nexport enum AlertLevel {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  CRITICAL = 'critical',\n}\n\n/**\n * Monitoring alert\n */\nexport interface MonitoringAlert {\n  id: string;\n  level: AlertLevel;\n  message: string;\n  timestamp: Date;\n  resolved: boolean;\n  resolvedAt?: Date;\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * Monitoring dashboard data\n */\nexport interface MonitoringDashboardData {\n  systemHealth: SystemHealth;\n  recentAlerts: MonitoringAlert[];\n  metrics: MonitoringMetric[];\n  analytics: {\n    totalEvents: number;\n    activeSessions: number;\n    topPages: Array<{ path: string; views: number }>;\n  };\n}\n\n// ============================================================================\n// CONFIGURATION TYPES\n// ============================================================================\n\n/**\n * Monitoring configuration\n */\nexport interface MonitoringConfig {\n  healthCheck: {\n    enabled: boolean;\n    interval: number;\n    timeout: number;\n    services: string[];\n  };\n  analytics: AnalyticsConfig;\n  alerts: {\n    enabled: boolean;\n    webhook?: string;\n    email?: string;\n  };\n  dashboard: {\n    refreshInterval: number;\n    maxAlerts: number;\n    maxMetrics: number;\n  };\n}\n"],"mappings":"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","ignoreList":[]}