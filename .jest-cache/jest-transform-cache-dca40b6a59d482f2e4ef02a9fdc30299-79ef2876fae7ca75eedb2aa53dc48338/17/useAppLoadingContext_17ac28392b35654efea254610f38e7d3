b35d5ff3740bf5dc8998e9fadf0a4f35
"use strict";

/**
 * useAppLoadingContext Hook
 *
 * Hook for consuming AppLoading context safely.
 */
'use client';

/**
 * useAppLoadingContext Hook
 *
 * Hook for consuming AppLoading context safely.
 */
/* istanbul ignore next */
function cov_1smd15ktsu() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoadingContext/useAppLoadingContext.ts";
  var hash = "4cf399ede15dd28897ea8d299780832fed7e8387";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoadingContext/useAppLoadingContext.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "2": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "3": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 65
        }
      },
      "4": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 81
        }
      },
      "5": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "6": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 37,
          column: 78
        }
      },
      "7": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "useAppLoadingContext",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 29
          }
        },
        loc: {
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoadingContext/useAppLoadingContext.ts",
      mappings: ";AAAA;;;;GAIG;AAEH,YAAY,CAAC;AANb;;;;GAIG;;AAwBH,oDAYC;AAhCD,+BAAmC;AACnC,kEAAgE;AAGhE,+EAA+E;AAC/E,6BAA6B;AAC7B,+EAA+E;AAE/E;;;;;;;;;;;GAWG;AACH,SAAgB,oBAAoB;IAClC,4BAA4B;IAC5B,IAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,sCAAiB,CAAC,CAAC;IAE9C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,KAAK,CACb,kEAAkE;YAChE,gEAAgE,CACnE,CAAC;IACJ,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoadingContext/useAppLoadingContext.ts"],
      sourcesContent: ["/**\n * useAppLoadingContext Hook\n *\n * Hook for consuming AppLoading context safely.\n */\n\n'use client';\n\nimport { useContext } from 'react';\nimport { AppLoadingContext } from '../../ui/AppLoadingProvider';\nimport { UseAppLoadingReturn } from '../../model/types/types';\n\n// ============================================================================\n// CONTEXT HOOK (Logic Layer)\n// ============================================================================\n\n/**\n * useAppLoadingContext - Hook to access loading state from context\n *\n * This hook handles context consumption logic with proper error handling.\n * Memoized for performance optimization.\n *\n * Usage:\n * const { isInitialLoading, progress, forceComplete } = useAppLoadingContext();\n *\n * @throws Error if used outside of AppLoadingProvider\n * @returns AppLoadingContextType - Loading state and methods\n */\nexport function useAppLoadingContext(): UseAppLoadingReturn {\n  // Get context from provider\n  const context = useContext(AppLoadingContext);\n\n  if (!context) {\n    throw new Error(\n      'useAppLoadingContext must be used within an AppLoadingProvider. ' +\n        'Make sure your component is wrapped with <AppLoadingProvider>.'\n    );\n  }\n\n  return context;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4cf399ede15dd28897ea8d299780832fed7e8387"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1smd15ktsu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1smd15ktsu();
cov_1smd15ktsu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1smd15ktsu().s[1]++;
exports.useAppLoadingContext = useAppLoadingContext;
var react_1 =
/* istanbul ignore next */
(cov_1smd15ktsu().s[2]++, require("react"));
var AppLoadingProvider_1 =
/* istanbul ignore next */
(cov_1smd15ktsu().s[3]++, require("../../ui/AppLoadingProvider"));
// ============================================================================
// CONTEXT HOOK (Logic Layer)
// ============================================================================
/**
 * useAppLoadingContext - Hook to access loading state from context
 *
 * This hook handles context consumption logic with proper error handling.
 * Memoized for performance optimization.
 *
 * Usage:
 * const { isInitialLoading, progress, forceComplete } = useAppLoadingContext();
 *
 * @throws Error if used outside of AppLoadingProvider
 * @returns AppLoadingContextType - Loading state and methods
 */
function useAppLoadingContext() {
  /* istanbul ignore next */
  cov_1smd15ktsu().f[0]++;
  // Get context from provider
  var context =
  /* istanbul ignore next */
  (cov_1smd15ktsu().s[4]++, (0, react_1.useContext)(AppLoadingProvider_1.AppLoadingContext));
  /* istanbul ignore next */
  cov_1smd15ktsu().s[5]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1smd15ktsu().b[0][0]++;
    cov_1smd15ktsu().s[6]++;
    throw new Error('useAppLoadingContext must be used within an AppLoadingProvider. ' + 'Make sure your component is wrapped with <AppLoadingProvider>.');
  } else
  /* istanbul ignore next */
  {
    cov_1smd15ktsu().b[0][1]++;
  }
  cov_1smd15ktsu().s[7]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXNtZDE1a3RzdSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImV4cG9ydHMiLCJ1c2VBcHBMb2FkaW5nQ29udGV4dCIsInJlYWN0XzEiLCJyZXF1aXJlIiwiQXBwTG9hZGluZ1Byb3ZpZGVyXzEiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIkFwcExvYWRpbmdDb250ZXh0IiwiRXJyb3IiXSwic291cmNlcyI6WyIvVXNlcnMvZ2FtemFyYW1hemFub3YvRGVza3RvcC9mdW1vL3NyYy9pbmZyYXN0cnVjdHVyZS9wcm92aWRlcnMvYXBwLWxvYWRpbmcvaG9va3MvdXNlQXBwTG9hZGluZ0NvbnRleHQvdXNlQXBwTG9hZGluZ0NvbnRleHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiB1c2VBcHBMb2FkaW5nQ29udGV4dCBIb29rXG4gKlxuICogSG9vayBmb3IgY29uc3VtaW5nIEFwcExvYWRpbmcgY29udGV4dCBzYWZlbHkuXG4gKi9cblxuJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQXBwTG9hZGluZ0NvbnRleHQgfSBmcm9tICcuLi8uLi91aS9BcHBMb2FkaW5nUHJvdmlkZXInO1xuaW1wb3J0IHsgVXNlQXBwTG9hZGluZ1JldHVybiB9IGZyb20gJy4uLy4uL21vZGVsL3R5cGVzL3R5cGVzJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ09OVEVYVCBIT09LIChMb2dpYyBMYXllcilcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiB1c2VBcHBMb2FkaW5nQ29udGV4dCAtIEhvb2sgdG8gYWNjZXNzIGxvYWRpbmcgc3RhdGUgZnJvbSBjb250ZXh0XG4gKlxuICogVGhpcyBob29rIGhhbmRsZXMgY29udGV4dCBjb25zdW1wdGlvbiBsb2dpYyB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZy5cbiAqIE1lbW9pemVkIGZvciBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24uXG4gKlxuICogVXNhZ2U6XG4gKiBjb25zdCB7IGlzSW5pdGlhbExvYWRpbmcsIHByb2dyZXNzLCBmb3JjZUNvbXBsZXRlIH0gPSB1c2VBcHBMb2FkaW5nQ29udGV4dCgpO1xuICpcbiAqIEB0aHJvd3MgRXJyb3IgaWYgdXNlZCBvdXRzaWRlIG9mIEFwcExvYWRpbmdQcm92aWRlclxuICogQHJldHVybnMgQXBwTG9hZGluZ0NvbnRleHRUeXBlIC0gTG9hZGluZyBzdGF0ZSBhbmQgbWV0aG9kc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlQXBwTG9hZGluZ0NvbnRleHQoKTogVXNlQXBwTG9hZGluZ1JldHVybiB7XG4gIC8vIEdldCBjb250ZXh0IGZyb20gcHJvdmlkZXJcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXBwTG9hZGluZ0NvbnRleHQpO1xuXG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICd1c2VBcHBMb2FkaW5nQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEFwcExvYWRpbmdQcm92aWRlci4gJyArXG4gICAgICAgICdNYWtlIHN1cmUgeW91ciBjb21wb25lbnQgaXMgd3JhcHBlZCB3aXRoIDxBcHBMb2FkaW5nUHJvdmlkZXI+LidcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIGNvbnRleHQ7XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBTUEsWUFBWTs7QUFOWjs7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUE1QixJQUFBO0VBQUE7RUFBQSxJQUFBNkIsUUFBQSxHQUFBNUIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUEwQixRQUFBLENBQUE5QixJQUFBLEtBQUE4QixRQUFBLENBQUE5QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBNkIsUUFBQSxDQUFBOUIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBMEIsY0FBQSxHQUFBRCxRQUFBLENBQUE5QixJQUFBO0VBQUE7SUFTQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBZ0MsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQWhDLGNBQUE7QUFBQUEsY0FBQSxHQUFBb0IsQ0FBQTs7Ozs7O0FBbUJBYSxPQUFBLENBQUFDLG9CQUFBLEdBQUFBLG9CQUFBO0FBcEJBLElBQUFDLE9BQUE7QUFBQTtBQUFBLENBQUFuQyxjQUFBLEdBQUFvQixDQUFBLE9BQUFnQixPQUFBO0FBQ0EsSUFBQUMsb0JBQUE7QUFBQTtBQUFBLENBQUFyQyxjQUFBLEdBQUFvQixDQUFBLE9BQUFnQixPQUFBO0FBR0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7OztBQVlBLFNBQWdCRixvQkFBb0JBLENBQUE7RUFBQTtFQUFBbEMsY0FBQSxHQUFBcUIsQ0FBQTtFQUNsQztFQUNBLElBQU1pQixPQUFPO0VBQUE7RUFBQSxDQUFBdEMsY0FBQSxHQUFBb0IsQ0FBQSxPQUFHLElBQUFlLE9BQUEsQ0FBQUksVUFBVSxFQUFDRixvQkFBQSxDQUFBRyxpQkFBaUIsQ0FBQztFQUFDO0VBQUF4QyxjQUFBLEdBQUFvQixDQUFBO0VBRTlDLElBQUksQ0FBQ2tCLE9BQU8sRUFBRTtJQUFBO0lBQUF0QyxjQUFBLEdBQUFzQixDQUFBO0lBQUF0QixjQUFBLEdBQUFvQixDQUFBO0lBQ1osTUFBTSxJQUFJcUIsS0FBSyxDQUNiLGtFQUFrRSxHQUNoRSxnRUFBZ0UsQ0FDbkU7RUFDSCxDQUFDO0VBQUE7RUFBQTtJQUFBekMsY0FBQSxHQUFBc0IsQ0FBQTtFQUFBO0VBQUF0QixjQUFBLEdBQUFvQixDQUFBO0VBRUQsT0FBT2tCLE9BQU87QUFDaEIiLCJpZ25vcmVMaXN0IjpbXX0=