dcece62122f016abb04f180f6d51b3f6
"use strict";
/**
 * Next.js Mocks
 *
 * Type: ðŸ“¦ MANUAL
 *
 * This file exports all mocks for Next.js server components that need to be manually imported
 * and configured in tests.
 *
 * These are MANUAL mocks - they use named exports for functions that need to be imported
 * and controlled in tests.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockNextServerResponse = exports.MockNextServerRequest = exports.createMockNextResponse = exports.MockNextResponse = exports.createMockNextRequest = exports.MockNextRequest = void 0;
// ============================================================================
// SERVER MOCKS
// ============================================================================
var nextRequest_mock_1 = require("./lib/server/nextRequest.mock");
Object.defineProperty(exports, "MockNextRequest", { enumerable: true, get: function () { return nextRequest_mock_1.MockNextRequest; } });
Object.defineProperty(exports, "createMockNextRequest", { enumerable: true, get: function () { return nextRequest_mock_1.createMockNextRequest; } });
var nextResponse_mock_1 = require("./lib/server/nextResponse.mock");
Object.defineProperty(exports, "MockNextResponse", { enumerable: true, get: function () { return nextResponse_mock_1.MockNextResponse; } });
Object.defineProperty(exports, "createMockNextResponse", { enumerable: true, get: function () { return nextResponse_mock_1.createMockNextResponse; } });
var nextServer_mock_1 = require("./lib/server/nextServer.mock");
Object.defineProperty(exports, "MockNextServerRequest", { enumerable: true, get: function () { return nextServer_mock_1.MockNextRequest; } });
Object.defineProperty(exports, "MockNextServerResponse", { enumerable: true, get: function () { return nextServer_mock_1.MockNextResponse; } });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvc2hhcmVkL3Rlc3RpbmcvbW9ja3MvbmV4dGpzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7OztHQVVHOzs7QUFFSCwrRUFBK0U7QUFDL0UsZUFBZTtBQUNmLCtFQUErRTtBQUUvRSxrRUFBdUY7QUFBOUUsbUhBQUEsZUFBZSxPQUFBO0FBQUUseUhBQUEscUJBQXFCLE9BQUE7QUFDL0Msb0VBQTBGO0FBQWpGLHFIQUFBLGdCQUFnQixPQUFBO0FBQUUsMkhBQUEsc0JBQXNCLE9BQUE7QUFDakQsZ0VBR3NDO0FBRnBDLHdIQUFBLGVBQWUsT0FBeUI7QUFDeEMseUhBQUEsZ0JBQWdCLE9BQTBCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3NoYXJlZC90ZXN0aW5nL21vY2tzL25leHRqcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE5leHQuanMgTW9ja3NcbiAqXG4gKiBUeXBlOiDwn5OmIE1BTlVBTFxuICpcbiAqIFRoaXMgZmlsZSBleHBvcnRzIGFsbCBtb2NrcyBmb3IgTmV4dC5qcyBzZXJ2ZXIgY29tcG9uZW50cyB0aGF0IG5lZWQgdG8gYmUgbWFudWFsbHkgaW1wb3J0ZWRcbiAqIGFuZCBjb25maWd1cmVkIGluIHRlc3RzLlxuICpcbiAqIFRoZXNlIGFyZSBNQU5VQUwgbW9ja3MgLSB0aGV5IHVzZSBuYW1lZCBleHBvcnRzIGZvciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGltcG9ydGVkXG4gKiBhbmQgY29udHJvbGxlZCBpbiB0ZXN0cy5cbiAqL1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTRVJWRVIgTU9DS1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHsgTW9ja05leHRSZXF1ZXN0LCBjcmVhdGVNb2NrTmV4dFJlcXVlc3QgfSBmcm9tICcuL2xpYi9zZXJ2ZXIvbmV4dFJlcXVlc3QubW9jayc7XG5leHBvcnQgeyBNb2NrTmV4dFJlc3BvbnNlLCBjcmVhdGVNb2NrTmV4dFJlc3BvbnNlIH0gZnJvbSAnLi9saWIvc2VydmVyL25leHRSZXNwb25zZS5tb2NrJztcbmV4cG9ydCB7XG4gIE1vY2tOZXh0UmVxdWVzdCBhcyBNb2NrTmV4dFNlcnZlclJlcXVlc3QsXG4gIE1vY2tOZXh0UmVzcG9uc2UgYXMgTW9ja05leHRTZXJ2ZXJSZXNwb25zZSxcbn0gZnJvbSAnLi9saWIvc2VydmVyL25leHRTZXJ2ZXIubW9jayc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCB0eXBlIHtcbiAgbW9ja05leHRSZXF1ZXN0SW50ZXJmYWNlLFxuICBtb2NrTmV4dFJlcXVlc3RPcHRpb25zSW50ZXJmYWNlLFxuICBtb2NrTmV4dFJlc3BvbnNlSW50ZXJmYWNlLFxuICBtb2NrTmV4dFJlc3BvbnNlT3B0aW9uc0ludGVyZmFjZSxcbiAgbW9ja05leHRTZXJ2ZXJJbnRlcmZhY2UsXG59IGZyb20gJy4vdHlwZXMvdHlwZXMnO1xuIl0sInZlcnNpb24iOjN9