7e58b83aaf79aabe9fac50bd66c884f0
"use strict";

/**
 * Performance-related type definitions
 */
/* istanbul ignore next */
function cov_d7uaeqp51() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/types/performance.types.ts";
  var hash = "7e121226b93f686092b0d619296db0fc8aba94ae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/types/performance.types.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/types/performance.types.ts",
      mappings: ";AAAA;;GAEG",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/types/performance.types.ts"],
      sourcesContent: ["/**\n * Performance-related type definitions\n */\n\nimport { ImageFormat, NonCriticalStrategy, PerformanceRating } from './performance.enums';\n\n// ============================================================================\n// WEB VITALS TYPES\n// ============================================================================\n\nexport interface WebVitalsConfig {\n  /** Whether to report to console in development */\n  debug?: boolean;\n  /** Custom analytics function */\n  analytics?: (metric: { name: string; value: number; delta: number; rating: string }) => void;\n  /** Whether to report to Sentry */\n  reportToSentry?: boolean;\n}\n\n// ============================================================================\n// PERFORMANCE MONITORING TYPES\n// ============================================================================\n\nexport interface PerformanceMetric {\n  name: string;\n  value: number;\n  timestamp: number;\n  rating?: PerformanceRating;\n}\n\nexport interface PerformanceReport {\n  metrics: PerformanceMetric[];\n  summary: {\n    totalMetrics: number;\n    goodMetrics: number;\n    needsImprovementMetrics: number;\n    poorMetrics: number;\n  };\n  timestamp: number;\n}\n\n// ============================================================================\n// IMAGE OPTIMIZATION TYPES\n// ============================================================================\n\nexport interface ImageOptimizationConfig {\n  /** Image quality (1-100) */\n  quality?: number;\n  /** Image format preference */\n  format?: ImageFormat;\n  /** Enable responsive images */\n  responsive?: boolean;\n  /** Lazy loading threshold */\n  lazyThreshold?: number;\n  /** Placeholder blur data URL */\n  placeholder?: 'blur' | 'empty';\n}\n\nexport interface ImageOptimizationResult {\n  /** Optimized image URL */\n  src: string;\n  /** Image width */\n  width: number;\n  /** Image height */\n  height: number;\n  /** Image format */\n  format: string;\n  /** File size in bytes */\n  size: number;\n  /** Optimization ratio */\n  optimizationRatio: number;\n}\n\n// ============================================================================\n// RESOURCE PRELOADING TYPES\n// ============================================================================\n\nexport interface ResourcePreloadConfig {\n  /** Preload critical fonts */\n  fonts?: boolean;\n  /** Preload critical CSS */\n  css?: boolean;\n  /** Preload critical JavaScript */\n  js?: boolean;\n  /** Preload critical images */\n  images?: boolean;\n  /** Custom preload resources */\n  custom?: PreloadResource[];\n}\n\nexport interface PreloadResource {\n  /** Resource URL */\n  href: string;\n  /** Resource type */\n  as: 'font' | 'style' | 'script' | 'image' | 'fetch';\n  /** Resource media query */\n  media?: string;\n  /** Resource crossorigin */\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  /** Resource importance */\n  importance?: 'high' | 'low' | 'auto';\n}\n\n// ============================================================================\n// CRITICAL CSS TYPES\n// ============================================================================\n\nexport interface CriticalCSSConfig {\n  /** Extract critical CSS */\n  extract?: boolean;\n  /** Inline critical CSS */\n  inline?: boolean;\n  /** Critical CSS selector */\n  selector?: string;\n  /** Non-critical CSS loading strategy */\n  nonCriticalStrategy?: NonCriticalStrategy;\n}\n\nexport interface CriticalCSSResult {\n  /** Critical CSS content */\n  critical: string;\n  /** Non-critical CSS content */\n  nonCritical: string;\n  /** CSS size in bytes */\n  size: number;\n  /** Critical CSS ratio */\n  criticalRatio: number;\n}\n\n// ============================================================================\n// HTTP CACHING TYPES\n// ============================================================================\n\nexport interface HTTPCacheConfig {\n  /** Cache control max age (seconds) */\n  maxAge?: number;\n  /** Cache control s-maxage (seconds) */\n  sMaxAge?: number;\n  /** Enable ETag */\n  etag?: boolean;\n  /** Enable Last-Modified */\n  lastModified?: boolean;\n  /** Cache control directives */\n  directives?: string[];\n}\n\nexport interface CacheStrategyConfig {\n  /** Resource type */\n  type: 'static' | 'dynamic' | 'api' | 'image' | 'font';\n  /** Cache configuration */\n  config: HTTPCacheConfig;\n  /** Cache key pattern */\n  keyPattern?: string;\n}\n\n// ============================================================================\n// PRODUCTION CONFIG TYPES\n// ============================================================================\n\nexport interface ProductionConfig {\n  /** Enable compression */\n  compression?: boolean;\n  /** Enable minification */\n  minification?: boolean;\n  /** Enable tree shaking */\n  treeShaking?: boolean;\n  /** Enable code splitting */\n  codeSplitting?: boolean;\n  /** Bundle analyzer */\n  bundleAnalyzer?: boolean;\n  /** Source maps */\n  sourceMaps?: boolean;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e121226b93f686092b0d619296db0fc8aba94ae"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d7uaeqp51 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_d7uaeqp51();
cov_d7uaeqp51().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZDd1YWVxcDUxIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIl0sInNvdXJjZXMiOlsiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvaW5mcmFzdHJ1Y3R1cmUvcGVyZm9ybWFuY2UvdHlwZXMvcGVyZm9ybWFuY2UudHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJmb3JtYW5jZS1yZWxhdGVkIHR5cGUgZGVmaW5pdGlvbnNcbiAqL1xuXG5pbXBvcnQgeyBJbWFnZUZvcm1hdCwgTm9uQ3JpdGljYWxTdHJhdGVneSwgUGVyZm9ybWFuY2VSYXRpbmcgfSBmcm9tICcuL3BlcmZvcm1hbmNlLmVudW1zJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gV0VCIFZJVEFMUyBUWVBFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgaW50ZXJmYWNlIFdlYlZpdGFsc0NvbmZpZyB7XG4gIC8qKiBXaGV0aGVyIHRvIHJlcG9ydCB0byBjb25zb2xlIGluIGRldmVsb3BtZW50ICovXG4gIGRlYnVnPzogYm9vbGVhbjtcbiAgLyoqIEN1c3RvbSBhbmFseXRpY3MgZnVuY3Rpb24gKi9cbiAgYW5hbHl0aWNzPzogKG1ldHJpYzogeyBuYW1lOiBzdHJpbmc7IHZhbHVlOiBudW1iZXI7IGRlbHRhOiBudW1iZXI7IHJhdGluZzogc3RyaW5nIH0pID0+IHZvaWQ7XG4gIC8qKiBXaGV0aGVyIHRvIHJlcG9ydCB0byBTZW50cnkgKi9cbiAgcmVwb3J0VG9TZW50cnk/OiBib29sZWFuO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQRVJGT1JNQU5DRSBNT05JVE9SSU5HIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGVyZm9ybWFuY2VNZXRyaWMge1xuICBuYW1lOiBzdHJpbmc7XG4gIHZhbHVlOiBudW1iZXI7XG4gIHRpbWVzdGFtcDogbnVtYmVyO1xuICByYXRpbmc/OiBQZXJmb3JtYW5jZVJhdGluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQZXJmb3JtYW5jZVJlcG9ydCB7XG4gIG1ldHJpY3M6IFBlcmZvcm1hbmNlTWV0cmljW107XG4gIHN1bW1hcnk6IHtcbiAgICB0b3RhbE1ldHJpY3M6IG51bWJlcjtcbiAgICBnb29kTWV0cmljczogbnVtYmVyO1xuICAgIG5lZWRzSW1wcm92ZW1lbnRNZXRyaWNzOiBudW1iZXI7XG4gICAgcG9vck1ldHJpY3M6IG51bWJlcjtcbiAgfTtcbiAgdGltZXN0YW1wOiBudW1iZXI7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIElNQUdFIE9QVElNSVpBVElPTiBUWVBFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlT3B0aW1pemF0aW9uQ29uZmlnIHtcbiAgLyoqIEltYWdlIHF1YWxpdHkgKDEtMTAwKSAqL1xuICBxdWFsaXR5PzogbnVtYmVyO1xuICAvKiogSW1hZ2UgZm9ybWF0IHByZWZlcmVuY2UgKi9cbiAgZm9ybWF0PzogSW1hZ2VGb3JtYXQ7XG4gIC8qKiBFbmFibGUgcmVzcG9uc2l2ZSBpbWFnZXMgKi9cbiAgcmVzcG9uc2l2ZT86IGJvb2xlYW47XG4gIC8qKiBMYXp5IGxvYWRpbmcgdGhyZXNob2xkICovXG4gIGxhenlUaHJlc2hvbGQ/OiBudW1iZXI7XG4gIC8qKiBQbGFjZWhvbGRlciBibHVyIGRhdGEgVVJMICovXG4gIHBsYWNlaG9sZGVyPzogJ2JsdXInIHwgJ2VtcHR5Jztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbWFnZU9wdGltaXphdGlvblJlc3VsdCB7XG4gIC8qKiBPcHRpbWl6ZWQgaW1hZ2UgVVJMICovXG4gIHNyYzogc3RyaW5nO1xuICAvKiogSW1hZ2Ugd2lkdGggKi9cbiAgd2lkdGg6IG51bWJlcjtcbiAgLyoqIEltYWdlIGhlaWdodCAqL1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgLyoqIEltYWdlIGZvcm1hdCAqL1xuICBmb3JtYXQ6IHN0cmluZztcbiAgLyoqIEZpbGUgc2l6ZSBpbiBieXRlcyAqL1xuICBzaXplOiBudW1iZXI7XG4gIC8qKiBPcHRpbWl6YXRpb24gcmF0aW8gKi9cbiAgb3B0aW1pemF0aW9uUmF0aW86IG51bWJlcjtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUkVTT1VSQ0UgUFJFTE9BRElORyBUWVBFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlUHJlbG9hZENvbmZpZyB7XG4gIC8qKiBQcmVsb2FkIGNyaXRpY2FsIGZvbnRzICovXG4gIGZvbnRzPzogYm9vbGVhbjtcbiAgLyoqIFByZWxvYWQgY3JpdGljYWwgQ1NTICovXG4gIGNzcz86IGJvb2xlYW47XG4gIC8qKiBQcmVsb2FkIGNyaXRpY2FsIEphdmFTY3JpcHQgKi9cbiAganM/OiBib29sZWFuO1xuICAvKiogUHJlbG9hZCBjcml0aWNhbCBpbWFnZXMgKi9cbiAgaW1hZ2VzPzogYm9vbGVhbjtcbiAgLyoqIEN1c3RvbSBwcmVsb2FkIHJlc291cmNlcyAqL1xuICBjdXN0b20/OiBQcmVsb2FkUmVzb3VyY2VbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcmVsb2FkUmVzb3VyY2Uge1xuICAvKiogUmVzb3VyY2UgVVJMICovXG4gIGhyZWY6IHN0cmluZztcbiAgLyoqIFJlc291cmNlIHR5cGUgKi9cbiAgYXM6ICdmb250JyB8ICdzdHlsZScgfCAnc2NyaXB0JyB8ICdpbWFnZScgfCAnZmV0Y2gnO1xuICAvKiogUmVzb3VyY2UgbWVkaWEgcXVlcnkgKi9cbiAgbWVkaWE/OiBzdHJpbmc7XG4gIC8qKiBSZXNvdXJjZSBjcm9zc29yaWdpbiAqL1xuICBjcm9zc09yaWdpbj86ICdhbm9ueW1vdXMnIHwgJ3VzZS1jcmVkZW50aWFscyc7XG4gIC8qKiBSZXNvdXJjZSBpbXBvcnRhbmNlICovXG4gIGltcG9ydGFuY2U/OiAnaGlnaCcgfCAnbG93JyB8ICdhdXRvJztcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ1JJVElDQUwgQ1NTIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JpdGljYWxDU1NDb25maWcge1xuICAvKiogRXh0cmFjdCBjcml0aWNhbCBDU1MgKi9cbiAgZXh0cmFjdD86IGJvb2xlYW47XG4gIC8qKiBJbmxpbmUgY3JpdGljYWwgQ1NTICovXG4gIGlubGluZT86IGJvb2xlYW47XG4gIC8qKiBDcml0aWNhbCBDU1Mgc2VsZWN0b3IgKi9cbiAgc2VsZWN0b3I/OiBzdHJpbmc7XG4gIC8qKiBOb24tY3JpdGljYWwgQ1NTIGxvYWRpbmcgc3RyYXRlZ3kgKi9cbiAgbm9uQ3JpdGljYWxTdHJhdGVneT86IE5vbkNyaXRpY2FsU3RyYXRlZ3k7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JpdGljYWxDU1NSZXN1bHQge1xuICAvKiogQ3JpdGljYWwgQ1NTIGNvbnRlbnQgKi9cbiAgY3JpdGljYWw6IHN0cmluZztcbiAgLyoqIE5vbi1jcml0aWNhbCBDU1MgY29udGVudCAqL1xuICBub25Dcml0aWNhbDogc3RyaW5nO1xuICAvKiogQ1NTIHNpemUgaW4gYnl0ZXMgKi9cbiAgc2l6ZTogbnVtYmVyO1xuICAvKiogQ3JpdGljYWwgQ1NTIHJhdGlvICovXG4gIGNyaXRpY2FsUmF0aW86IG51bWJlcjtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSFRUUCBDQUNISU5HIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgSFRUUENhY2hlQ29uZmlnIHtcbiAgLyoqIENhY2hlIGNvbnRyb2wgbWF4IGFnZSAoc2Vjb25kcykgKi9cbiAgbWF4QWdlPzogbnVtYmVyO1xuICAvKiogQ2FjaGUgY29udHJvbCBzLW1heGFnZSAoc2Vjb25kcykgKi9cbiAgc01heEFnZT86IG51bWJlcjtcbiAgLyoqIEVuYWJsZSBFVGFnICovXG4gIGV0YWc/OiBib29sZWFuO1xuICAvKiogRW5hYmxlIExhc3QtTW9kaWZpZWQgKi9cbiAgbGFzdE1vZGlmaWVkPzogYm9vbGVhbjtcbiAgLyoqIENhY2hlIGNvbnRyb2wgZGlyZWN0aXZlcyAqL1xuICBkaXJlY3RpdmVzPzogc3RyaW5nW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FjaGVTdHJhdGVneUNvbmZpZyB7XG4gIC8qKiBSZXNvdXJjZSB0eXBlICovXG4gIHR5cGU6ICdzdGF0aWMnIHwgJ2R5bmFtaWMnIHwgJ2FwaScgfCAnaW1hZ2UnIHwgJ2ZvbnQnO1xuICAvKiogQ2FjaGUgY29uZmlndXJhdGlvbiAqL1xuICBjb25maWc6IEhUVFBDYWNoZUNvbmZpZztcbiAgLyoqIENhY2hlIGtleSBwYXR0ZXJuICovXG4gIGtleVBhdHRlcm4/OiBzdHJpbmc7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFBST0RVQ1RJT04gQ09ORklHIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdGlvbkNvbmZpZyB7XG4gIC8qKiBFbmFibGUgY29tcHJlc3Npb24gKi9cbiAgY29tcHJlc3Npb24/OiBib29sZWFuO1xuICAvKiogRW5hYmxlIG1pbmlmaWNhdGlvbiAqL1xuICBtaW5pZmljYXRpb24/OiBib29sZWFuO1xuICAvKiogRW5hYmxlIHRyZWUgc2hha2luZyAqL1xuICB0cmVlU2hha2luZz86IGJvb2xlYW47XG4gIC8qKiBFbmFibGUgY29kZSBzcGxpdHRpbmcgKi9cbiAgY29kZVNwbGl0dGluZz86IGJvb2xlYW47XG4gIC8qKiBCdW5kbGUgYW5hbHl6ZXIgKi9cbiAgYnVuZGxlQW5hbHl6ZXI/OiBib29sZWFuO1xuICAvKiogU291cmNlIG1hcHMgKi9cbiAgc291cmNlTWFwcz86IGJvb2xlYW47XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO0lBQUFDLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUF0QixJQUFBO0VBQUE7RUFBQSxJQUFBdUIsUUFBQSxHQUFBdEIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFvQixRQUFBLENBQUF4QixJQUFBLEtBQUF3QixRQUFBLENBQUF4QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBdUIsUUFBQSxDQUFBeEIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBb0IsY0FBQSxHQUFBRCxRQUFBLENBQUF4QixJQUFBO0VBQUEiLCJpZ25vcmVMaXN0IjpbXX0=