{"version":3,"names":["cov_d7uaeqp51","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/types/performance.types.ts"],"sourcesContent":["/**\n * Performance-related type definitions\n */\n\nimport { ImageFormat, NonCriticalStrategy, PerformanceRating } from './performance.enums';\n\n// ============================================================================\n// WEB VITALS TYPES\n// ============================================================================\n\nexport interface WebVitalsConfig {\n  /** Whether to report to console in development */\n  debug?: boolean;\n  /** Custom analytics function */\n  analytics?: (metric: { name: string; value: number; delta: number; rating: string }) => void;\n  /** Whether to report to Sentry */\n  reportToSentry?: boolean;\n}\n\n// ============================================================================\n// PERFORMANCE MONITORING TYPES\n// ============================================================================\n\nexport interface PerformanceMetric {\n  name: string;\n  value: number;\n  timestamp: number;\n  rating?: PerformanceRating;\n}\n\nexport interface PerformanceReport {\n  metrics: PerformanceMetric[];\n  summary: {\n    totalMetrics: number;\n    goodMetrics: number;\n    needsImprovementMetrics: number;\n    poorMetrics: number;\n  };\n  timestamp: number;\n}\n\n// ============================================================================\n// IMAGE OPTIMIZATION TYPES\n// ============================================================================\n\nexport interface ImageOptimizationConfig {\n  /** Image quality (1-100) */\n  quality?: number;\n  /** Image format preference */\n  format?: ImageFormat;\n  /** Enable responsive images */\n  responsive?: boolean;\n  /** Lazy loading threshold */\n  lazyThreshold?: number;\n  /** Placeholder blur data URL */\n  placeholder?: 'blur' | 'empty';\n}\n\nexport interface ImageOptimizationResult {\n  /** Optimized image URL */\n  src: string;\n  /** Image width */\n  width: number;\n  /** Image height */\n  height: number;\n  /** Image format */\n  format: string;\n  /** File size in bytes */\n  size: number;\n  /** Optimization ratio */\n  optimizationRatio: number;\n}\n\n// ============================================================================\n// RESOURCE PRELOADING TYPES\n// ============================================================================\n\nexport interface ResourcePreloadConfig {\n  /** Preload critical fonts */\n  fonts?: boolean;\n  /** Preload critical CSS */\n  css?: boolean;\n  /** Preload critical JavaScript */\n  js?: boolean;\n  /** Preload critical images */\n  images?: boolean;\n  /** Custom preload resources */\n  custom?: PreloadResource[];\n}\n\nexport interface PreloadResource {\n  /** Resource URL */\n  href: string;\n  /** Resource type */\n  as: 'font' | 'style' | 'script' | 'image' | 'fetch';\n  /** Resource media query */\n  media?: string;\n  /** Resource crossorigin */\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  /** Resource importance */\n  importance?: 'high' | 'low' | 'auto';\n}\n\n// ============================================================================\n// CRITICAL CSS TYPES\n// ============================================================================\n\nexport interface CriticalCSSConfig {\n  /** Extract critical CSS */\n  extract?: boolean;\n  /** Inline critical CSS */\n  inline?: boolean;\n  /** Critical CSS selector */\n  selector?: string;\n  /** Non-critical CSS loading strategy */\n  nonCriticalStrategy?: NonCriticalStrategy;\n}\n\nexport interface CriticalCSSResult {\n  /** Critical CSS content */\n  critical: string;\n  /** Non-critical CSS content */\n  nonCritical: string;\n  /** CSS size in bytes */\n  size: number;\n  /** Critical CSS ratio */\n  criticalRatio: number;\n}\n\n// ============================================================================\n// HTTP CACHING TYPES\n// ============================================================================\n\nexport interface HTTPCacheConfig {\n  /** Cache control max age (seconds) */\n  maxAge?: number;\n  /** Cache control s-maxage (seconds) */\n  sMaxAge?: number;\n  /** Enable ETag */\n  etag?: boolean;\n  /** Enable Last-Modified */\n  lastModified?: boolean;\n  /** Cache control directives */\n  directives?: string[];\n}\n\nexport interface CacheStrategyConfig {\n  /** Resource type */\n  type: 'static' | 'dynamic' | 'api' | 'image' | 'font';\n  /** Cache configuration */\n  config: HTTPCacheConfig;\n  /** Cache key pattern */\n  keyPattern?: string;\n}\n\n// ============================================================================\n// PRODUCTION CONFIG TYPES\n// ============================================================================\n\nexport interface ProductionConfig {\n  /** Enable compression */\n  compression?: boolean;\n  /** Enable minification */\n  minification?: boolean;\n  /** Enable tree shaking */\n  treeShaking?: boolean;\n  /** Enable code splitting */\n  codeSplitting?: boolean;\n  /** Bundle analyzer */\n  bundleAnalyzer?: boolean;\n  /** Source maps */\n  sourceMaps?: boolean;\n}\n"],"mappings":";;AAAA;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAtB,IAAA;EAAA;EAAA,IAAAuB,QAAA,GAAAtB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAoB,QAAA,CAAAxB,IAAA,KAAAwB,QAAA,CAAAxB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAuB,QAAA,CAAAxB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAoB,cAAA,GAAAD,QAAA,CAAAxB,IAAA;EAAA","ignoreList":[]}