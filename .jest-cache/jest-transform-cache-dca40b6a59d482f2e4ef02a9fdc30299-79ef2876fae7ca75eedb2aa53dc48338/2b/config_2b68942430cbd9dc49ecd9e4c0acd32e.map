{"file":"/Users/gamzaramazanov/Desktop/fumo/config/env/config.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/config/env/config.ts"],"sourcesContent":["/**\n * Environment Configuration\n *\n * Main environment configuration class.\n * Clean, focused configuration with better organization.\n */\n\nimport { EnvConfig, Environment } from './types';\nimport { ENV_DEFAULTS } from './constants';\nimport {\n  getCurrentEnvironment,\n  isDevelopment,\n  isPreview,\n  isProduction,\n  isTest,\n} from './validation';\n\nexport class EnvironmentConfig implements EnvConfig {\n  // Environment detection\n  public readonly isDevelopment: boolean;\n  public readonly isProduction: boolean;\n  public readonly isTest: boolean;\n  public readonly isPreview: boolean;\n\n  // Core configuration\n  public readonly port: number;\n  public readonly appName: string;\n  public readonly appVersion: string;\n  public readonly appEnv: Environment;\n\n  // API configuration\n  public readonly apiUrl: string;\n  public readonly wsUrl: string;\n  public readonly graphqlUrl: string;\n\n  // Security configuration\n  public readonly jwtSecret: string;\n  public readonly jwtExpiresIn: string;\n  public readonly rateLimitWindowMs: number;\n  public readonly rateLimitMaxRequests: number;\n\n  // Monitoring configuration\n  public readonly sentryDsn: string;\n  public readonly analyticsId: string;\n\n  // Debug configuration\n  public readonly debugEnabled: boolean;\n\n  constructor() {\n    const currentEnv = getCurrentEnvironment();\n\n    // Environment detection\n    this.isDevelopment = isDevelopment();\n    this.isProduction = isProduction();\n    this.isTest = isTest();\n    this.isPreview = isPreview();\n\n    // Core configuration\n    this.port = this.getNumber('PORT', Number(ENV_DEFAULTS.PORT) || 3000);\n    this.appName = this.getString(\n      'NEXT_PUBLIC_APP_NAME',\n      ENV_DEFAULTS.NEXT_PUBLIC_APP_NAME || 'Abstract Team'\n    );\n    this.appVersion = this.getString(\n      'NEXT_PUBLIC_APP_VERSION',\n      ENV_DEFAULTS.NEXT_PUBLIC_APP_VERSION || '2.0.0'\n    );\n    this.appEnv = currentEnv;\n\n    // API configuration\n    this.apiUrl = this.getString(\n      'NEXT_PUBLIC_API_URL',\n      ENV_DEFAULTS.NEXT_PUBLIC_API_URL || 'http://localhost:3000/api'\n    );\n    this.wsUrl = this.getString(\n      'NEXT_PUBLIC_WS_URL',\n      ENV_DEFAULTS.NEXT_PUBLIC_WS_URL || 'ws://localhost:3000/ws'\n    );\n    this.graphqlUrl = this.getString(\n      'NEXT_PUBLIC_GRAPHQL_URL',\n      ENV_DEFAULTS.NEXT_PUBLIC_GRAPHQL_URL || 'http://localhost:3000/graphql'\n    );\n\n    // Security configuration\n    this.jwtSecret = this.getString(\n      'JWT_SECRET',\n      ENV_DEFAULTS.JWT_SECRET || 'your-super-secret-jwt-key-change-in-production'\n    );\n    this.jwtExpiresIn = this.getString('JWT_EXPIRES_IN', ENV_DEFAULTS.JWT_EXPIRES_IN || '1h');\n    this.rateLimitWindowMs = this.getNumber(\n      'RATE_LIMIT_WINDOW_MS',\n      parseInt(ENV_DEFAULTS.RATE_LIMIT_WINDOW_MS || '900000')\n    );\n    this.rateLimitMaxRequests = this.getNumber(\n      'RATE_LIMIT_MAX_REQUESTS',\n      parseInt(ENV_DEFAULTS.RATE_LIMIT_MAX_REQUESTS || '100')\n    );\n\n    // Monitoring configuration\n    this.sentryDsn = this.getString('SENTRY_DSN', ENV_DEFAULTS.SENTRY_DSN || '');\n    this.analyticsId = this.getString(\n      'NEXT_PUBLIC_ANALYTICS_ID',\n      ENV_DEFAULTS.NEXT_PUBLIC_ANALYTICS_ID || ''\n    );\n\n    // Debug configuration\n    this.debugEnabled = this.getBoolean(\n      'NEXT_PUBLIC_DEBUG',\n      ENV_DEFAULTS.NEXT_PUBLIC_DEBUG === 'true'\n    );\n  }\n\n  private getString(key: string, defaultValue: string): string {\n    const value = process.env[key];\n    return value !== undefined ? value : defaultValue;\n  }\n\n  private getNumber(key: string, defaultValue: number): number {\n    const value = process.env[key];\n    if (value === undefined) return defaultValue;\n    const parsed = Number(value);\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n\n  private getBoolean(key: string, defaultValue: boolean): boolean {\n    const value = process.env[key];\n    if (value === undefined) return defaultValue;\n    return value === 'true' || value === '1';\n  }\n\n  public validate(): void {\n    // Validate JWT secret in production\n    if (this.isProduction) {\n      if (\n        !this.jwtSecret ||\n        this.jwtSecret ===\n          (ENV_DEFAULTS.JWT_SECRET || 'your-super-secret-jwt-key-change-in-production')\n      ) {\n        throw new Error('JWT_SECRET must be changed from default value in production');\n      }\n    }\n  }\n}\n\nexport const envConfig = new EnvironmentConfig();\nexport const validateEnvironment = () => envConfig.validate();\n"],"version":3}