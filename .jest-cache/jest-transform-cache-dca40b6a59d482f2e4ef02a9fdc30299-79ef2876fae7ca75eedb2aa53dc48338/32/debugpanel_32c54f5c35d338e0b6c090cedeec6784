da291111c70897e47312d2cda23f6939
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugPanel = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importStar(require("react"));
var debug_panel_module_scss_1 = __importDefault(require("./debug-panel.module.scss"));
var DebugPanel = function (_a) {
    var className = _a.className;
    var _b = (0, react_1.useState)(false), isOpen = _b[0], setIsOpen = _b[1];
    var _c = (0, react_1.useState)({
        performance: {
            renderTime: 0,
            memoryUsage: 0,
            lcp: 0,
            fcp: 0,
            cls: 0,
        },
        errors: {
            count: 0,
            messages: [],
        },
        state: {},
    }), debugData = _c[0], setDebugData = _c[1];
    (0, react_1.useEffect)(function () {
        // Simulate debug data collection
        var interval = setInterval(function () {
            setDebugData({
                performance: {
                    renderTime: Math.random() * 50,
                    memoryUsage: Math.random() * 200,
                    lcp: Math.random() * 3000,
                    fcp: Math.random() * 2000,
                    cls: Math.random() * 0.2,
                },
                errors: {
                    count: Math.floor(Math.random() * 3),
                    messages: ['Sample error message'],
                },
                state: {
                    user: 'john_doe',
                    theme: 'dark',
                },
            });
        }, 1000);
        return function () { return clearInterval(interval); };
    }, []);
    return ((0, jsx_runtime_1.jsxs)("div", { className: "".concat(debug_panel_module_scss_1.default.panel, " ").concat(className || ''), children: [(0, jsx_runtime_1.jsx)("button", { onClick: function () { return setIsOpen(!isOpen); }, className: debug_panel_module_scss_1.default.toggleButton, children: "Debug" }), isOpen && ((0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.panelContent, children: [(0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.panelHeader, children: [(0, jsx_runtime_1.jsx)("h3", { className: debug_panel_module_scss_1.default.panelTitle, children: "Debug Panel" }), (0, jsx_runtime_1.jsx)("button", { onClick: function () { return setIsOpen(false); }, className: debug_panel_module_scss_1.default.closeButton, children: "\u00D7" })] }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h4", { className: debug_panel_module_scss_1.default.sectionTitle, children: "Performance" }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.sectionContent, children: [(0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.sectionRow, children: [(0, jsx_runtime_1.jsx)("span", { className: debug_panel_module_scss_1.default.sectionLabel, children: "Render Time:" }), (0, jsx_runtime_1.jsxs)("span", { className: debug_panel_module_scss_1.default.sectionValue, children: [debugData.performance.renderTime.toFixed(2), "ms"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.sectionRow, children: [(0, jsx_runtime_1.jsx)("span", { className: debug_panel_module_scss_1.default.sectionLabel, children: "Memory:" }), (0, jsx_runtime_1.jsxs)("span", { className: debug_panel_module_scss_1.default.sectionValue, children: [debugData.performance.memoryUsage.toFixed(2), "MB"] })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h4", { className: debug_panel_module_scss_1.default.sectionTitle, children: "Errors" }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.sectionContent, children: [(0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.sectionRow, children: [(0, jsx_runtime_1.jsx)("span", { className: debug_panel_module_scss_1.default.sectionLabel, children: "Count:" }), (0, jsx_runtime_1.jsx)("span", { className: debugData.errors.count > 0 ? debug_panel_module_scss_1.default.sectionValueError : debug_panel_module_scss_1.default.sectionValueGood, children: debugData.errors.count })] }), debugData.errors.messages.map(function (message, index) { return ((0, jsx_runtime_1.jsx)("div", { className: debug_panel_module_scss_1.default.errorList, children: message }, index)); })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: debug_panel_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h4", { className: debug_panel_module_scss_1.default.sectionTitle, children: "State" }), (0, jsx_runtime_1.jsx)("div", { className: debug_panel_module_scss_1.default.stateContainer, children: Object.keys(debugData.state).length > 0 ? ((0, jsx_runtime_1.jsx)("pre", { children: JSON.stringify(debugData.state, null, 2) })) : ((0, jsx_runtime_1.jsx)("span", { className: debug_panel_module_scss_1.default.stateEmpty, children: "No state data" })) })] })] }))] }));
};
exports.DebugPanel = DebugPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,