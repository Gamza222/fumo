076f8abc9b9f0ab5a786ea7a49aa0e2e
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.componentGenerator = componentGenerator;
var fs = __importStar(require("fs"));
var path_1 = __importDefault(require("path"));
function componentGenerator(config) {
    var name = config.name, layer = config.layer, type = config.type, _a = config.description, description = _a === void 0 ? '' : _a;
    // Validate layer and type combination
    if (layer === 'shared' && !['ui', 'lib', 'model'].includes(type)) {
        throw new Error('Shared layer only supports ui, lib, or model types');
    }
    if (layer === 'widgets' && type !== 'ui') {
        throw new Error('Widgets layer only supports ui type');
    }
    if (layer === 'infrastructure' && !['lib', 'api'].includes(type)) {
        throw new Error('Infrastructure layer only supports lib or api types');
    }
    var componentDir = path_1.default.join('src', layer, type, name);
    // Create directory if it doesn't exist
    if (!fs.existsSync(componentDir)) {
        fs.mkdirSync(componentDir, { recursive: true });
    }
    // Generate component file
    var componentContent = generateComponentFile(name, description);
    fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".tsx")), componentContent);
    // Generate test file
    var testContent = generateTestFile(name);
    fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".test.tsx")), testContent);
    // Generate stories file
    var storiesContent = generateStoriesFile(name, description);
    fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".stories.tsx")), storiesContent);
    // Generate index file
    var indexContent = generateIndexFile(name);
    fs.writeFileSync(path_1.default.join(componentDir, 'index.ts'), indexContent);
    // Component ${name} generated successfully in ${componentDir}
    // Files created:
    //   - ${name}.tsx
    //   - ${name}.test.tsx
    //   - ${name}.stories.tsx
    //   - index.ts
}
function generateComponentFile(name, description) {
    return "import React from 'react';\nimport { classNames } from '@/shared/lib/utils/classNames';\n\nexport interface ".concat(name, "Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Add your props here\n}\n\n/**\n * ").concat(description || "".concat(name, " component"), "\n * \n * @param props - Component props\n * @returns JSX element\n */\nexport function ").concat(name, "({ className, children, ...props }: ").concat(name, "Props) {\n  return (\n    <div \n      className={classNames('").concat(name.toLowerCase(), "', {}, [className])}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n");
}
function generateTestFile(name) {
    return "import { render, screen } from '@testing-library/react';\nimport { ".concat(name, " } from './").concat(name, "';\n\ndescribe('").concat(name, "', () => {\n  it('renders without crashing', () => {\n    render(<").concat(name, ">Test content</").concat(name, ">);\n    expect(screen.getByText('Test content')).toBeInTheDocument();\n  });\n\n  it('applies custom className', () => {\n    render(<").concat(name, " className=\"custom-class\">Test</").concat(name, ">);\n    const element = screen.getByText('Test');\n    expect(element).toHaveClass('custom-class');\n    expect(element).toHaveClass('").concat(name.toLowerCase(), "');\n  });\n\n  it('renders children correctly', () => {\n    render(\n      <").concat(name, ">\n        <span>Child 1</span>\n        <span>Child 2</span>\n      </").concat(name, ">\n    );\n    expect(screen.getByText('Child 1')).toBeInTheDocument();\n    expect(screen.getByText('Child 2')).toBeInTheDocument();\n  });\n});\n");
}
function generateStoriesFile(name, description) {
    return "import type { Meta, StoryObj } from '@storybook/react';\nimport { ".concat(name, " } from './").concat(name, "';\n\nconst meta: Meta<typeof ").concat(name, "> = {\n  title: '").concat(name, "',\n  component: ").concat(name, ",\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: '").concat(description || "".concat(name, " component"), "',\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Custom CSS class',\n    },\n    children: {\n      control: 'text',\n      description: 'Content to render inside the component',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    children: 'Default ").concat(name, "',\n  },\n};\n\nexport const WithCustomContent: Story = {\n  args: {\n    children: (\n      <div>\n        <h3>Custom Content</h3>\n        <p>This is custom content inside ").concat(name, "</p>\n      </div>\n    ),\n  },\n};\n\nexport const WithCustomClassName: Story = {\n  args: {\n    className: 'custom-").concat(name.toLowerCase(), "-class',\n    children: 'Styled ").concat(name, "',\n  },\n};\n");
}
function generateIndexFile(name) {
    return "export { ".concat(name, " } from './").concat(name, "';\nexport type { ").concat(name, "Props } from './").concat(name, "';\n");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,