2e2d446162c59d6ca8d0790c529476e1
"use strict";

/* istanbul ignore next */
function cov_2c94nu74fs() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts";
  var hash = "5cba71f0d80094beaad50f31e7ad14659077608c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "39": {
        start: {
          line: 40,
          column: 9
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "40": {
        start: {
          line: 41,
          column: 13
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "41": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "42": {
        start: {
          line: 100,
          column: 17
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "43": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "44": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 40
        }
      },
      "45": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "46": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "47": {
        start: {
          line: 108,
          column: 35
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "48": {
        start: {
          line: 109,
          column: 23
        },
        end: {
          line: 109,
          column: 34
        }
      },
      "49": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "50": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 67
        }
      },
      "51": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 71
        }
      },
      "52": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 52
        }
      },
      "53": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "54": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "55": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "56": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "57": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "58": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 31
        }
      },
      "59": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 72
        }
      },
      "60": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 18
        }
      },
      "61": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "62": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "63": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 21
        }
      },
      "64": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 35
        }
      },
      "65": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "66": {
        start: {
          line: 143,
          column: 18
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "67": {
        start: {
          line: 143,
          column: 31
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "68": {
        start: {
          line: 144,
          column: 19
        },
        end: {
          line: 144,
          column: 30
        }
      },
      "69": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 145,
          column: 53
        }
      },
      "70": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 146,
          column: 40
        }
      },
      "71": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "72": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 61
        }
      },
      "73": {
        start: {
          line: 150,
          column: 13
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "74": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 33
        }
      },
      "75": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "76": {
        start: {
          line: 157,
          column: 17
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "77": {
        start: {
          line: 158,
          column: 19
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "78": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "79": {
        start: {
          line: 160,
          column: 22
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "80": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 161,
          column: 45
        }
      },
      "81": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "82": {
        start: {
          line: 162,
          column: 22
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "83": {
        start: {
          line: 162,
          column: 37
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "84": {
        start: {
          line: 163,
          column: 29
        },
        end: {
          line: 163,
          column: 42
        }
      },
      "85": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "86": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "87": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 171,
          column: 17
        }
      },
      "88": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "89": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 53
        }
      },
      "90": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 89
        }
      },
      "91": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "92": {
        start: {
          line: 181,
          column: 18
        },
        end: {
          line: 181,
          column: 20
        }
      },
      "93": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 182,
          column: 56
        }
      },
      "94": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "95": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 185,
          column: 33
        }
      },
      "96": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "97": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 37
        }
      },
      "98": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 19
        }
      },
      "99": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 46
        }
      },
      "100": {
        start: {
          line: 196,
          column: 18
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "101": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "102": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 20
        }
      },
      "103": {
        start: {
          line: 200,
          column: 15
        },
        end: {
          line: 200,
          column: 96
        }
      },
      "104": {
        start: {
          line: 200,
          column: 45
        },
        end: {
          line: 200,
          column: 93
        }
      },
      "105": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "106": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 20
        }
      },
      "107": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "108": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "109": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 16
        }
      },
      "110": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 214,
          column: 53
        }
      },
      "111": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 216,
          column: 27
        }
      },
      "112": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 27
        }
      },
      "113": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 218,
          column: 28
        }
      },
      "114": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 28
        }
      },
      "115": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 220,
          column: 30
        }
      },
      "116": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 30
        }
      },
      "117": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "118": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "119": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 224,
          column: 32
        }
      },
      "120": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 32
        }
      },
      "121": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 226,
          column: 21
        }
      },
      "122": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 21
        }
      },
      "123": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "fsdValidator",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 21
          }
        },
        loc: {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 98
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 117,
            column: 34
          },
          end: {
            line: 117,
            column: 35
          }
        },
        loc: {
          start: {
            line: 117,
            column: 52
          },
          end: {
            line: 119,
            column: 13
          }
        },
        line: 117
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 123,
            column: 36
          },
          end: {
            line: 123,
            column: 37
          }
        },
        loc: {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 123
      },
      "13": {
        name: "getAllTsFiles",
        decl: {
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 22
          }
        },
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 137
      },
      "14": {
        name: "validateFile",
        decl: {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 21
          }
        },
        loc: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 156
      },
      "15": {
        name: "extractImports",
        decl: {
          start: {
            line: 180,
            column: 9
          },
          end: {
            line: 180,
            column: 23
          }
        },
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 180
      },
      "16": {
        name: "checkImportViolation",
        decl: {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 194,
            column: 29
          }
        },
        loc: {
          start: {
            line: 194,
            column: 52
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 194
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 30
          },
          end: {
            line: 200,
            column: 31
          }
        },
        loc: {
          start: {
            line: 200,
            column: 43
          },
          end: {
            line: 200,
            column: 95
          }
        },
        line: 200
      },
      "18": {
        name: "getLayerFromPath",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 25
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 212
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "22": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "23": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 26
          }
        }, {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 127,
            column: 58
          }
        }],
        line: 127
      },
      "24": {
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 152,
            column: 9
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "27": {
        loc: {
          start: {
            line: 150,
            column: 17
          },
          end: {
            line: 150,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 17
          },
          end: {
            line: 150,
            column: 37
          }
        }, {
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 150,
            column: 62
          }
        }],
        line: 150
      },
      "28": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "29": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        }, {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 171,
            column: 17
          }
        }],
        line: 166
      },
      "30": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "31": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 188,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 22
          }
        }, {
          start: {
            line: 188,
            column: 13
          },
          end: {
            line: 188,
            column: 40
          }
        }, {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 188,
            column: 71
          }
        }, {
          start: {
            line: 188,
            column: 75
          },
          end: {
            line: 188,
            column: 103
          }
        }],
        line: 187
      },
      "32": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "33": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 197,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 197,
            column: 18
          }
        }, {
          start: {
            line: 197,
            column: 22
          },
          end: {
            line: 197,
            column: 30
          }
        }],
        line: 197
      },
      "34": {
        loc: {
          start: {
            line: 200,
            column: 52
          },
          end: {
            line: 200,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 52
          },
          end: {
            line: 200,
            column: 72
          }
        }, {
          start: {
            line: 200,
            column: 76
          },
          end: {
            line: 200,
            column: 92
          }
        }],
        line: 200
      },
      "35": {
        loc: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "36": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "37": {
        loc: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 216,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 216,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "38": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 218,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 218,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "39": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 220,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 220,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "40": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 222,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 222,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "41": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 224,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 224,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "42": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 226,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 226,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts"],
      sourcesContent: ["import * as fs from 'fs';\nimport path from 'path';\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\ninterface FSDRule {\n  from: string;\n  to: string;\n  allowed: boolean;\n  reason: string;\n}\n\n// FSD Architecture Rules\nconst FSD_RULES: FSDRule[] = [\n  // Shared layer rules\n  { from: 'shared/ui', to: 'shared/lib', allowed: true, reason: 'UI can use shared utilities' },\n  { from: 'shared/ui', to: 'shared/model', allowed: true, reason: 'UI can use shared models' },\n  { from: 'shared/lib', to: 'shared/model', allowed: true, reason: 'Lib can use shared models' },\n  {\n    from: 'shared/model',\n    to: 'shared/ui',\n    allowed: false,\n    reason: 'Models should not depend on UI',\n  },\n  {\n    from: 'shared/model',\n    to: 'shared/lib',\n    allowed: false,\n    reason: 'Models should not depend on lib',\n  },\n\n  // Widgets layer rules\n  { from: 'widgets', to: 'shared', allowed: true, reason: 'Widgets can use shared components' },\n  {\n    from: 'widgets',\n    to: 'infrastructure',\n    allowed: true,\n    reason: 'Widgets can use infrastructure',\n  },\n  {\n    from: 'widgets',\n    to: 'widgets',\n    allowed: false,\n    reason: 'Widgets should not depend on other widgets',\n  },\n\n  // Infrastructure layer rules\n  {\n    from: 'infrastructure',\n    to: 'shared',\n    allowed: true,\n    reason: 'Infrastructure can use shared utilities',\n  },\n  {\n    from: 'infrastructure',\n    to: 'widgets',\n    allowed: false,\n    reason: 'Infrastructure should not depend on widgets',\n  },\n  {\n    from: 'infrastructure',\n    to: 'infrastructure',\n    allowed: true,\n    reason: 'Infrastructure can use other infrastructure',\n  },\n\n  // App layer rules\n  { from: 'app', to: 'shared', allowed: true, reason: 'App can use shared components' },\n  { from: 'app', to: 'widgets', allowed: true, reason: 'App can use widgets' },\n  { from: 'app', to: 'infrastructure', allowed: true, reason: 'App can use infrastructure' },\n];\n\nexport function fsdValidator(): ValidationResult {\n  const result: ValidationResult = {\n    isValid: true,\n    errors: [],\n    warnings: [],\n  };\n\n  try {\n    // Get all TypeScript files\n    const files = getAllTsFiles('src');\n\n    for (const file of files) {\n      const violations = validateFile(file);\n      result.errors.push(...violations.errors);\n      result.warnings.push(...violations.warnings);\n    }\n\n    result.isValid = result.errors.length === 0;\n\n    if (result.errors.length > 0) {\n      // FSD Validation Failed\n      result.errors.forEach((_error) => {\n        // Error: ${_error}\n      });\n    }\n\n    if (result.warnings.length > 0) {\n      // FSD Warnings\n      result.warnings.forEach((_warning) => {\n        // Warning: ${_warning}\n      });\n    }\n\n    if (result.isValid && result.warnings.length === 0) {\n      // FSD Validation Passed - No violations found\n    }\n  } catch (error) {\n    result.isValid = false;\n    result.errors.push(`Validation failed: ${String(error)}`);\n  }\n\n  return result;\n}\n\nfunction getAllTsFiles(dir: string): string[] {\n  const files: string[] = [];\n\n  if (!fs.existsSync(dir)) {\n    return files;\n  }\n\n  const items = fs.readdirSync(dir);\n\n  for (const item of items) {\n    const fullPath = path.join(dir, item);\n    const stat = fs.statSync(fullPath);\n\n    if (stat.isDirectory()) {\n      files.push(...getAllTsFiles(fullPath));\n    } else if (item.endsWith('.ts') || item.endsWith('.tsx')) {\n      files.push(fullPath);\n    }\n  }\n\n  return files;\n}\n\nfunction validateFile(filePath: string): { errors: string[]; warnings: string[] } {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n\n  try {\n    const content = fs.readFileSync(filePath, 'utf-8');\n    const imports = extractImports(content);\n\n    for (const importPath of imports) {\n      const violation = checkImportViolation(filePath, importPath);\n      if (violation) {\n        if (violation.severity === 'error') {\n          errors.push(violation.message);\n        } else {\n          warnings.push(violation.message);\n        }\n      }\n    }\n  } catch (error) {\n    errors.push(`Failed to read file ${filePath}: ${String(error)}`);\n  }\n\n  return { errors, warnings };\n}\n\nfunction extractImports(content: string): string[] {\n  const imports: string[] = [];\n  const importRegex = /import.*from\\s+['\"]([^'\"]+)['\"]/g;\n  let match;\n\n  while ((match = importRegex.exec(content)) !== null) {\n    const importPath = match[1];\n    // Only check internal imports (starting with @/ or ./)\n    if (\n      importPath &&\n      (importPath.startsWith('@/') || importPath.startsWith('./') || importPath.startsWith('../'))\n    ) {\n      imports.push(importPath);\n    }\n  }\n\n  return imports;\n}\n\nfunction checkImportViolation(\n  filePath: string,\n  importPath: string\n): { message: string; severity: 'error' | 'warning' } | null {\n  const fromLayer = getLayerFromPath(filePath);\n  const toLayer = getLayerFromPath(importPath);\n\n  if (!fromLayer || !toLayer) {\n    return null; // Skip external imports or unrecognized paths\n  }\n\n  const rule = FSD_RULES.find((r) => r.from === fromLayer && r.to === toLayer);\n\n  if (!rule) {\n    return null; // No rule defined, assume allowed\n  }\n\n  if (!rule.allowed) {\n    return {\n      message: `\u274C ${filePath}: Cannot import from ${toLayer} (${rule.reason})`,\n      severity: 'error',\n    };\n  }\n\n  return null; // Import is allowed\n}\n\nfunction getLayerFromPath(filePath: string): string | null {\n  // Convert file path to layer path\n  const normalizedPath = filePath.replace(/\\\\/g, '/');\n\n  if (normalizedPath.includes('/shared/ui/')) return 'shared/ui';\n  if (normalizedPath.includes('/shared/lib/')) return 'shared/lib';\n  if (normalizedPath.includes('/shared/model/')) return 'shared/model';\n  if (normalizedPath.includes('/widgets/')) return 'widgets';\n  if (normalizedPath.includes('/infrastructure/')) return 'infrastructure';\n  if (normalizedPath.includes('/app/')) return 'app';\n\n  return null;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5cba71f0d80094beaad50f31e7ad14659077608c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c94nu74fs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c94nu74fs();
var __createBinding =
/* istanbul ignore next */
(cov_2c94nu74fs().s[0]++,
/* istanbul ignore next */
(cov_2c94nu74fs().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2c94nu74fs().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2c94nu74fs().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2c94nu74fs().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[0]++;
  cov_2c94nu74fs().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[2][0]++;
    cov_2c94nu74fs().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2c94nu74fs().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[5][1]++,
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[3][0]++;
    cov_2c94nu74fs().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2c94nu74fs().f[1]++;
        cov_2c94nu74fs().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[3][1]++;
  }
  cov_2c94nu74fs().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2c94nu74fs().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[2]++;
  cov_2c94nu74fs().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[7][0]++;
    cov_2c94nu74fs().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[7][1]++;
  }
  cov_2c94nu74fs().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2c94nu74fs().s[11]++,
/* istanbul ignore next */
(cov_2c94nu74fs().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2c94nu74fs().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2c94nu74fs().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2c94nu74fs().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[3]++;
  cov_2c94nu74fs().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2c94nu74fs().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[4]++;
  cov_2c94nu74fs().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2c94nu74fs().s[14]++,
/* istanbul ignore next */
(cov_2c94nu74fs().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2c94nu74fs().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2c94nu74fs().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[5]++;
  cov_2c94nu74fs().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2c94nu74fs().f[6]++;
    cov_2c94nu74fs().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2c94nu74fs().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[17]++, []);
      /* istanbul ignore next */
      cov_2c94nu74fs().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2c94nu74fs().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2c94nu74fs().b[12][0]++;
          cov_2c94nu74fs().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2c94nu74fs().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2c94nu74fs().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2c94nu74fs().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2c94nu74fs().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2c94nu74fs().f[8]++;
    cov_2c94nu74fs().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[13][0]++;
      cov_2c94nu74fs().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[26]++, {});
    /* istanbul ignore next */
    cov_2c94nu74fs().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[15][0]++;
      cov_2c94nu74fs().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2c94nu74fs().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2c94nu74fs().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2c94nu74fs().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2c94nu74fs().b[16][0]++;
          cov_2c94nu74fs().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2c94nu74fs().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[15][1]++;
    }
    cov_2c94nu74fs().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2c94nu74fs().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_2c94nu74fs().s[35]++,
/* istanbul ignore next */
(cov_2c94nu74fs().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_2c94nu74fs().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2c94nu74fs().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[9]++;
  cov_2c94nu74fs().s[36]++;
  return /* istanbul ignore next */(cov_2c94nu74fs().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2c94nu74fs().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c94nu74fs().s[38]++;
exports.fsdValidator = fsdValidator;
var fs =
/* istanbul ignore next */
(cov_2c94nu74fs().s[39]++, __importStar(require("fs")));
var path_1 =
/* istanbul ignore next */
(cov_2c94nu74fs().s[40]++, __importDefault(require("path")));
// FSD Architecture Rules
var FSD_RULES =
/* istanbul ignore next */
(cov_2c94nu74fs().s[41]++, [
// Shared layer rules
{
  from: 'shared/ui',
  to: 'shared/lib',
  allowed: true,
  reason: 'UI can use shared utilities'
}, {
  from: 'shared/ui',
  to: 'shared/model',
  allowed: true,
  reason: 'UI can use shared models'
}, {
  from: 'shared/lib',
  to: 'shared/model',
  allowed: true,
  reason: 'Lib can use shared models'
}, {
  from: 'shared/model',
  to: 'shared/ui',
  allowed: false,
  reason: 'Models should not depend on UI'
}, {
  from: 'shared/model',
  to: 'shared/lib',
  allowed: false,
  reason: 'Models should not depend on lib'
},
// Widgets layer rules
{
  from: 'widgets',
  to: 'shared',
  allowed: true,
  reason: 'Widgets can use shared components'
}, {
  from: 'widgets',
  to: 'infrastructure',
  allowed: true,
  reason: 'Widgets can use infrastructure'
}, {
  from: 'widgets',
  to: 'widgets',
  allowed: false,
  reason: 'Widgets should not depend on other widgets'
},
// Infrastructure layer rules
{
  from: 'infrastructure',
  to: 'shared',
  allowed: true,
  reason: 'Infrastructure can use shared utilities'
}, {
  from: 'infrastructure',
  to: 'widgets',
  allowed: false,
  reason: 'Infrastructure should not depend on widgets'
}, {
  from: 'infrastructure',
  to: 'infrastructure',
  allowed: true,
  reason: 'Infrastructure can use other infrastructure'
},
// App layer rules
{
  from: 'app',
  to: 'shared',
  allowed: true,
  reason: 'App can use shared components'
}, {
  from: 'app',
  to: 'widgets',
  allowed: true,
  reason: 'App can use widgets'
}, {
  from: 'app',
  to: 'infrastructure',
  allowed: true,
  reason: 'App can use infrastructure'
}]);
function fsdValidator() {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[10]++;
  var _a, _b;
  var result =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[42]++, {
    isValid: true,
    errors: [],
    warnings: []
  });
  /* istanbul ignore next */
  cov_2c94nu74fs().s[43]++;
  try {
    // Get all TypeScript files
    var files =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[44]++, getAllTsFiles('src'));
    /* istanbul ignore next */
    cov_2c94nu74fs().s[45]++;
    for (var _i =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[46]++, 0), files_1 =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[47]++, files); _i < files_1.length; _i++) {
      var file =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[48]++, files_1[_i]);
      var violations =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[49]++, validateFile(file));
      /* istanbul ignore next */
      cov_2c94nu74fs().s[50]++;
      (_a = result.errors).push.apply(_a, violations.errors);
      /* istanbul ignore next */
      cov_2c94nu74fs().s[51]++;
      (_b = result.warnings).push.apply(_b, violations.warnings);
    }
    /* istanbul ignore next */
    cov_2c94nu74fs().s[52]++;
    result.isValid = result.errors.length === 0;
    /* istanbul ignore next */
    cov_2c94nu74fs().s[53]++;
    if (result.errors.length > 0) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[20][0]++;
      cov_2c94nu74fs().s[54]++;
      // FSD Validation Failed
      result.errors.forEach(function (_error) {
        /* istanbul ignore next */
        cov_2c94nu74fs().f[11]++;
      } // Error: ${_error}
      );
    } else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[20][1]++;
    }
    cov_2c94nu74fs().s[55]++;
    if (result.warnings.length > 0) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[21][0]++;
      cov_2c94nu74fs().s[56]++;
      // FSD Warnings
      result.warnings.forEach(function (_warning) {
        /* istanbul ignore next */
        cov_2c94nu74fs().f[12]++;
      } // Warning: ${_warning}
      );
    } else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[21][1]++;
    }
    cov_2c94nu74fs().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[23][0]++, result.isValid) &&
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[23][1]++, result.warnings.length === 0)) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[22][0]++;
    } // FSD Validation Passed - No violations found
    else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[22][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2c94nu74fs().s[58]++;
    result.isValid = false;
    /* istanbul ignore next */
    cov_2c94nu74fs().s[59]++;
    result.errors.push("Validation failed: ".concat(String(error)));
  }
  /* istanbul ignore next */
  cov_2c94nu74fs().s[60]++;
  return result;
}
function getAllTsFiles(dir) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[13]++;
  var files =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[61]++, []);
  /* istanbul ignore next */
  cov_2c94nu74fs().s[62]++;
  if (!fs.existsSync(dir)) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[24][0]++;
    cov_2c94nu74fs().s[63]++;
    return files;
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[24][1]++;
  }
  var items =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[64]++, fs.readdirSync(dir));
  /* istanbul ignore next */
  cov_2c94nu74fs().s[65]++;
  for (var _i =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[66]++, 0), items_1 =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[67]++, items); _i < items_1.length; _i++) {
    var item =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[68]++, items_1[_i]);
    var fullPath =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[69]++, path_1.default.join(dir, item));
    var stat =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[70]++, fs.statSync(fullPath));
    /* istanbul ignore next */
    cov_2c94nu74fs().s[71]++;
    if (stat.isDirectory()) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[25][0]++;
      cov_2c94nu74fs().s[72]++;
      files.push.apply(files, getAllTsFiles(fullPath));
    } else {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[25][1]++;
      cov_2c94nu74fs().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_2c94nu74fs().b[27][0]++, item.endsWith('.ts')) ||
      /* istanbul ignore next */
      (cov_2c94nu74fs().b[27][1]++, item.endsWith('.tsx'))) {
        /* istanbul ignore next */
        cov_2c94nu74fs().b[26][0]++;
        cov_2c94nu74fs().s[74]++;
        files.push(fullPath);
      } else
      /* istanbul ignore next */
      {
        cov_2c94nu74fs().b[26][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2c94nu74fs().s[75]++;
  return files;
}
function validateFile(filePath) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[14]++;
  var errors =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[76]++, []);
  var warnings =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[77]++, []);
  /* istanbul ignore next */
  cov_2c94nu74fs().s[78]++;
  try {
    var content =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[79]++, fs.readFileSync(filePath, 'utf-8'));
    var imports =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[80]++, extractImports(content));
    /* istanbul ignore next */
    cov_2c94nu74fs().s[81]++;
    for (var _i =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[82]++, 0), imports_1 =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[83]++, imports); _i < imports_1.length; _i++) {
      var importPath =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[84]++, imports_1[_i]);
      var violation =
      /* istanbul ignore next */
      (cov_2c94nu74fs().s[85]++, checkImportViolation(filePath, importPath));
      /* istanbul ignore next */
      cov_2c94nu74fs().s[86]++;
      if (violation) {
        /* istanbul ignore next */
        cov_2c94nu74fs().b[28][0]++;
        cov_2c94nu74fs().s[87]++;
        if (violation.severity === 'error') {
          /* istanbul ignore next */
          cov_2c94nu74fs().b[29][0]++;
          cov_2c94nu74fs().s[88]++;
          errors.push(violation.message);
        } else {
          /* istanbul ignore next */
          cov_2c94nu74fs().b[29][1]++;
          cov_2c94nu74fs().s[89]++;
          warnings.push(violation.message);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2c94nu74fs().b[28][1]++;
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2c94nu74fs().s[90]++;
    errors.push("Failed to read file ".concat(filePath, ": ").concat(String(error)));
  }
  /* istanbul ignore next */
  cov_2c94nu74fs().s[91]++;
  return {
    errors: errors,
    warnings: warnings
  };
}
function extractImports(content) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[15]++;
  var imports =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[92]++, []);
  var importRegex =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[93]++, /import.*from\s+['"]([^'"]+)['"]/g);
  var match;
  /* istanbul ignore next */
  cov_2c94nu74fs().s[94]++;
  while ((match = importRegex.exec(content)) !== null) {
    var importPath =
    /* istanbul ignore next */
    (cov_2c94nu74fs().s[95]++, match[1]);
    // Only check internal imports (starting with @/ or ./)
    /* istanbul ignore next */
    cov_2c94nu74fs().s[96]++;
    if (
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[31][0]++, importPath) && (
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[31][1]++, importPath.startsWith('@/')) ||
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[31][2]++, importPath.startsWith('./')) ||
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[31][3]++, importPath.startsWith('../')))) {
      /* istanbul ignore next */
      cov_2c94nu74fs().b[30][0]++;
      cov_2c94nu74fs().s[97]++;
      imports.push(importPath);
    } else
    /* istanbul ignore next */
    {
      cov_2c94nu74fs().b[30][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2c94nu74fs().s[98]++;
  return imports;
}
function checkImportViolation(filePath, importPath) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[16]++;
  var fromLayer =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[99]++, getLayerFromPath(filePath));
  var toLayer =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[100]++, getLayerFromPath(importPath));
  /* istanbul ignore next */
  cov_2c94nu74fs().s[101]++;
  if (
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[33][0]++, !fromLayer) ||
  /* istanbul ignore next */
  (cov_2c94nu74fs().b[33][1]++, !toLayer)) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[32][0]++;
    cov_2c94nu74fs().s[102]++;
    return null; // Skip external imports or unrecognized paths
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[32][1]++;
  }
  var rule =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[103]++, FSD_RULES.find(function (r) {
    /* istanbul ignore next */
    cov_2c94nu74fs().f[17]++;
    cov_2c94nu74fs().s[104]++;
    return /* istanbul ignore next */(cov_2c94nu74fs().b[34][0]++, r.from === fromLayer) &&
    /* istanbul ignore next */
    (cov_2c94nu74fs().b[34][1]++, r.to === toLayer);
  }));
  /* istanbul ignore next */
  cov_2c94nu74fs().s[105]++;
  if (!rule) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[35][0]++;
    cov_2c94nu74fs().s[106]++;
    return null; // No rule defined, assume allowed
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[35][1]++;
  }
  cov_2c94nu74fs().s[107]++;
  if (!rule.allowed) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[36][0]++;
    cov_2c94nu74fs().s[108]++;
    return {
      message: "\u274C ".concat(filePath, ": Cannot import from ").concat(toLayer, " (").concat(rule.reason, ")"),
      severity: 'error'
    };
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[36][1]++;
  }
  cov_2c94nu74fs().s[109]++;
  return null; // Import is allowed
}
function getLayerFromPath(filePath) {
  /* istanbul ignore next */
  cov_2c94nu74fs().f[18]++;
  // Convert file path to layer path
  var normalizedPath =
  /* istanbul ignore next */
  (cov_2c94nu74fs().s[110]++, filePath.replace(/\\/g, '/'));
  /* istanbul ignore next */
  cov_2c94nu74fs().s[111]++;
  if (normalizedPath.includes('/shared/ui/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[37][0]++;
    cov_2c94nu74fs().s[112]++;
    return 'shared/ui';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[37][1]++;
  }
  cov_2c94nu74fs().s[113]++;
  if (normalizedPath.includes('/shared/lib/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[38][0]++;
    cov_2c94nu74fs().s[114]++;
    return 'shared/lib';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[38][1]++;
  }
  cov_2c94nu74fs().s[115]++;
  if (normalizedPath.includes('/shared/model/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[39][0]++;
    cov_2c94nu74fs().s[116]++;
    return 'shared/model';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[39][1]++;
  }
  cov_2c94nu74fs().s[117]++;
  if (normalizedPath.includes('/widgets/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[40][0]++;
    cov_2c94nu74fs().s[118]++;
    return 'widgets';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[40][1]++;
  }
  cov_2c94nu74fs().s[119]++;
  if (normalizedPath.includes('/infrastructure/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[41][0]++;
    cov_2c94nu74fs().s[120]++;
    return 'infrastructure';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[41][1]++;
  }
  cov_2c94nu74fs().s[121]++;
  if (normalizedPath.includes('/app/')) {
    /* istanbul ignore next */
    cov_2c94nu74fs().b[42][0]++;
    cov_2c94nu74fs().s[122]++;
    return 'app';
  } else
  /* istanbul ignore next */
  {
    cov_2c94nu74fs().b[42][1]++;
  }
  cov_2c94nu74fs().s[123]++;
  return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,