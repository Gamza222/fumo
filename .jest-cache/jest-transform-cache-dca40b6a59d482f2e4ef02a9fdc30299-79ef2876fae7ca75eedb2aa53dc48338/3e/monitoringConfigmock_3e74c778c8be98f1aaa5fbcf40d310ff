03ad1f4f87f6f17c4c1af009fa2c7943
"use strict";

/**
 * Monitoring Configuration Mock
 *
 * Mock configuration factory for monitoring-related configurations.
 * Provides consistent test configurations across all monitoring tests.
 */
/* istanbul ignore next */
function cov_24smble2wr() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/monitoring/monitoringConfig.mock.ts";
  var hash = "0abb2a88bb5f77dace08182fc27eddcd2f1eb0cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/monitoring/monitoringConfig.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "3": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "4": {
        start: {
          line: 10,
          column: 31
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "5": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "7": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "8": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "11": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 367
        }
      },
      "13": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "15": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 46,
          column: 24
        }
      },
      "17": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 56
        }
      },
      "18": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 69
        }
      },
      "19": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 76,
          column: 3
        }
      },
      "20": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "21": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "22": {
        start: {
          line: 117,
          column: 0
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "23": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "24": {
        start: {
          line: 152,
          column: 0
        },
        end: {
          line: 171,
          column: 3
        }
      },
      "25": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "26": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 218,
          column: 3
        }
      },
      "27": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 258,
          column: 1
        }
      },
      "28": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 257,
          column: 5
        }
      },
      "29": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 48
        }
      },
      "30": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "31": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "32": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 45
        }
      },
      "33": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 46
        }
      },
      "34": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 48
        }
      },
      "35": {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 259,
          column: 58
        }
      },
      "36": {
        start: {
          line: 263,
          column: 19
        },
        end: {
          line: 274,
          column: 1
        }
      },
      "37": {
        start: {
          line: 264,
          column: 18
        },
        end: {
          line: 264,
          column: 20
        }
      },
      "38": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "39": {
        start: {
          line: 265,
          column: 18
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "40": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 36
        }
      },
      "41": {
        start: {
          line: 268,
          column: 17
        },
        end: {
          line: 268,
          column: 59
        }
      },
      "42": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "43": {
        start: {
          line: 269,
          column: 18
        },
        end: {
          line: 269,
          column: 19
        }
      },
      "44": {
        start: {
          line: 269,
          column: 33
        },
        end: {
          line: 269,
          column: 40
        }
      },
      "45": {
        start: {
          line: 270,
          column: 21
        },
        end: {
          line: 270,
          column: 34
        }
      },
      "46": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 351
        }
      },
      "47": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 18
        }
      },
      "48": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 8,
            column: 43
          }
        },
        loc: {
          start: {
            line: 8,
            column: 54
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 9,
            column: 33
          }
        },
        loc: {
          start: {
            line: 9,
            column: 44
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 30
          }
        },
        loc: {
          start: {
            line: 27,
            column: 50
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 225,
            column: 31
          }
        },
        loc: {
          start: {
            line: 225,
            column: 50
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 225
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 263,
            column: 19
          },
          end: {
            line: 263,
            column: 20
          }
        },
        loc: {
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 263
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 15
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 20
          }
        }, {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 37
          }
        }, {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 28
          }
        }, {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 228,
            column: 48
          }
        }, {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 241,
            column: 15
          }
        }, {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 250,
            column: 15
          }
        }, {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 252,
            column: 45
          }
        }, {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 254,
            column: 46
          }
        }, {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 256,
            column: 48
          }
        }],
        line: 226
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/monitoring/monitoringConfig.mock.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/monitoring/monitoringConfig.mock.ts"],
      sourcesContent: ["/**\n * Monitoring Configuration Mock\n *\n * Mock configuration factory for monitoring-related configurations.\n * Provides consistent test configurations across all monitoring tests.\n */\n\nimport { MonitoringConfig } from '@/infrastructure/monitoring/types/monitoring.types';\n\n// ============================================================================\n// BASE CONFIGURATION GENERATORS\n// ============================================================================\n\n/**\n * Create a monitoring configuration with customizable options\n */\nexport const createMonitoringConfig = (\n  overrides: Partial<MonitoringConfig> = {}\n): MonitoringConfig => {\n  return {\n    healthCheck: {\n      enabled: true,\n      interval: 30000,\n      timeout: 5000,\n      services: ['database', 'api', 'cache', 'storage'],\n    },\n    analytics: {\n      enabled: true,\n      respectDoNotTrack: true,\n      anonymizeIp: true,\n      sampleRate: 1.0,\n      debug: false,\n    },\n    alerts: {\n      enabled: true,\n    },\n    dashboard: {\n      refreshInterval: 10000,\n      maxAlerts: 100,\n      maxMetrics: 1000,\n    },\n    ...overrides,\n  };\n};\n\n// ============================================================================\n// DEFAULT CONFIGURATIONS\n// ============================================================================\n\n/**\n * Default monitoring configuration for testing\n */\nexport const mockMonitoringConfig: MonitoringConfig = createMonitoringConfig();\n\n/**\n * Health check specific configuration\n */\nexport const mockHealthCheckConfig: MonitoringConfig = createMonitoringConfig({\n  healthCheck: {\n    enabled: true,\n    interval: 15000,\n    timeout: 3000,\n    services: ['database', 'api'],\n  },\n  analytics: {\n    enabled: false,\n    respectDoNotTrack: true,\n    anonymizeIp: true,\n    sampleRate: 1.0,\n    debug: false,\n  },\n  alerts: {\n    enabled: false,\n  },\n});\n\n/**\n * Analytics specific configuration\n */\nexport const mockAnalyticsConfig: MonitoringConfig = createMonitoringConfig({\n  analytics: {\n    enabled: true,\n    respectDoNotTrack: true,\n    anonymizeIp: true,\n    sampleRate: 0.5,\n    debug: true,\n  },\n  healthCheck: {\n    enabled: false,\n    interval: 30000,\n    timeout: 5000,\n    services: [],\n  },\n  alerts: {\n    enabled: false,\n  },\n});\n\n/**\n * Alerts specific configuration\n */\nexport const mockAlertsConfig: MonitoringConfig = createMonitoringConfig({\n  alerts: {\n    enabled: true,\n    webhook: 'https://hooks.slack.com/services/test',\n    email: 'alerts@company.com',\n  },\n  healthCheck: {\n    enabled: true,\n    interval: 10000,\n    timeout: 2000,\n    services: ['database', 'api', 'cache'],\n  },\n});\n\n/**\n * Dashboard specific configuration\n */\nexport const mockDashboardConfig: MonitoringConfig = createMonitoringConfig({\n  dashboard: {\n    refreshInterval: 5000,\n    maxAlerts: 50,\n    maxMetrics: 500,\n  },\n});\n\n// ============================================================================\n// SPECIALIZED CONFIGURATIONS\n// ============================================================================\n\n/**\n * Development environment configuration\n */\nexport const mockDevelopmentConfig: MonitoringConfig = createMonitoringConfig({\n  analytics: {\n    enabled: true,\n    respectDoNotTrack: false,\n    anonymizeIp: false,\n    sampleRate: 1.0,\n    debug: true,\n  },\n  healthCheck: {\n    enabled: true,\n    interval: 10000,\n    timeout: 2000,\n    services: ['database', 'api', 'cache', 'storage'],\n  },\n  alerts: {\n    enabled: true,\n    webhook: 'https://dev-hooks.slack.com/services/test',\n  },\n});\n\n/**\n * Production environment configuration\n */\nexport const mockProductionConfig: MonitoringConfig = createMonitoringConfig({\n  analytics: {\n    enabled: true,\n    respectDoNotTrack: true,\n    anonymizeIp: true,\n    sampleRate: 0.1,\n    debug: false,\n  },\n  healthCheck: {\n    enabled: true,\n    interval: 60000,\n    timeout: 10000,\n    services: ['database', 'api', 'cache', 'storage'],\n  },\n  alerts: {\n    enabled: true,\n    webhook: 'https://prod-hooks.slack.com/services/prod',\n    email: 'prod-alerts@company.com',\n  },\n});\n\n/**\n * Minimal configuration for basic testing\n */\nexport const mockMinimalConfig: MonitoringConfig = createMonitoringConfig({\n  healthCheck: {\n    enabled: true,\n    interval: 30000,\n    timeout: 5000,\n    services: ['database'],\n  },\n  analytics: {\n    enabled: false,\n    respectDoNotTrack: true,\n    anonymizeIp: true,\n    sampleRate: 1.0,\n    debug: false,\n  },\n  alerts: {\n    enabled: false,\n  },\n  dashboard: {\n    refreshInterval: 10000,\n    maxAlerts: 10,\n    maxMetrics: 100,\n  },\n});\n\n/**\n * Disabled configuration\n */\nexport const mockDisabledConfig: MonitoringConfig = createMonitoringConfig({\n  healthCheck: {\n    enabled: false,\n    interval: 30000,\n    timeout: 5000,\n    services: [],\n  },\n  analytics: {\n    enabled: false,\n    respectDoNotTrack: true,\n    anonymizeIp: true,\n    sampleRate: 1.0,\n    debug: false,\n  },\n  alerts: {\n    enabled: false,\n  },\n});\n\n// ============================================================================\n// CONFIGURATION UTILITIES\n// ============================================================================\n\n/**\n * Create configuration for specific test scenario\n */\nexport const createConfigForScenario = (\n  scenario: 'healthy' | 'unhealthy' | 'degraded' | 'minimal' | 'disabled'\n): MonitoringConfig => {\n  switch (scenario) {\n    case 'healthy':\n      return mockMonitoringConfig;\n    case 'unhealthy':\n      return createMonitoringConfig({\n        healthCheck: {\n          enabled: true,\n          interval: 5000,\n          timeout: 1000,\n          services: ['database', 'api', 'cache', 'storage'],\n        },\n        alerts: {\n          enabled: true,\n          webhook: 'https://alerts.company.com/webhook',\n        },\n      });\n    case 'degraded':\n      return createMonitoringConfig({\n        healthCheck: {\n          enabled: true,\n          interval: 10000,\n          timeout: 3000,\n          services: ['database', 'api'],\n        },\n      });\n    case 'minimal':\n      return mockMinimalConfig;\n    case 'disabled':\n      return mockDisabledConfig;\n    default:\n      return mockMonitoringConfig;\n  }\n};\n\n/**\n * Merge configurations for complex test scenarios\n */\nexport const mergeConfigs = (...configs: Partial<MonitoringConfig>[]): MonitoringConfig => {\n  let result = { ...mockMonitoringConfig };\n\n  for (const config of configs) {\n    result = {\n      ...result,\n      ...config,\n      healthCheck: { ...result.healthCheck, ...config.healthCheck },\n      analytics: { ...result.analytics, ...config.analytics },\n      alerts: { ...result.alerts, ...config.alerts },\n      dashboard: { ...result.dashboard, ...config.dashboard },\n    };\n  }\n\n  return result;\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0abb2a88bb5f77dace08182fc27eddcd2f1eb0cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24smble2wr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24smble2wr();
var __assign =
/* istanbul ignore next */
(cov_24smble2wr().s[0]++,
/* istanbul ignore next */
(cov_24smble2wr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_24smble2wr().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_24smble2wr().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_24smble2wr().f[0]++;
  cov_24smble2wr().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_24smble2wr().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_24smble2wr().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_24smble2wr().f[1]++;
    cov_24smble2wr().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_24smble2wr().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_24smble2wr().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_24smble2wr().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_24smble2wr().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_24smble2wr().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_24smble2wr().b[2][0]++;
          cov_24smble2wr().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_24smble2wr().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_24smble2wr().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_24smble2wr().s[10]++;
  return __assign.apply(this, arguments);
}));
/* istanbul ignore next */
cov_24smble2wr().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_24smble2wr().s[12]++;
exports.mergeConfigs = exports.createConfigForScenario = exports.mockDisabledConfig = exports.mockMinimalConfig = exports.mockProductionConfig = exports.mockDevelopmentConfig = exports.mockDashboardConfig = exports.mockAlertsConfig = exports.mockAnalyticsConfig = exports.mockHealthCheckConfig = exports.mockMonitoringConfig = exports.createMonitoringConfig = void 0;
// ============================================================================
// BASE CONFIGURATION GENERATORS
// ============================================================================
/**
 * Create a monitoring configuration with customizable options
 */
/* istanbul ignore next */
cov_24smble2wr().s[13]++;
var createMonitoringConfig = function (overrides) {
  /* istanbul ignore next */
  cov_24smble2wr().f[2]++;
  cov_24smble2wr().s[14]++;
  if (overrides === void 0) {
    /* istanbul ignore next */
    cov_24smble2wr().b[3][0]++;
    cov_24smble2wr().s[15]++;
    overrides = {};
  } else
  /* istanbul ignore next */
  {
    cov_24smble2wr().b[3][1]++;
  }
  cov_24smble2wr().s[16]++;
  return __assign({
    healthCheck: {
      enabled: true,
      interval: 30000,
      timeout: 5000,
      services: ['database', 'api', 'cache', 'storage']
    },
    analytics: {
      enabled: true,
      respectDoNotTrack: true,
      anonymizeIp: true,
      sampleRate: 1.0,
      debug: false
    },
    alerts: {
      enabled: true
    },
    dashboard: {
      refreshInterval: 10000,
      maxAlerts: 100,
      maxMetrics: 1000
    }
  }, overrides);
};
/* istanbul ignore next */
cov_24smble2wr().s[17]++;
exports.createMonitoringConfig = createMonitoringConfig;
// ============================================================================
// DEFAULT CONFIGURATIONS
// ============================================================================
/**
 * Default monitoring configuration for testing
 */
/* istanbul ignore next */
cov_24smble2wr().s[18]++;
exports.mockMonitoringConfig = (0, exports.createMonitoringConfig)();
/**
 * Health check specific configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[19]++;
exports.mockHealthCheckConfig = (0, exports.createMonitoringConfig)({
  healthCheck: {
    enabled: true,
    interval: 15000,
    timeout: 3000,
    services: ['database', 'api']
  },
  analytics: {
    enabled: false,
    respectDoNotTrack: true,
    anonymizeIp: true,
    sampleRate: 1.0,
    debug: false
  },
  alerts: {
    enabled: false
  }
});
/**
 * Analytics specific configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[20]++;
exports.mockAnalyticsConfig = (0, exports.createMonitoringConfig)({
  analytics: {
    enabled: true,
    respectDoNotTrack: true,
    anonymizeIp: true,
    sampleRate: 0.5,
    debug: true
  },
  healthCheck: {
    enabled: false,
    interval: 30000,
    timeout: 5000,
    services: []
  },
  alerts: {
    enabled: false
  }
});
/**
 * Alerts specific configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[21]++;
exports.mockAlertsConfig = (0, exports.createMonitoringConfig)({
  alerts: {
    enabled: true,
    webhook: 'https://hooks.slack.com/services/test',
    email: 'alerts@company.com'
  },
  healthCheck: {
    enabled: true,
    interval: 10000,
    timeout: 2000,
    services: ['database', 'api', 'cache']
  }
});
/**
 * Dashboard specific configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[22]++;
exports.mockDashboardConfig = (0, exports.createMonitoringConfig)({
  dashboard: {
    refreshInterval: 5000,
    maxAlerts: 50,
    maxMetrics: 500
  }
});
// ============================================================================
// SPECIALIZED CONFIGURATIONS
// ============================================================================
/**
 * Development environment configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[23]++;
exports.mockDevelopmentConfig = (0, exports.createMonitoringConfig)({
  analytics: {
    enabled: true,
    respectDoNotTrack: false,
    anonymizeIp: false,
    sampleRate: 1.0,
    debug: true
  },
  healthCheck: {
    enabled: true,
    interval: 10000,
    timeout: 2000,
    services: ['database', 'api', 'cache', 'storage']
  },
  alerts: {
    enabled: true,
    webhook: 'https://dev-hooks.slack.com/services/test'
  }
});
/**
 * Production environment configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[24]++;
exports.mockProductionConfig = (0, exports.createMonitoringConfig)({
  analytics: {
    enabled: true,
    respectDoNotTrack: true,
    anonymizeIp: true,
    sampleRate: 0.1,
    debug: false
  },
  healthCheck: {
    enabled: true,
    interval: 60000,
    timeout: 10000,
    services: ['database', 'api', 'cache', 'storage']
  },
  alerts: {
    enabled: true,
    webhook: 'https://prod-hooks.slack.com/services/prod',
    email: 'prod-alerts@company.com'
  }
});
/**
 * Minimal configuration for basic testing
 */
/* istanbul ignore next */
cov_24smble2wr().s[25]++;
exports.mockMinimalConfig = (0, exports.createMonitoringConfig)({
  healthCheck: {
    enabled: true,
    interval: 30000,
    timeout: 5000,
    services: ['database']
  },
  analytics: {
    enabled: false,
    respectDoNotTrack: true,
    anonymizeIp: true,
    sampleRate: 1.0,
    debug: false
  },
  alerts: {
    enabled: false
  },
  dashboard: {
    refreshInterval: 10000,
    maxAlerts: 10,
    maxMetrics: 100
  }
});
/**
 * Disabled configuration
 */
/* istanbul ignore next */
cov_24smble2wr().s[26]++;
exports.mockDisabledConfig = (0, exports.createMonitoringConfig)({
  healthCheck: {
    enabled: false,
    interval: 30000,
    timeout: 5000,
    services: []
  },
  analytics: {
    enabled: false,
    respectDoNotTrack: true,
    anonymizeIp: true,
    sampleRate: 1.0,
    debug: false
  },
  alerts: {
    enabled: false
  }
});
// ============================================================================
// CONFIGURATION UTILITIES
// ============================================================================
/**
 * Create configuration for specific test scenario
 */
/* istanbul ignore next */
cov_24smble2wr().s[27]++;
var createConfigForScenario = function (scenario) {
  /* istanbul ignore next */
  cov_24smble2wr().f[3]++;
  cov_24smble2wr().s[28]++;
  switch (scenario) {
    case 'healthy':
      /* istanbul ignore next */
      cov_24smble2wr().b[4][0]++;
      cov_24smble2wr().s[29]++;
      return exports.mockMonitoringConfig;
    case 'unhealthy':
      /* istanbul ignore next */
      cov_24smble2wr().b[4][1]++;
      cov_24smble2wr().s[30]++;
      return (0, exports.createMonitoringConfig)({
        healthCheck: {
          enabled: true,
          interval: 5000,
          timeout: 1000,
          services: ['database', 'api', 'cache', 'storage']
        },
        alerts: {
          enabled: true,
          webhook: 'https://alerts.company.com/webhook'
        }
      });
    case 'degraded':
      /* istanbul ignore next */
      cov_24smble2wr().b[4][2]++;
      cov_24smble2wr().s[31]++;
      return (0, exports.createMonitoringConfig)({
        healthCheck: {
          enabled: true,
          interval: 10000,
          timeout: 3000,
          services: ['database', 'api']
        }
      });
    case 'minimal':
      /* istanbul ignore next */
      cov_24smble2wr().b[4][3]++;
      cov_24smble2wr().s[32]++;
      return exports.mockMinimalConfig;
    case 'disabled':
      /* istanbul ignore next */
      cov_24smble2wr().b[4][4]++;
      cov_24smble2wr().s[33]++;
      return exports.mockDisabledConfig;
    default:
      /* istanbul ignore next */
      cov_24smble2wr().b[4][5]++;
      cov_24smble2wr().s[34]++;
      return exports.mockMonitoringConfig;
  }
};
/* istanbul ignore next */
cov_24smble2wr().s[35]++;
exports.createConfigForScenario = createConfigForScenario;
/**
 * Merge configurations for complex test scenarios
 */
/* istanbul ignore next */
cov_24smble2wr().s[36]++;
var mergeConfigs = function () {
  /* istanbul ignore next */
  cov_24smble2wr().f[4]++;
  var configs =
  /* istanbul ignore next */
  (cov_24smble2wr().s[37]++, []);
  /* istanbul ignore next */
  cov_24smble2wr().s[38]++;
  for (var _i =
  /* istanbul ignore next */
  (cov_24smble2wr().s[39]++, 0); _i < arguments.length; _i++) {
    /* istanbul ignore next */
    cov_24smble2wr().s[40]++;
    configs[_i] = arguments[_i];
  }
  var result =
  /* istanbul ignore next */
  (cov_24smble2wr().s[41]++, __assign({}, exports.mockMonitoringConfig));
  /* istanbul ignore next */
  cov_24smble2wr().s[42]++;
  for (var _a =
    /* istanbul ignore next */
    (cov_24smble2wr().s[43]++, 0), configs_1 =
    /* istanbul ignore next */
    (cov_24smble2wr().s[44]++, configs); _a < configs_1.length; _a++) {
    var config =
    /* istanbul ignore next */
    (cov_24smble2wr().s[45]++, configs_1[_a]);
    /* istanbul ignore next */
    cov_24smble2wr().s[46]++;
    result = __assign(__assign(__assign({}, result), config), {
      healthCheck: __assign(__assign({}, result.healthCheck), config.healthCheck),
      analytics: __assign(__assign({}, result.analytics), config.analytics),
      alerts: __assign(__assign({}, result.alerts), config.alerts),
      dashboard: __assign(__assign({}, result.dashboard), config.dashboard)
    });
  }
  /* istanbul ignore next */
  cov_24smble2wr().s[47]++;
  return result;
};
/* istanbul ignore next */
cov_24smble2wr().s[48]++;
exports.mergeConfigs = mergeConfigs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,