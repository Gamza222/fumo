75113e8c4f049b6f6e12f9586fd50da6
"use strict";
/**
 * useAppLoading Hook Tests
 *
 * Comprehensive tests for initial app loading functionality.
 * Tests all loading conditions, error handling, and state management.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("@testing-library/react");
var useAppLoading_1 = require("./useAppLoading");
// ============================================================================
// MOCK SETUP
// ============================================================================
// Mock DOM APIs
Object.defineProperty(document, "readyState", {
    writable: true,
    value: "loading",
});
Object.defineProperty(window, "performance", {
    writable: true,
    value: {
        now: jest.fn(function () { return Date.now(); }),
    },
});
// Mock document methods
var mockQuerySelectorAll = jest.fn();
var mockQuerySelector = jest.fn();
var mockHasAttribute = jest.fn();
var mockClassList = {
    contains: jest.fn(),
};
Object.defineProperty(document, "querySelectorAll", {
    value: mockQuerySelectorAll,
});
Object.defineProperty(document, "querySelector", {
    value: mockQuerySelector,
});
Object.defineProperty(document.documentElement, "hasAttribute", {
    value: mockHasAttribute,
});
Object.defineProperty(document.documentElement, "classList", {
    value: mockClassList,
});
Object.defineProperty(document.body, "classList", {
    value: mockClassList,
});
// ============================================================================
// TEST UTILITIES
// ============================================================================
var setupDOM = function (options) {
    document.readyState = options.readyState || "complete";
    // Mock critical CSS
    if (options.criticalCSS) {
        mockQuerySelectorAll.mockReturnValue([
            { sheet: { cssRules: [] } }, // Simulate loaded stylesheet
        ]);
    }
    else {
        mockQuerySelectorAll.mockReturnValue([]);
    }
    // Mock theme
    mockHasAttribute.mockReturnValue(options.theme || false);
    mockClassList.contains.mockReturnValue(options.theme || false);
    // Mock performance
    if (options.performanceNow) {
        window.performance.now.mockReturnValue(options.performanceNow);
    }
};
// ============================================================================
// TESTS
// ============================================================================
describe("useAppLoading", function () {
    beforeEach(function () {
        jest.clearAllMocks();
        jest.useFakeTimers();
        setupDOM({ readyState: "complete", criticalCSS: true, theme: true });
    });
    afterEach(function () {
        jest.useRealTimers();
    });
    describe("Initial State", function () {
        it("should start with loading state", function () {
            var result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
            expect(result.current.isInitialLoading).toBe(true);
            expect(result.current.progress).toBe(0);
            expect(result.current.currentStep).toBe("");
            expect(result.current.steps).toEqual([]);
        });
        it("should have forceComplete and restart functions", function () {
            var result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
            expect(typeof result.current.forceComplete).toBe("function");
            expect(typeof result.current.restart).toBe("function");
        });
    });
    describe("DOM Ready Check", function () {
        it("should complete when DOM is ready", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({ readyState: "complete" });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.progress).toBeGreaterThan(0);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should handle DOM not ready", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({ readyState: "loading" });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.advanceTimersByTime(3000); // Wait for timeout
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.progress).toBeGreaterThan(0);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Critical CSS Check", function () {
        it("should complete when critical CSS is loaded", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({
                            readyState: "complete",
                            criticalCSS: true,
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.steps.some(function (step) { return step.id === "critical-css" && step.completed; })).toBe(true);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should complete when no critical CSS defined", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({
                            readyState: "complete",
                            criticalCSS: false,
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.steps.some(function (step) { return step.id === "critical-css" && step.completed; })).toBe(true);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Theme Check", function () {
        it("should complete when theme is initialized", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({
                            readyState: "complete",
                            theme: true,
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.steps.some(function (step) { return step.id === "theme-initialized" && step.completed; })).toBe(true);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should handle theme not initialized", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({
                            readyState: "complete",
                            theme: false,
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.advanceTimersByTime(3000); // Wait for timeout
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.progress).toBeGreaterThan(0);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Minimum Display Time", function () {
        it("should wait for minimum display time", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({ readyState: "complete" });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        // Fast forward to minimum time
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.advanceTimersByTime(1200);
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        // Fast forward to minimum time
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.steps.some(function (step) { return step.id === "minimum-display-time" && step.completed; })).toBe(true);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Progress Tracking", function () {
        it("should update progress as conditions complete", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({ readyState: "complete" });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.progress).toBe(100);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should update current step", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({ readyState: "complete" });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.currentStep).toBe("Ready");
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Force Complete", function () {
        it("should force complete loading", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    result.current.forceComplete();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        expect(result.current.isInitialLoading).toBe(false);
                        expect(result.current.progress).toBe(100);
                        expect(result.current.currentStep).toBe("Ready");
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Restart", function () {
        it("should restart loading process", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        // Force complete first
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    result.current.forceComplete();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        // Force complete first
                        _a.sent();
                        // Then restart
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    result.current.restart();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 2:
                        // Then restart
                        _a.sent();
                        expect(result.current.isInitialLoading).toBe(true);
                        expect(result.current.progress).toBe(0);
                        expect(result.current.currentStep).toBe("");
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Error Handling", function () {
        it("should handle condition check failures gracefully", function () { return __awaiter(void 0, void 0, void 0, function () {
            var originalQuerySelectorAll, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Mock a condition that throws
                        setupDOM({ readyState: "complete" });
                        originalQuerySelectorAll = document.querySelectorAll;
                        document.querySelectorAll = jest.fn(function () {
                            throw new Error("DOM Error");
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.advanceTimersByTime(3000);
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.progress).toBeGreaterThan(0);
                            })];
                    case 2:
                        _a.sent();
                        // Restore original function
                        document.querySelectorAll = originalQuerySelectorAll;
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Complete Loading Flow", function () {
        it("should complete full loading sequence", function () { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        setupDOM({
                            readyState: "complete",
                            criticalCSS: true,
                            theme: true,
                        });
                        result = (0, react_1.renderHook)(function () { return (0, useAppLoading_1.useAppLoading)(); }).result;
                        return [4 /*yield*/, (0, react_1.act)(function () { return __awaiter(void 0, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    jest.runAllTimers();
                                    return [2 /*return*/];
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, react_1.waitFor)(function () {
                                expect(result.current.isInitialLoading).toBe(false);
                                expect(result.current.progress).toBe(100);
                                expect(result.current.currentStep).toBe("Ready");
                                expect(result.current.steps.every(function (step) { return step.completed; })).toBe(true);
                            })];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,