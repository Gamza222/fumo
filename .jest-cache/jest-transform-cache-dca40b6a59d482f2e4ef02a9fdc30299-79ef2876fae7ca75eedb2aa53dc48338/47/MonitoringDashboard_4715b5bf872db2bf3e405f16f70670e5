75d128b5339f5360f3b40884c56b8e1a
"use strict";
'use client';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonitoringDashboard = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importStar(require("react"));
var monitoring_service_1 = require("../lib/monitoring.service");
var monitoring_types_1 = require("../types/monitoring.types");
var MonitoringDashboard_module_scss_1 = __importDefault(require("./MonitoringDashboard.module.scss"));
var HealthStatusIndicator = function (_a) {
    var status = _a.status;
    var getStatusClass = function (healthStatus) {
        switch (healthStatus) {
            case monitoring_types_1.HealthStatus.HEALTHY:
                return MonitoringDashboard_module_scss_1.default.statusDotGreen || '';
            case monitoring_types_1.HealthStatus.DEGRADED:
                return MonitoringDashboard_module_scss_1.default.statusDotYellow || '';
            case monitoring_types_1.HealthStatus.UNHEALTHY:
                return MonitoringDashboard_module_scss_1.default.statusDotRed || '';
            case monitoring_types_1.HealthStatus.UNKNOWN:
                return MonitoringDashboard_module_scss_1.default.statusDotGray || '';
            default:
                return MonitoringDashboard_module_scss_1.default.statusDotGray || '';
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.statusIndicator, children: [(0, jsx_runtime_1.jsx)("div", { className: "".concat(MonitoringDashboard_module_scss_1.default.statusDot, " ").concat(getStatusClass(status)) }), (0, jsx_runtime_1.jsx)("span", { className: MonitoringDashboard_module_scss_1.default.statusText, children: status })] }));
};
var ServiceHealthCard = function (_a) {
    var service = _a.service;
    return ((0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.serviceCard, children: [(0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.serviceHeader, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.serviceName, children: service.name }), (0, jsx_runtime_1.jsx)(HealthStatusIndicator, { status: service.status })] }), service.responseTime && ((0, jsx_runtime_1.jsxs)("p", { className: MonitoringDashboard_module_scss_1.default.serviceResponse, children: ["Response: ", service.responseTime, "ms"] })), service.error && (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.serviceError, children: service.error })] }));
};
var AlertLevelIndicator = function (_a) {
    var level = _a.level;
    var getLevelClass = function (alertLevel) {
        switch (alertLevel) {
            case monitoring_types_1.AlertLevel.INFO:
                return MonitoringDashboard_module_scss_1.default.alertLevelInfo || '';
            case monitoring_types_1.AlertLevel.WARNING:
                return MonitoringDashboard_module_scss_1.default.alertLevelWarning || '';
            case monitoring_types_1.AlertLevel.ERROR:
                return MonitoringDashboard_module_scss_1.default.alertLevelError || '';
            case monitoring_types_1.AlertLevel.CRITICAL:
                return MonitoringDashboard_module_scss_1.default.alertLevelCritical || '';
            default:
                return MonitoringDashboard_module_scss_1.default.alertLevelInfo || '';
        }
    };
    return (0, jsx_runtime_1.jsx)("span", { className: "".concat(MonitoringDashboard_module_scss_1.default.alertLevel, " ").concat(getLevelClass(level)), children: level });
};
var MonitoringDashboard = function (_a) {
    var _b, _c;
    var className = _a.className, _d = _a.refreshInterval, refreshInterval = _d === void 0 ? 10000 : _d;
    var _e = (0, react_1.useState)(null), systemHealth = _e[0], setSystemHealth = _e[1];
    var _f = (0, react_1.useState)([]), recentAlerts = _f[0], setRecentAlerts = _f[1];
    var _g = (0, react_1.useState)([]), _metrics = _g[0], setMetrics = _g[1];
    var _h = (0, react_1.useState)(null), analytics = _h[0], setAnalytics = _h[1];
    var _j = (0, react_1.useState)(true), loading = _j[0], setLoading = _j[1];
    var _k = (0, react_1.useState)(null), error = _k[0], setError = _k[1];
    // Initialize monitoring service with default config if not already initialized
    var monitoringService = react_1.default.useMemo(function () {
        try {
            return monitoring_service_1.MonitoringService.getInstance();
        }
        catch (err) {
            // Initialize with default config if not already initialized
            var defaultConfig = {
                healthCheck: {
                    enabled: true,
                    interval: 30000,
                    timeout: 5000,
                    services: ['database', 'api', 'cache', 'storage'],
                },
                analytics: {
                    enabled: true,
                    debug: false,
                    respectDoNotTrack: true,
                    anonymizeIp: true,
                    sampleRate: 1.0,
                },
                alerts: {
                    enabled: true,
                },
                dashboard: {
                    refreshInterval: 30000,
                    maxAlerts: 50,
                    maxMetrics: 100,
                },
            };
            return monitoring_service_1.MonitoringService.getInstance(defaultConfig);
        }
    }, []);
    var fetchDashboardData = (0, react_1.useCallback)(function () { return __awaiter(void 0, void 0, void 0, function () {
        var dashboardData, err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setLoading(true);
                    setError(null);
                    return [4 /*yield*/, monitoringService.getDashboardData()];
                case 1:
                    dashboardData = _a.sent();
                    setSystemHealth(dashboardData.systemHealth);
                    setRecentAlerts(dashboardData.recentAlerts || []);
                    setMetrics(dashboardData.metrics || []);
                    setAnalytics(dashboardData.analytics || {});
                    return [3 /*break*/, 4];
                case 2:
                    err_1 = _a.sent();
                    setError(err_1 instanceof Error ? err_1.message : 'Failed to fetch dashboard data');
                    return [3 /*break*/, 4];
                case 3:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); }, [monitoringService]);
    (0, react_1.useEffect)(function () {
        void fetchDashboardData();
        var interval = setInterval(function () { return void fetchDashboardData(); }, refreshInterval);
        return function () { return clearInterval(interval); };
    }, [refreshInterval, fetchDashboardData]);
    if (loading && !systemHealth) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "".concat(MonitoringDashboard_module_scss_1.default.dashboard, " ").concat(className || ''), children: (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.loading, children: [(0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.loadingTitle }), (0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.loadingGrid, children: Array.from({ length: 4 }).map(function (_, i) { return ((0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.loadingCard }, i)); }) })] }) }));
    }
    if (error) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "".concat(MonitoringDashboard_module_scss_1.default.dashboard, " ").concat(className || ''), children: (0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.error, children: (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.errorCard, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.errorTitle, children: "Dashboard Error" }), (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.errorMessage, children: error }), (0, jsx_runtime_1.jsx)("button", { onClick: function () { return void fetchDashboardData(); }, className: MonitoringDashboard_module_scss_1.default.retryButton, children: "Retry" })] }) }) }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "".concat(MonitoringDashboard_module_scss_1.default.dashboard, " ").concat(className || ''), children: [(0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.header, children: [(0, jsx_runtime_1.jsx)("h1", { className: MonitoringDashboard_module_scss_1.default.title, children: "System Monitoring" }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.headerActions, children: [systemHealth && (0, jsx_runtime_1.jsx)(HealthStatusIndicator, { status: systemHealth.status }), (0, jsx_runtime_1.jsx)("button", { onClick: function () { return void fetchDashboardData(); }, className: MonitoringDashboard_module_scss_1.default.refreshButton, children: "Refresh" })] })] }), systemHealth && ((0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.overview, children: [(0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Uptime" }), (0, jsx_runtime_1.jsxs)("p", { className: MonitoringDashboard_module_scss_1.default.cardValue, children: [Math.floor(systemHealth.uptime / 1000 / 60), "m"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Version" }), (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.cardValue, children: systemHealth.version })] }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Healthy Services" }), (0, jsx_runtime_1.jsxs)("p", { className: "".concat(MonitoringDashboard_module_scss_1.default.cardValue, " ").concat(MonitoringDashboard_module_scss_1.default.cardValueGreen), children: [systemHealth.summary.healthy, "/", systemHealth.summary.total] })] }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Last Check" }), (0, jsx_runtime_1.jsx)("p", { className: "".concat(MonitoringDashboard_module_scss_1.default.cardValue, " ").concat(MonitoringDashboard_module_scss_1.default.cardValueSmall), children: systemHealth.timestamp.toLocaleTimeString() })] })] })), systemHealth && ((0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h2", { className: MonitoringDashboard_module_scss_1.default.sectionTitle, children: "Services Health" }), (0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.servicesGrid, children: systemHealth.services.map(function (service) { return ((0, jsx_runtime_1.jsx)(ServiceHealthCard, { service: service }, service.name)); }) })] })), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h2", { className: MonitoringDashboard_module_scss_1.default.sectionTitle, children: "Recent Alerts" }), recentAlerts && recentAlerts.length > 0 ? ((0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.alertsList, children: recentAlerts.map(function (alert) {
                            var _a;
                            return ((0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.alertItem, children: (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.alertHeader, children: [(0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.alertContent, children: [(0, jsx_runtime_1.jsx)(AlertLevelIndicator, { level: (alert === null || alert === void 0 ? void 0 : alert.level) || monitoring_types_1.AlertLevel.INFO }), (0, jsx_runtime_1.jsx)("span", { className: MonitoringDashboard_module_scss_1.default.alertMessage, children: (alert === null || alert === void 0 ? void 0 : alert.message) || 'Unknown alert' })] }), (0, jsx_runtime_1.jsx)("span", { className: MonitoringDashboard_module_scss_1.default.alertTime, children: ((_a = alert === null || alert === void 0 ? void 0 : alert.timestamp) === null || _a === void 0 ? void 0 : _a.toLocaleTimeString()) || 'Unknown time' })] }) }, (alert === null || alert === void 0 ? void 0 : alert.id) || Math.random()));
                        }) })) : ((0, jsx_runtime_1.jsx)("div", { className: MonitoringDashboard_module_scss_1.default.noAlerts, children: (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.noAlertsText, children: "No recent alerts" }) }))] }), analytics && ((0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.section, children: [(0, jsx_runtime_1.jsx)("h2", { className: MonitoringDashboard_module_scss_1.default.sectionTitle, children: "Analytics Overview" }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.analyticsGrid, children: [(0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Total Events" }), (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.cardValue, children: analytics.totalEvents })] }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Active Sessions" }), (0, jsx_runtime_1.jsx)("p", { className: MonitoringDashboard_module_scss_1.default.cardValue, children: analytics.activeSessions })] }), (0, jsx_runtime_1.jsxs)("div", { className: MonitoringDashboard_module_scss_1.default.card, children: [(0, jsx_runtime_1.jsx)("h3", { className: MonitoringDashboard_module_scss_1.default.cardTitle, children: "Top Page" }), (0, jsx_runtime_1.jsxs)("p", { className: "".concat(MonitoringDashboard_module_scss_1.default.cardValue, " ").concat(MonitoringDashboard_module_scss_1.default.cardValueSmall), children: [((_b = analytics.topPages[0]) === null || _b === void 0 ? void 0 : _b.path) || 'N/A', " (", ((_c = analytics.topPages[0]) === null || _c === void 0 ? void 0 : _c.views) || 0, " views)"] })] })] })] }))] }));
};
exports.MonitoringDashboard = MonitoringDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,