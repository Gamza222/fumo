e1b20e3c497ea3dedaf551359974f432
"use strict";
/**
 * API Mocks
 *
 * Type: ðŸ“¦ MANUAL
 *
 * This file exports all mocks for API/network clients that need to be manually imported
 * and configured in tests.
 *
 * These are MANUAL mocks - they use named exports for functions that need to be imported
 * and controlled in tests.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockWebSocket = exports.WebSocketMock = exports.mockGraphQLClientInstance = exports.mockGraphQLClient = void 0;
// ============================================================================
// GRAPHQL MOCKS
// ============================================================================
var graphQLClient_mock_1 = require("./lib/graphql/graphQLClient.mock");
Object.defineProperty(exports, "mockGraphQLClient", { enumerable: true, get: function () { return graphQLClient_mock_1.mockGraphQLClient; } });
Object.defineProperty(exports, "mockGraphQLClientInstance", { enumerable: true, get: function () { return graphQLClient_mock_1.mockGraphQLClientInstance; } });
// ============================================================================
// WEBSOCKET MOCKS
// ============================================================================
var webSocket_mock_1 = require("./lib/websocket/webSocket.mock");
Object.defineProperty(exports, "WebSocketMock", { enumerable: true, get: function () { return webSocket_mock_1.WebSocketMock; } });
var webSocket_mock_2 = require("./lib/websocket/webSocket.mock");
Object.defineProperty(exports, "mockWebSocket", { enumerable: true, get: function () { return webSocket_mock_2.createWebSocketMock; } });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvc2hhcmVkL3Rlc3RpbmcvbW9ja3MvYXBpL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7OztHQVVHOzs7QUFFSCwrRUFBK0U7QUFDL0UsZ0JBQWdCO0FBQ2hCLCtFQUErRTtBQUUvRSx1RUFBZ0c7QUFBdkYsdUhBQUEsaUJBQWlCLE9BQUE7QUFBRSwrSEFBQSx5QkFBeUIsT0FBQTtBQUVyRCwrRUFBK0U7QUFDL0Usa0JBQWtCO0FBQ2xCLCtFQUErRTtBQUUvRSxpRUFBK0Q7QUFBdEQsK0dBQUEsYUFBYSxPQUFBO0FBQ3RCLGlFQUFzRjtBQUE3RSwrR0FBQSxtQkFBbUIsT0FBaUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvc2hhcmVkL3Rlc3RpbmcvbW9ja3MvYXBpL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQVBJIE1vY2tzXG4gKlxuICogVHlwZTog8J+TpiBNQU5VQUxcbiAqXG4gKiBUaGlzIGZpbGUgZXhwb3J0cyBhbGwgbW9ja3MgZm9yIEFQSS9uZXR3b3JrIGNsaWVudHMgdGhhdCBuZWVkIHRvIGJlIG1hbnVhbGx5IGltcG9ydGVkXG4gKiBhbmQgY29uZmlndXJlZCBpbiB0ZXN0cy5cbiAqXG4gKiBUaGVzZSBhcmUgTUFOVUFMIG1vY2tzIC0gdGhleSB1c2UgbmFtZWQgZXhwb3J0cyBmb3IgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBpbXBvcnRlZFxuICogYW5kIGNvbnRyb2xsZWQgaW4gdGVzdHMuXG4gKi9cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gR1JBUEhRTCBNT0NLU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgeyBtb2NrR3JhcGhRTENsaWVudCwgbW9ja0dyYXBoUUxDbGllbnRJbnN0YW5jZSB9IGZyb20gJy4vbGliL2dyYXBocWwvZ3JhcGhRTENsaWVudC5tb2NrJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gV0VCU09DS0VUIE1PQ0tTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCB7IFdlYlNvY2tldE1vY2sgfSBmcm9tICcuL2xpYi93ZWJzb2NrZXQvd2ViU29ja2V0Lm1vY2snO1xuZXhwb3J0IHsgY3JlYXRlV2ViU29ja2V0TW9jayBhcyBtb2NrV2ViU29ja2V0IH0gZnJvbSAnLi9saWIvd2Vic29ja2V0L3dlYlNvY2tldC5tb2NrJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVFlQRVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHR5cGUge1xuICBtb2NrR3JhcGhRTE9wZXJhdGlvbkludGVyZmFjZSxcbiAgbW9ja0dyYXBoUUxSZXNwb25zZUludGVyZmFjZSxcbiAgbW9ja1dlYlNvY2tldE1lc3NhZ2VJbnRlcmZhY2UsXG4gIG1vY2tXZWJTb2NrZXRJbnN0YW5jZUludGVyZmFjZSxcbiAgbW9ja0dyYXBoUUxDYWNoZUludGVyZmFjZSxcbn0gZnJvbSAnLi90eXBlcy90eXBlcyc7XG4iXSwidmVyc2lvbiI6M30=