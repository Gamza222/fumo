{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/ui/AppLoadingProvider.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/ui/AppLoadingProvider.test.tsx"],"sourcesContent":["/**\n * AppLoadingProvider Tests\n *\n * Tests for the React Context provider component.\n * Tests provider functionality and context provision.\n * Note: useAppLoadingContext will be tested separately.\n */\n\nimport React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport { AppLoadingProvider } from './AppLoadingProvider';\nimport { UseAppLoadingReturn } from '../model/types/types';\n\n// ============================================================================\n// MOCK SETUP\n// ============================================================================\n\n// Mock the useAppLoading hook (from hooks/useAppLoading/useAppLoading.ts)\njest.mock('../hooks/useAppLoading/useAppLoading', () => ({\n  useAppLoading: jest.fn(),\n}));\n\nimport { useAppLoading } from '../hooks/useAppLoading/useAppLoading';\n\nconst mockUseAppLoading = useAppLoading as jest.MockedFunction<typeof useAppLoading>;\n\n// ============================================================================\n// TEST COMPONENT\n// ============================================================================\n\n// Simple test component that renders children\nconst TestChild = ({ testId, children }: { testId: string; children?: React.ReactNode }) => (\n  <div data-testid={testId}>{children}</div>\n);\n\n// ============================================================================\n// TESTS\n// ============================================================================\n\ndescribe('AppLoadingProvider', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Provider Rendering', () => {\n    it('should render single child without crashing', () => {\n      const mockLoadingState: UseAppLoadingReturn = {\n        isInitialLoading: true,\n        isOverallLoading: true,\n        progress: 50,\n        currentStep: 'Loading Styles',\n        steps: [],\n        isSuspenseLoading: false,\n        forceComplete: jest.fn(),\n        restart: jest.fn(),\n        setSuspenseLoading: jest.fn(),\n      };\n\n      mockUseAppLoading.mockReturnValue(mockLoadingState);\n\n      render(\n        <AppLoadingProvider>\n          <TestChild testId=\"single-child\">Single Child Content</TestChild>\n        </AppLoadingProvider>\n      );\n\n      expect(screen.getByTestId('single-child')).toBeInTheDocument();\n      expect(screen.getByText('Single Child Content')).toBeInTheDocument();\n    });\n\n    it('should render multiple children', () => {\n      const mockLoadingState: UseAppLoadingReturn = {\n        isInitialLoading: true,\n        isOverallLoading: true,\n        progress: 50,\n        currentStep: 'Loading Styles',\n        steps: [],\n        isSuspenseLoading: false,\n        forceComplete: jest.fn(),\n        restart: jest.fn(),\n        setSuspenseLoading: jest.fn(),\n      };\n      mockUseAppLoading.mockReturnValue(mockLoadingState);\n\n      render(\n        <AppLoadingProvider>\n          <TestChild testId=\"child-1\">Child 1</TestChild>\n          <TestChild testId=\"child-2\">Child 2</TestChild>\n          <TestChild testId=\"child-3\">Child 3</TestChild>\n        </AppLoadingProvider>\n      );\n\n      expect(screen.getByTestId('child-1')).toBeInTheDocument();\n      expect(screen.getByTestId('child-2')).toBeInTheDocument();\n      expect(screen.getByTestId('child-3')).toBeInTheDocument();\n    });\n  });\n\n  describe('Hook Integration', () => {\n    it('should call useAppLoading hook once', () => {\n      const mockLoadingState: UseAppLoadingReturn = {\n        isInitialLoading: true,\n        isOverallLoading: true,\n        progress: 50,\n        currentStep: 'Loading Styles',\n        steps: [],\n        isSuspenseLoading: false,\n        forceComplete: jest.fn(),\n        restart: jest.fn(),\n        setSuspenseLoading: jest.fn(),\n      };\n\n      mockUseAppLoading.mockReturnValue(mockLoadingState);\n\n      render(\n        <AppLoadingProvider>\n          <TestChild testId=\"test-child\">Test</TestChild>\n        </AppLoadingProvider>\n      );\n\n      expect(mockUseAppLoading).toHaveBeenCalledTimes(1);\n      expect(mockUseAppLoading).toHaveBeenCalledWith();\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle null children', () => {\n      const mockLoadingState: UseAppLoadingReturn = {\n        isInitialLoading: true,\n        isOverallLoading: true,\n        progress: 50,\n        currentStep: 'Loading Styles',\n        steps: [],\n        isSuspenseLoading: false,\n        forceComplete: jest.fn(),\n        restart: jest.fn(),\n        setSuspenseLoading: jest.fn(),\n      };\n\n      mockUseAppLoading.mockReturnValue(mockLoadingState);\n\n      expect(() => {\n        render(<AppLoadingProvider>{null}</AppLoadingProvider>);\n      }).not.toThrow();\n    });\n\n    it('should handle undefined children', () => {\n      const mockLoadingState: UseAppLoadingReturn = {\n        isInitialLoading: true,\n        isOverallLoading: true,\n        progress: 50,\n        currentStep: 'Loading Styles',\n        steps: [],\n        isSuspenseLoading: false,\n        forceComplete: jest.fn(),\n        restart: jest.fn(),\n        setSuspenseLoading: jest.fn(),\n      };\n\n      mockUseAppLoading.mockReturnValue(mockLoadingState);\n\n      expect(() => {\n        render(<AppLoadingProvider>{undefined}</AppLoadingProvider>);\n      }).not.toThrow();\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle hook throwing error', () => {\n      const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\n\n      mockUseAppLoading.mockImplementation(() => {\n        throw new Error('Hook failed');\n      });\n\n      expect(() => {\n        render(\n          <AppLoadingProvider>\n            <TestChild testId=\"test-child\">Test</TestChild>\n          </AppLoadingProvider>\n        );\n      }).toThrow('Hook failed');\n\n      consoleSpy.mockRestore();\n    });\n  });\n});\n"],"version":3}