2cc62d1025206efa8c0f980a10b82bf8
"use strict";

/* istanbul ignore next */
function cov_2l90umq93f() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/config/auth/auth.config.ts";
  var hash = "56df9a3bbe6e2cfe25e9cb1db9b19d59375738a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/config/auth/auth.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 107
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "4": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 80
        }
      },
      "6": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 78
        }
      },
      "7": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "8": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "9": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "11": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "13": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "14": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "15": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "18": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 40
        }
      },
      "19": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "20": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "21": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "24": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 48
        }
      },
      "25": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 20
        }
      },
      "28": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 49
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 22
          }
        },
        loc: {
          start: {
            line: 34,
            column: 38
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 26
          }
        },
        loc: {
          start: {
            line: 53,
            column: 42
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 80
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 80
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 30
          }
        }, {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 43
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 30
          }
        }, {
          start: {
            line: 56,
            column: 34
          },
          end: {
            line: 56,
            column: 43
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/config/auth/auth.config.ts",
      mappings: ";;;AAAA,2CAA8F;AAE9F;;GAEG;AACU,QAAA,UAAU,GAAe;IACpC,QAAQ,EAAE,yBAAY,CAAC,KAAK;IAC5B,SAAS,EAAE,0BAAa,CAAC,MAAM;IAC/B,WAAW,EAAE,IAAI,EAAE,SAAS;IAC5B,gBAAgB,EAAE,GAAG,EAAE,0BAA0B;IACjD,MAAM,EAAE,CAAC,sBAAS,CAAC,IAAI,EAAE,sBAAS,CAAC,KAAK,CAAC;CAC1C,CAAC;AAEF;;;;;GAKG;AACI,IAAM,cAAc,GAAG,UAC5B,KAAa,EACb,SAA+C;IAA/C,0BAAA,EAAA,YAA2B,0BAAa,CAAC,MAAM;IAE/C,OAAO;QACL,aAAa,EAAE,UAAG,SAAS,cAAI,KAAK,CAAE;QACtC,cAAc,EAAE,kBAAkB;KACnC,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,cAAc,kBAQzB;AAEF;;;;GAIG;AACI,IAAM,cAAc,GAAG,UAAC,KAAa;IAC1C,IAAI,CAAC;QACH,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QACjD,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAe,CAAC;QACzD,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QACtC,OAAO,OAAO,CAAC,GAAG,GAAG,WAAW,CAAC;IACnC,CAAC;IAAC,WAAM,CAAC;QACP,OAAO,IAAI,CAAC,CAAC,4CAA4C;IAC3D,CAAC;AACH,CAAC,CAAC;AAVW,QAAA,cAAc,kBAUzB;AAEF;;;;GAIG;AACI,IAAM,kBAAkB,GAAG,UAAC,KAAa;IAC9C,IAAI,CAAC;QACH,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QACjD,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAe,CAAC;QACzD,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QACtC,OAAO,OAAO,CAAC,GAAG,GAAG,WAAW,GAAG,kBAAU,CAAC,gBAAgB,CAAC;IACjE,CAAC;IAAC,WAAM,CAAC;QACP,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAVW,QAAA,kBAAkB,sBAU7B",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/config/auth/auth.config.ts"],
      sourcesContent: ["import { AuthConfig, AuthProvider, AuthScope, AuthTokenType, JwtPayload } from './auth.types';\n\n/**\n * Default authentication configuration\n */\nexport const authConfig: AuthConfig = {\n  provider: AuthProvider.Local,\n  tokenType: AuthTokenType.Bearer,\n  tokenExpiry: 3600, // 1 hour\n  refreshThreshold: 300, // 5 minutes before expiry\n  scopes: [AuthScope.Read, AuthScope.Write],\n};\n\n/**\n * Generate authentication headers for API requests\n * @param token - Authentication token\n * @param tokenType - Type of token (default: Bearer)\n * @returns Headers object for HTTP requests\n */\nexport const getAuthHeaders = (\n  token: string,\n  tokenType: AuthTokenType = AuthTokenType.Bearer\n): Record<string, string> => {\n  return {\n    Authorization: `${tokenType} ${token}`,\n    'Content-Type': 'application/json',\n  };\n};\n\n/**\n * Check if a JWT token is expired\n * @param token - JWT token to check\n * @returns true if token is expired\n */\nexport const isTokenExpired = (token: string): boolean => {\n  try {\n    const parts = token.split('.');\n    if (parts.length !== 3 || !parts[1]) return true;\n    const payload = JSON.parse(atob(parts[1])) as JwtPayload;\n    const currentTime = Date.now() / 1000;\n    return payload.exp < currentTime;\n  } catch {\n    return true; // If we can't parse it, consider it expired\n  }\n};\n\n/**\n * Check if token needs refresh based on threshold\n * @param token - JWT token to check\n * @returns true if token should be refreshed\n */\nexport const shouldRefreshToken = (token: string): boolean => {\n  try {\n    const parts = token.split('.');\n    if (parts.length !== 3 || !parts[1]) return true;\n    const payload = JSON.parse(atob(parts[1])) as JwtPayload;\n    const currentTime = Date.now() / 1000;\n    return payload.exp - currentTime < authConfig.refreshThreshold;\n  } catch {\n    return true;\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "56df9a3bbe6e2cfe25e9cb1db9b19d59375738a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2l90umq93f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2l90umq93f();
cov_2l90umq93f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2l90umq93f().s[1]++;
exports.shouldRefreshToken = exports.isTokenExpired = exports.getAuthHeaders = exports.authConfig = void 0;
var auth_types_1 =
/* istanbul ignore next */
(cov_2l90umq93f().s[2]++, require("./auth.types"));
/**
 * Default authentication configuration
 */
/* istanbul ignore next */
cov_2l90umq93f().s[3]++;
exports.authConfig = {
  provider: auth_types_1.AuthProvider.Local,
  tokenType: auth_types_1.AuthTokenType.Bearer,
  tokenExpiry: 3600,
  // 1 hour
  refreshThreshold: 300,
  // 5 minutes before expiry
  scopes: [auth_types_1.AuthScope.Read, auth_types_1.AuthScope.Write]
};
/**
 * Generate authentication headers for API requests
 * @param token - Authentication token
 * @param tokenType - Type of token (default: Bearer)
 * @returns Headers object for HTTP requests
 */
/* istanbul ignore next */
cov_2l90umq93f().s[4]++;
var getAuthHeaders = function (token, tokenType) {
  /* istanbul ignore next */
  cov_2l90umq93f().f[0]++;
  cov_2l90umq93f().s[5]++;
  if (tokenType === void 0) {
    /* istanbul ignore next */
    cov_2l90umq93f().b[0][0]++;
    cov_2l90umq93f().s[6]++;
    tokenType = auth_types_1.AuthTokenType.Bearer;
  } else
  /* istanbul ignore next */
  {
    cov_2l90umq93f().b[0][1]++;
  }
  cov_2l90umq93f().s[7]++;
  return {
    Authorization: "".concat(tokenType, " ").concat(token),
    'Content-Type': 'application/json'
  };
};
/* istanbul ignore next */
cov_2l90umq93f().s[8]++;
exports.getAuthHeaders = getAuthHeaders;
/**
 * Check if a JWT token is expired
 * @param token - JWT token to check
 * @returns true if token is expired
 */
/* istanbul ignore next */
cov_2l90umq93f().s[9]++;
var isTokenExpired = function (token) {
  /* istanbul ignore next */
  cov_2l90umq93f().f[1]++;
  cov_2l90umq93f().s[10]++;
  try {
    var parts =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[11]++, token.split('.'));
    /* istanbul ignore next */
    cov_2l90umq93f().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_2l90umq93f().b[2][0]++, parts.length !== 3) ||
    /* istanbul ignore next */
    (cov_2l90umq93f().b[2][1]++, !parts[1])) {
      /* istanbul ignore next */
      cov_2l90umq93f().b[1][0]++;
      cov_2l90umq93f().s[13]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2l90umq93f().b[1][1]++;
    }
    var payload =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[14]++, JSON.parse(atob(parts[1])));
    var currentTime =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[15]++, Date.now() / 1000);
    /* istanbul ignore next */
    cov_2l90umq93f().s[16]++;
    return payload.exp < currentTime;
  } catch (_a) {
    /* istanbul ignore next */
    cov_2l90umq93f().s[17]++;
    return true; // If we can't parse it, consider it expired
  }
};
/* istanbul ignore next */
cov_2l90umq93f().s[18]++;
exports.isTokenExpired = isTokenExpired;
/**
 * Check if token needs refresh based on threshold
 * @param token - JWT token to check
 * @returns true if token should be refreshed
 */
/* istanbul ignore next */
cov_2l90umq93f().s[19]++;
var shouldRefreshToken = function (token) {
  /* istanbul ignore next */
  cov_2l90umq93f().f[2]++;
  cov_2l90umq93f().s[20]++;
  try {
    var parts =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[21]++, token.split('.'));
    /* istanbul ignore next */
    cov_2l90umq93f().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2l90umq93f().b[4][0]++, parts.length !== 3) ||
    /* istanbul ignore next */
    (cov_2l90umq93f().b[4][1]++, !parts[1])) {
      /* istanbul ignore next */
      cov_2l90umq93f().b[3][0]++;
      cov_2l90umq93f().s[23]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2l90umq93f().b[3][1]++;
    }
    var payload =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[24]++, JSON.parse(atob(parts[1])));
    var currentTime =
    /* istanbul ignore next */
    (cov_2l90umq93f().s[25]++, Date.now() / 1000);
    /* istanbul ignore next */
    cov_2l90umq93f().s[26]++;
    return payload.exp - currentTime < exports.authConfig.refreshThreshold;
  } catch (_a) {
    /* istanbul ignore next */
    cov_2l90umq93f().s[27]++;
    return true;
  }
};
/* istanbul ignore next */
cov_2l90umq93f().s[28]++;
exports.shouldRefreshToken = shouldRefreshToken;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoX3R5cGVzXzEiLCJjb3ZfMmw5MHVtcTkzZiIsInMiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImF1dGhDb25maWciLCJwcm92aWRlciIsIkF1dGhQcm92aWRlciIsIkxvY2FsIiwidG9rZW5UeXBlIiwiQXV0aFRva2VuVHlwZSIsIkJlYXJlciIsInRva2VuRXhwaXJ5IiwicmVmcmVzaFRocmVzaG9sZCIsInNjb3BlcyIsIkF1dGhTY29wZSIsIlJlYWQiLCJXcml0ZSIsImdldEF1dGhIZWFkZXJzIiwidG9rZW4iLCJmIiwiYiIsIkF1dGhvcml6YXRpb24iLCJjb25jYXQiLCJpc1Rva2VuRXhwaXJlZCIsInBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJwYXlsb2FkIiwiSlNPTiIsInBhcnNlIiwiYXRvYiIsImN1cnJlbnRUaW1lIiwiRGF0ZSIsIm5vdyIsImV4cCIsIl9hIiwic2hvdWxkUmVmcmVzaFRva2VuIl0sInNvdXJjZXMiOlsiL1VzZXJzL2dhbXphcmFtYXphbm92L0Rlc2t0b3AvZnVtby9zcmMvc2hhcmVkL2NvbmZpZy9hdXRoL2F1dGguY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhDb25maWcsIEF1dGhQcm92aWRlciwgQXV0aFNjb3BlLCBBdXRoVG9rZW5UeXBlLCBKd3RQYXlsb2FkIH0gZnJvbSAnLi9hdXRoLnR5cGVzJztcblxuLyoqXG4gKiBEZWZhdWx0IGF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGF1dGhDb25maWc6IEF1dGhDb25maWcgPSB7XG4gIHByb3ZpZGVyOiBBdXRoUHJvdmlkZXIuTG9jYWwsXG4gIHRva2VuVHlwZTogQXV0aFRva2VuVHlwZS5CZWFyZXIsXG4gIHRva2VuRXhwaXJ5OiAzNjAwLCAvLyAxIGhvdXJcbiAgcmVmcmVzaFRocmVzaG9sZDogMzAwLCAvLyA1IG1pbnV0ZXMgYmVmb3JlIGV4cGlyeVxuICBzY29wZXM6IFtBdXRoU2NvcGUuUmVhZCwgQXV0aFNjb3BlLldyaXRlXSxcbn07XG5cbi8qKlxuICogR2VuZXJhdGUgYXV0aGVudGljYXRpb24gaGVhZGVycyBmb3IgQVBJIHJlcXVlc3RzXG4gKiBAcGFyYW0gdG9rZW4gLSBBdXRoZW50aWNhdGlvbiB0b2tlblxuICogQHBhcmFtIHRva2VuVHlwZSAtIFR5cGUgb2YgdG9rZW4gKGRlZmF1bHQ6IEJlYXJlcilcbiAqIEByZXR1cm5zIEhlYWRlcnMgb2JqZWN0IGZvciBIVFRQIHJlcXVlc3RzXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBdXRoSGVhZGVycyA9IChcbiAgdG9rZW46IHN0cmluZyxcbiAgdG9rZW5UeXBlOiBBdXRoVG9rZW5UeXBlID0gQXV0aFRva2VuVHlwZS5CZWFyZXJcbik6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPT4ge1xuICByZXR1cm4ge1xuICAgIEF1dGhvcml6YXRpb246IGAke3Rva2VuVHlwZX0gJHt0b2tlbn1gLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH07XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGEgSldUIHRva2VuIGlzIGV4cGlyZWRcbiAqIEBwYXJhbSB0b2tlbiAtIEpXVCB0b2tlbiB0byBjaGVja1xuICogQHJldHVybnMgdHJ1ZSBpZiB0b2tlbiBpcyBleHBpcmVkXG4gKi9cbmV4cG9ydCBjb25zdCBpc1Rva2VuRXhwaXJlZCA9ICh0b2tlbjogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICAgIGlmIChwYXJ0cy5sZW5ndGggIT09IDMgfHwgIXBhcnRzWzFdKSByZXR1cm4gdHJ1ZTtcbiAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShhdG9iKHBhcnRzWzFdKSkgYXMgSnd0UGF5bG9hZDtcbiAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCkgLyAxMDAwO1xuICAgIHJldHVybiBwYXlsb2FkLmV4cCA8IGN1cnJlbnRUaW1lO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gdHJ1ZTsgLy8gSWYgd2UgY2FuJ3QgcGFyc2UgaXQsIGNvbnNpZGVyIGl0IGV4cGlyZWRcbiAgfVxufTtcblxuLyoqXG4gKiBDaGVjayBpZiB0b2tlbiBuZWVkcyByZWZyZXNoIGJhc2VkIG9uIHRocmVzaG9sZFxuICogQHBhcmFtIHRva2VuIC0gSldUIHRva2VuIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB0cnVlIGlmIHRva2VuIHNob3VsZCBiZSByZWZyZXNoZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHNob3VsZFJlZnJlc2hUb2tlbiA9ICh0b2tlbjogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICAgIGlmIChwYXJ0cy5sZW5ndGggIT09IDMgfHwgIXBhcnRzWzFdKSByZXR1cm4gdHJ1ZTtcbiAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShhdG9iKHBhcnRzWzFdKSkgYXMgSnd0UGF5bG9hZDtcbiAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCkgLyAxMDAwO1xuICAgIHJldHVybiBwYXlsb2FkLmV4cCAtIGN1cnJlbnRUaW1lIDwgYXV0aENvbmZpZy5yZWZyZXNoVGhyZXNob2xkO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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