7d0b43834eae00c7afb5fc3c9cd7ab5a
"use strict";

/**
 * Universal API Types
 *
 * Common interfaces and types that any enterprise application needs.
 * Foundation-level types only - no app-specific interfaces.
 */
/* istanbul ignore next */
function cov_pgcqcpkze() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/types.ts";
  var hash = "8beaff2512e9f6a35c92f4ced135b3af1beb6d46";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/types.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 144
        }
      },
      "2": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "3": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "4": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 52
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "16": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 42
        }
      },
      "17": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 125
        }
      },
      "18": {
        start: {
          line: 38,
          column: 86
        },
        end: {
          line: 38,
          column: 119
        }
      },
      "19": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 139
        }
      },
      "20": {
        start: {
          line: 39,
          column: 93
        },
        end: {
          line: 39,
          column: 133
        }
      },
      "21": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 145
        }
      },
      "22": {
        start: {
          line: 40,
          column: 96
        },
        end: {
          line: 40,
          column: 139
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 1
          },
          end: {
            line: 14,
            column: 2
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 1
          },
          end: {
            line: 26,
            column: 2
          }
        },
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 72
          },
          end: {
            line: 38,
            column: 73
          }
        },
        loc: {
          start: {
            line: 38,
            column: 84
          },
          end: {
            line: 38,
            column: 121
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 79
          },
          end: {
            line: 39,
            column: 80
          }
        },
        loc: {
          start: {
            line: 39,
            column: 91
          },
          end: {
            line: 39,
            column: 135
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 82
          },
          end: {
            line: 40,
            column: 83
          }
        },
        loc: {
          start: {
            line: 40,
            column: 94
          },
          end: {
            line: 40,
            column: 141
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 3
          },
          end: {
            line: 21,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 3
          },
          end: {
            line: 21,
            column: 18
          }
        }, {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 69
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 3
          },
          end: {
            line: 33,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 3
          },
          end: {
            line: 33,
            column: 17
          }
        }, {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 33,
            column: 66
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/types.ts",
      mappings: ";AAAA;;;;;GAKG;;;AA+HH;;GAEG;AACH,IAAY,eAOX;AAPD,WAAY,eAAe;IACzB,4CAAyB,CAAA;IACzB,0CAAuB,CAAA;IACvB,kDAA+B,CAAA;IAC/B,gDAA6B,CAAA;IAC7B,gDAA6B,CAAA;IAC7B,kCAAe,CAAA;AACjB,CAAC,EAPW,eAAe,+BAAf,eAAe,QAO1B;AAwBD;;GAEG;AACH,IAAY,cAOX;AAPD,WAAY,cAAc;IACxB,2CAAyB,CAAA;IACzB,yCAAuB,CAAA;IACvB,iDAA+B,CAAA;IAC/B,+CAA6B,CAAA;IAC7B,+CAA6B,CAAA;IAC7B,iCAAe,CAAA;AACjB,CAAC,EAPW,cAAc,8BAAd,cAAc,QAOzB;AAgGD,+EAA+E;AAC/E,uBAAuB;AACvB,+EAA+E;AAE/E,2CAAyF;AAAhF,0GAAA,YAAY,OAAA;AAAE,iHAAA,mBAAmB,OAAA;AAAE,oHAAA,sBAAsB,OAAA;AAElE,+EAA+E;AAC/E,mBAAmB;AACnB,+EAA+E;AAE/E,iDAAiD",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/data/types/types.ts"],
      sourcesContent: ["/**\n * Universal API Types\n *\n * Common interfaces and types that any enterprise application needs.\n * Foundation-level types only - no app-specific interfaces.\n */\n\n// ============================================================================\n// COMMON REQUEST/RESPONSE TYPES\n// ============================================================================\n\n/**\n * Standard API response wrapper used by most enterprise APIs\n */\nexport interface ApiResponse<T = unknown> {\n  data: T;\n  success: boolean;\n  message?: string;\n  errors?: string[];\n  meta?: {\n    total?: number;\n    page?: number;\n    limit?: number;\n    hasNext?: boolean;\n    hasPrev?: boolean;\n  };\n}\n\n/**\n * Standard error response format\n */\nexport interface ApiError {\n  message: string;\n  code?: string;\n  statusCode?: number;\n  details?: unknown;\n  timestamp: string;\n  requestId?: string;\n}\n\n/**\n * Standard pagination parameters\n */\nexport interface PaginationParams {\n  page?: number;\n  limit?: number;\n  offset?: number;\n  sort?: string;\n  order?: 'asc' | 'desc';\n}\n\n/**\n * Standard filter parameters\n */\nexport interface FilterParams {\n  search?: string;\n  status?: string;\n  dateFrom?: string;\n  dateTo?: string;\n  [key: string]: unknown;\n}\n\n// ============================================================================\n// AUTHENTICATION TYPES\n// ============================================================================\n\n/**\n * Standard token structure used by most auth systems\n */\nexport interface AuthTokens {\n  accessToken: string;\n  refreshToken?: string;\n  tokenType?: string;\n  expiresIn?: number;\n  expiresAt?: string;\n}\n\n/**\n * Standard user session info\n */\nexport interface SessionInfo {\n  userId: string;\n  email?: string;\n  roles?: string[];\n  permissions?: string[];\n  metadata?: Record<string, unknown>;\n}\n\n// ============================================================================\n// FILE UPLOAD TYPES\n// ============================================================================\n\n/**\n * Standard file upload response\n */\nexport interface FileUploadResponse {\n  id: string;\n  filename: string;\n  originalName: string;\n  mimeType: string;\n  size: number;\n  url: string;\n  uploadedAt: string;\n}\n\n/**\n * File upload progress info\n */\nexport interface UploadProgress {\n  loaded: number;\n  total: number;\n  percentage: number;\n  speed?: number;\n  timeRemaining?: number;\n}\n\n// ============================================================================\n// WEBSOCKET MESSAGE TYPES\n// ============================================================================\n\n/**\n * Standard WebSocket message structure\n */\nexport interface WebSocketMessage<T = unknown> {\n  type: string;\n  payload?: T;\n  id?: string;\n  timestamp?: string;\n  userId?: string;\n  requestId?: string;\n}\n\n/**\n * WebSocket connection state\n */\nexport enum ConnectionState {\n  CONNECTING = 'connecting',\n  CONNECTED = 'connected',\n  DISCONNECTING = 'disconnecting',\n  DISCONNECTED = 'disconnected',\n  RECONNECTING = 'reconnecting',\n  ERROR = 'error',\n}\n\n/**\n * WebSocket configuration\n */\nexport interface WebSocketConfig {\n  url: string;\n  protocols?: string | string[];\n  reconnectInterval?: number;\n  maxReconnectAttempts?: number;\n  timeout?: number;\n  heartbeatInterval?: number;\n  enableHeartbeat?: boolean;\n}\n\n/**\n * WebSocket subscription\n */\nexport interface WebSocketSubscription {\n  id: string;\n  event: string;\n  callback: (message: WebSocketMessage) => void;\n}\n\n/**\n * WebSocket state enum\n */\nexport enum WebSocketState {\n  CONNECTING = 'connecting',\n  CONNECTED = 'connected',\n  DISCONNECTING = 'disconnecting',\n  DISCONNECTED = 'disconnected',\n  RECONNECTING = 'reconnecting',\n  ERROR = 'error',\n}\n\n// ============================================================================\n// HTTP CONFIGURATION TYPES\n// ============================================================================\n\n/**\n * Standard HTTP client configuration\n */\nexport interface HttpClientConfig {\n  baseURL?: string;\n  timeout?: number;\n  retries?: number;\n  retryDelay?: number;\n  headers?: Record<string, string>;\n  withCredentials?: boolean;\n  skipAuth?: boolean;\n}\n\n/**\n * Request configuration override\n */\nexport interface RequestConfig extends HttpClientConfig {\n  skipRetry?: boolean;\n  retryAttempts?: number;\n  metadata?: Record<string, unknown>;\n}\n\n// ============================================================================\n// CACHE TYPES\n// ============================================================================\n\n/**\n * Cache configuration options\n */\nexport interface CacheConfig {\n  ttl?: number;\n  maxSize?: number;\n  strategy?: 'lru' | 'lfu' | 'fifo';\n  persistToStorage?: boolean;\n  storageKey?: string;\n}\n\n/**\n * Cache entry metadata\n */\nexport interface CacheEntry<T = unknown> {\n  data: T;\n  timestamp: number;\n  ttl?: number;\n  hits: number;\n  size?: number;\n}\n\n// ============================================================================\n// UTILITY TYPES\n// ============================================================================\n\n/**\n * Standard ID types used across applications\n */\nexport type ID = string | number;\n\n/**\n * Standard timestamp formats\n */\nexport type Timestamp = string | number | Date;\n\n/**\n * Standard sort order\n */\nexport type SortOrder = 'asc' | 'desc';\n\n/**\n * Standard status types\n */\nexport type Status = 'active' | 'inactive' | 'pending' | 'suspended' | 'deleted';\n\n/**\n * Standard loading state\n */\nexport interface LoadingState {\n  isLoading: boolean;\n  isError: boolean;\n  error?: ApiError | null;\n  isSuccess: boolean;\n}\n\n/**\n * Async operation state\n */\nexport interface AsyncState<T = unknown> extends LoadingState {\n  data?: T | null;\n  lastUpdated?: Timestamp;\n}\n\n// ============================================================================\n// AUTH TOKEN CONSTANTS\n// ============================================================================\n\nexport { AuthTokenKey, getAllAuthTokenKeys, getPrimaryAuthTokenKey } from './authTokens';\n\n// ============================================================================\n// EXPORT ALL TYPES\n// ============================================================================\n\n// Types are already exported as interfaces above\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8beaff2512e9f6a35c92f4ced135b3af1beb6d46"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pgcqcpkze = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pgcqcpkze();
cov_pgcqcpkze().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pgcqcpkze().s[1]++;
exports.getPrimaryAuthTokenKey = exports.getAllAuthTokenKeys = exports.AuthTokenKey = exports.WebSocketState = exports.ConnectionState = void 0;
/**
 * WebSocket connection state
 */
var ConnectionState;
/* istanbul ignore next */
cov_pgcqcpkze().s[2]++;
(function (ConnectionState) {
  /* istanbul ignore next */
  cov_pgcqcpkze().f[0]++;
  cov_pgcqcpkze().s[3]++;
  ConnectionState["CONNECTING"] = "connecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[4]++;
  ConnectionState["CONNECTED"] = "connected";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[5]++;
  ConnectionState["DISCONNECTING"] = "disconnecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[6]++;
  ConnectionState["DISCONNECTED"] = "disconnected";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[7]++;
  ConnectionState["RECONNECTING"] = "reconnecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[8]++;
  ConnectionState["ERROR"] = "error";
})(
/* istanbul ignore next */
(cov_pgcqcpkze().b[0][0]++, ConnectionState) ||
/* istanbul ignore next */
(cov_pgcqcpkze().b[0][1]++, exports.ConnectionState = ConnectionState = {}));
/**
 * WebSocket state enum
 */
var WebSocketState;
/* istanbul ignore next */
cov_pgcqcpkze().s[9]++;
(function (WebSocketState) {
  /* istanbul ignore next */
  cov_pgcqcpkze().f[1]++;
  cov_pgcqcpkze().s[10]++;
  WebSocketState["CONNECTING"] = "connecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[11]++;
  WebSocketState["CONNECTED"] = "connected";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[12]++;
  WebSocketState["DISCONNECTING"] = "disconnecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[13]++;
  WebSocketState["DISCONNECTED"] = "disconnected";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[14]++;
  WebSocketState["RECONNECTING"] = "reconnecting";
  /* istanbul ignore next */
  cov_pgcqcpkze().s[15]++;
  WebSocketState["ERROR"] = "error";
})(
/* istanbul ignore next */
(cov_pgcqcpkze().b[1][0]++, WebSocketState) ||
/* istanbul ignore next */
(cov_pgcqcpkze().b[1][1]++, exports.WebSocketState = WebSocketState = {}));
// ============================================================================
// AUTH TOKEN CONSTANTS
// ============================================================================
var authTokens_1 =
/* istanbul ignore next */
(cov_pgcqcpkze().s[16]++, require("./authTokens"));
/* istanbul ignore next */
cov_pgcqcpkze().s[17]++;
Object.defineProperty(exports, "AuthTokenKey", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pgcqcpkze().f[2]++;
    cov_pgcqcpkze().s[18]++;
    return authTokens_1.AuthTokenKey;
  }
});
/* istanbul ignore next */
cov_pgcqcpkze().s[19]++;
Object.defineProperty(exports, "getAllAuthTokenKeys", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pgcqcpkze().f[3]++;
    cov_pgcqcpkze().s[20]++;
    return authTokens_1.getAllAuthTokenKeys;
  }
});
/* istanbul ignore next */
cov_pgcqcpkze().s[21]++;
Object.defineProperty(exports, "getPrimaryAuthTokenKey", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pgcqcpkze().f[4]++;
    cov_pgcqcpkze().s[22]++;
    return authTokens_1.getPrimaryAuthTokenKey;
  }
});
// ============================================================================
// EXPORT ALL TYPES
// ============================================================================
// Types are already exported as interfaces above
//# sourceMappingURL=data:application/json;charset=utf-8;base64,