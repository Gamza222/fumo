1eff1da2b38d25a851be4616d3801905
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PerformanceMonitor = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importStar(require("react"));
var performance_monitor_module_scss_1 = __importDefault(require("./performance-monitor.module.scss"));
var PerformanceMonitor = function (_a) {
    var _b = _a.position, position = _b === void 0 ? 'top-right' : _b, className = _a.className;
    var _c = (0, react_1.useState)(false), isOpen = _c[0], setIsOpen = _c[1];
    var _d = (0, react_1.useState)({
        renderTime: 0,
        memoryUsage: 0,
        lcp: 0,
        fcp: 0,
        cls: 0,
    }), performanceData = _d[0], setPerformanceData = _d[1];
    var positionClass = {
        'top-left': performance_monitor_module_scss_1.default.monitorTopLeft,
        'top-right': performance_monitor_module_scss_1.default.monitorTopRight,
        'bottom-left': performance_monitor_module_scss_1.default.monitorBottomLeft,
        'bottom-right': performance_monitor_module_scss_1.default.monitorBottomRight,
    };
    (0, react_1.useEffect)(function () {
        var interval = setInterval(function () {
            setPerformanceData({
                renderTime: Math.random() * 50,
                memoryUsage: Math.random() * 200,
                lcp: Math.random() * 3000,
                fcp: Math.random() * 2000,
                cls: Math.random() * 0.2,
            });
        }, 1000);
        return function () { return clearInterval(interval); };
    }, []);
    var getProgressClass = function (value, threshold) {
        if (value > threshold)
            return performance_monitor_module_scss_1.default.progressFillError;
        if (value > threshold * 0.7)
            return performance_monitor_module_scss_1.default.progressFillWarning;
        return performance_monitor_module_scss_1.default.progressFillGood;
    };
    var getVitalsClass = function (value, threshold) {
        return value > threshold ? performance_monitor_module_scss_1.default.vitalsValueError : performance_monitor_module_scss_1.default.vitalsValueGood;
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: "".concat(performance_monitor_module_scss_1.default.monitor, " ").concat(positionClass[position], " ").concat(className || ''), children: [(0, jsx_runtime_1.jsx)("button", { onClick: function () { return setIsOpen(!isOpen); }, className: performance_monitor_module_scss_1.default.toggleButton, children: "Performance" }), isOpen && ((0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.panelContent, children: [(0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.panelHeader, children: [(0, jsx_runtime_1.jsx)("h3", { className: performance_monitor_module_scss_1.default.panelTitle, children: "Performance" }), (0, jsx_runtime_1.jsx)("button", { onClick: function () { return setIsOpen(false); }, className: performance_monitor_module_scss_1.default.closeButton, children: "\u00D7" })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricSection, children: [(0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricHeader, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.metricLabel, children: "Render Time" }), (0, jsx_runtime_1.jsxs)("span", { className: performance_monitor_module_scss_1.default.metricValue, children: [performanceData.renderTime.toFixed(1), "ms"] })] }), (0, jsx_runtime_1.jsx)("div", { className: performance_monitor_module_scss_1.default.progressBar, children: (0, jsx_runtime_1.jsx)("div", { className: "".concat(performance_monitor_module_scss_1.default.progressFill, " ").concat(getProgressClass(performanceData.renderTime, 20)), style: {
                                        width: "".concat(Math.min((performanceData.renderTime / 50) * 100, 100), "%"),
                                    } }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricSection, children: [(0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricHeader, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.metricLabel, children: "Memory Usage" }), (0, jsx_runtime_1.jsxs)("span", { className: performance_monitor_module_scss_1.default.metricValue, children: [performanceData.memoryUsage.toFixed(1), "MB"] })] }), (0, jsx_runtime_1.jsx)("div", { className: performance_monitor_module_scss_1.default.progressBar, children: (0, jsx_runtime_1.jsx)("div", { className: "".concat(performance_monitor_module_scss_1.default.progressFill, " ").concat(getProgressClass(performanceData.memoryUsage, 100)), style: {
                                        width: "".concat(Math.min((performanceData.memoryUsage / 200) * 100, 100), "%"),
                                    } }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricSection, children: [(0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.metricHeader, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.metricLabel, children: "Bundle Size" }), (0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.metricValue, children: "2.1MB" })] }), (0, jsx_runtime_1.jsx)("div", { className: performance_monitor_module_scss_1.default.progressBar, children: (0, jsx_runtime_1.jsx)("div", { className: "".concat(performance_monitor_module_scss_1.default.progressFill, " ").concat(getProgressClass(2.1, 1.5)), style: { width: "".concat(Math.min((2.1 / 3) * 100, 100), "%") } }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.vitalsSection, children: [(0, jsx_runtime_1.jsx)("h4", { className: performance_monitor_module_scss_1.default.vitalsTitle, children: "Web Vitals" }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.vitalsList, children: [(0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.vitalsRow, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.vitalsLabel, children: "LCP:" }), (0, jsx_runtime_1.jsxs)("span", { className: getVitalsClass(performanceData.lcp, 2500), children: [performanceData.lcp.toFixed(0), "ms"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.vitalsRow, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.vitalsLabel, children: "FCP:" }), (0, jsx_runtime_1.jsxs)("span", { className: getVitalsClass(performanceData.fcp, 1800), children: [performanceData.fcp.toFixed(0), "ms"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: performance_monitor_module_scss_1.default.vitalsRow, children: [(0, jsx_runtime_1.jsx)("span", { className: performance_monitor_module_scss_1.default.vitalsLabel, children: "CLS:" }), (0, jsx_runtime_1.jsx)("span", { className: getVitalsClass(performanceData.cls, 0.1), children: performanceData.cls.toFixed(3) })] })] })] })] }))] }));
};
exports.PerformanceMonitor = PerformanceMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,