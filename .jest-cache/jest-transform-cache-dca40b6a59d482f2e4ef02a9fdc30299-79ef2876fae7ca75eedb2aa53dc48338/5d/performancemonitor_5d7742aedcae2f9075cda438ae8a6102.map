{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/performance-monitor/performance-monitor.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/performance-monitor/performance-monitor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './performance-monitor.module.scss';\n\nexport interface PerformanceData {\n  renderTime: number;\n  memoryUsage: number;\n  lcp: number;\n  fcp: number;\n  cls: number;\n}\n\nexport interface PerformanceMonitorProps {\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  className?: string;\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n  position = 'top-right',\n  className,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [performanceData, setPerformanceData] = useState<PerformanceData>({\n    renderTime: 0,\n    memoryUsage: 0,\n    lcp: 0,\n    fcp: 0,\n    cls: 0,\n  });\n\n  const positionClass = {\n    'top-left': styles.monitorTopLeft,\n    'top-right': styles.monitorTopRight,\n    'bottom-left': styles.monitorBottomLeft,\n    'bottom-right': styles.monitorBottomRight,\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPerformanceData({\n        renderTime: Math.random() * 50,\n        memoryUsage: Math.random() * 200,\n        lcp: Math.random() * 3000,\n        fcp: Math.random() * 2000,\n        cls: Math.random() * 0.2,\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getProgressClass = (value: number, threshold: number) => {\n    if (value > threshold) return styles.progressFillError;\n    if (value > threshold * 0.7) return styles.progressFillWarning;\n    return styles.progressFillGood;\n  };\n\n  const getVitalsClass = (value: number, threshold: number) => {\n    return value > threshold ? styles.vitalsValueError : styles.vitalsValueGood;\n  };\n\n  return (\n    <div className={`${styles.monitor} ${positionClass[position]} ${className || ''}`}>\n      <button onClick={() => setIsOpen(!isOpen)} className={styles.toggleButton}>\n        Performance\n      </button>\n\n      {isOpen && (\n        <div className={styles.panelContent}>\n          <div className={styles.panelHeader}>\n            <h3 className={styles.panelTitle}>Performance</h3>\n            <button onClick={() => setIsOpen(false)} className={styles.closeButton}>\n              Ã—\n            </button>\n          </div>\n\n          <div className={styles.metricSection}>\n            <div className={styles.metricHeader}>\n              <span className={styles.metricLabel}>Render Time</span>\n              <span className={styles.metricValue}>{performanceData.renderTime.toFixed(1)}ms</span>\n            </div>\n            <div className={styles.progressBar}>\n              <div\n                className={`${styles.progressFill} ${getProgressClass(performanceData.renderTime, 20)}`}\n                style={{\n                  width: `${Math.min((performanceData.renderTime / 50) * 100, 100)}%`,\n                }}\n              />\n            </div>\n          </div>\n\n          <div className={styles.metricSection}>\n            <div className={styles.metricHeader}>\n              <span className={styles.metricLabel}>Memory Usage</span>\n              <span className={styles.metricValue}>{performanceData.memoryUsage.toFixed(1)}MB</span>\n            </div>\n            <div className={styles.progressBar}>\n              <div\n                className={`${styles.progressFill} ${getProgressClass(performanceData.memoryUsage, 100)}`}\n                style={{\n                  width: `${Math.min((performanceData.memoryUsage / 200) * 100, 100)}%`,\n                }}\n              />\n            </div>\n          </div>\n\n          <div className={styles.metricSection}>\n            <div className={styles.metricHeader}>\n              <span className={styles.metricLabel}>Bundle Size</span>\n              <span className={styles.metricValue}>2.1MB</span>\n            </div>\n            <div className={styles.progressBar}>\n              <div\n                className={`${styles.progressFill} ${getProgressClass(2.1, 1.5)}`}\n                style={{ width: `${Math.min((2.1 / 3) * 100, 100)}%` }}\n              />\n            </div>\n          </div>\n\n          <div className={styles.vitalsSection}>\n            <h4 className={styles.vitalsTitle}>Web Vitals</h4>\n            <div className={styles.vitalsList}>\n              <div className={styles.vitalsRow}>\n                <span className={styles.vitalsLabel}>LCP:</span>\n                <span className={getVitalsClass(performanceData.lcp, 2500)}>\n                  {performanceData.lcp.toFixed(0)}ms\n                </span>\n              </div>\n              <div className={styles.vitalsRow}>\n                <span className={styles.vitalsLabel}>FCP:</span>\n                <span className={getVitalsClass(performanceData.fcp, 1800)}>\n                  {performanceData.fcp.toFixed(0)}ms\n                </span>\n              </div>\n              <div className={styles.vitalsRow}>\n                <span className={styles.vitalsLabel}>CLS:</span>\n                <span className={getVitalsClass(performanceData.cls, 0.1)}>\n                  {performanceData.cls.toFixed(3)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"version":3}