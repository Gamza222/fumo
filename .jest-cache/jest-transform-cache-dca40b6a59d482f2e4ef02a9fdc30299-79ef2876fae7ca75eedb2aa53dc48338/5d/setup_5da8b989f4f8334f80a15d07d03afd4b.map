{"version":3,"names":["cov_28g237gy9i","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","jest","mock","sentry_mock_1","mockSentry","require"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/lib/setup.ts"],"sourcesContent":["/**\n * External Mocks Auto-Setup\n *\n * Automatically applies external library mocks globally for all tests.\n * This file is imported by the Jest setup to ensure consistent mocking.\n */\n\nimport { mockSentry } from './sentry.mock';\n\n// ============================================================================\n// AUTOMATIC MOCK SETUP\n// ============================================================================\n\n/**\n * Auto-mock @sentry/react with our centralized mock\n * This ensures all test files get the same Sentry mock without manual setup\n */\njest.mock('@sentry/react', (): typeof mockSentry => mockSentry);\n\n// ============================================================================\n// FUTURE AUTO-MOCKS\n// ============================================================================\n\n// NOTE: Add other global mocks here as needed:\n// jest.mock('google-analytics', () => mockGoogleAnalytics);\n// jest.mock('@stripe/stripe-js', () => mockStripe);\n// etc.\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAzB,IAAA;EAAA;EAAA,IAAA0B,QAAA,GAAAzB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAuB,QAAA,CAAA3B,IAAA,KAAA2B,QAAA,CAAA3B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA0B,QAAA,CAAA3B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAuB,cAAA,GAAAD,QAAA,CAAA3B,IAAA;EAAA;IAiBU;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAA6B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA7B,cAAA;AAAAA,cAAA,GAAAiB,CAAA;;;;AARV;AACA;AACA;AAEA;;;;AAAA;AAAAjB,cAAA,GAAAiB,CAAA;AAIAa,IAAI,CAACC,IAAI,CAAC,eAAe,EAAE;EAAA;EAAA/B,cAAA,GAAAkB,CAAA;EAAAlB,cAAA,GAAAiB,CAAA;EAAyB,OAAAe,aAAA,CAAAC,UAAU;AAAV,CAAU,CAAC;AAV/D,IAAAD,aAAA;AAAA;AAAA,CAAAhC,cAAA,GAAAiB,CAAA,OAAAiB,OAAA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA","ignoreList":[]}