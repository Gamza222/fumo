{"file":"/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx"],"sourcesContent":["/**\n * ProgressBar Component Tests\n *\n * Comprehensive tests for the ProgressBar component using semantic queries.\n */\n\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport { ProgressBar } from \"./ProgressBar\";\n\n// ============================================================================\n// TEST SETUP\n// ============================================================================\n\n// Mock the shared Text component\njest.mock(\"@/shared/ui/Text\", () => ({\n  Text: ({\n    children,\n    className,\n  }: {\n    children: React.ReactNode;\n    className?: string;\n  }) => <span className={className}>{children}</span>,\n}));\n\n// Mock the classNames utility\njest.mock(\"@/shared/lib/utils/classNames\", () => ({\n  classNames: (base: string, mods: object, classes: string[]) => {\n    return [base, ...classes].filter(Boolean).join(\" \");\n  },\n}));\n\n// ============================================================================\n// BASIC RENDERING TESTS\n// ============================================================================\n\ndescribe(\"ProgressBar\", () => {\n  describe(\"Basic Rendering\", () => {\n    it(\"should render with default props\", () => {\n      render(<ProgressBar progress={50} />);\n\n      expect(screen.getByText(\"50%\")).toBeInTheDocument();\n    });\n\n    it(\"should render with custom className\", () => {\n      const { container } = render(\n        <ProgressBar progress={25} className=\"custom-class\" />\n      );\n\n      const progressBar = container.firstChild;\n      expect(progressBar).toHaveClass(\"custom-class\");\n    });\n\n    it(\"should render progress bar with correct width\", () => {\n      const { container } = render(<ProgressBar progress={75} />);\n\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 75%\");\n    });\n  });\n\n  // ============================================================================\n  // PROGRESS DISPLAY TESTS\n  // ============================================================================\n\n  describe(\"Progress Display\", () => {\n    it(\"should show percentage when showPercentage is true\", () => {\n      render(<ProgressBar progress={33} showPercentage={true} />);\n\n      expect(screen.getByText(\"33%\")).toBeInTheDocument();\n    });\n\n    it(\"should hide percentage when showPercentage is false\", () => {\n      render(<ProgressBar progress={67} showPercentage={false} />);\n\n      expect(screen.queryByText(\"67%\")).not.toBeInTheDocument();\n    });\n\n    it(\"should round progress to nearest integer\", () => {\n      render(<ProgressBar progress={33.7} />);\n\n      expect(screen.getByText(\"34%\")).toBeInTheDocument();\n    });\n\n    it(\"should handle edge case of 0 progress\", () => {\n      const { container } = render(<ProgressBar progress={0} />);\n\n      expect(screen.getByText(\"0%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 0%\");\n    });\n\n    it(\"should handle edge case of 100 progress\", () => {\n      const { container } = render(<ProgressBar progress={100} />);\n\n      expect(screen.getByText(\"100%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 100%\");\n    });\n  });\n\n  // ============================================================================\n  // MESSAGE DISPLAY TESTS\n  // ============================================================================\n\n  describe(\"Message Display\", () => {\n    it(\"should show message when provided\", () => {\n      render(<ProgressBar progress={50} message=\"Loading files...\" />);\n\n      expect(screen.getByText(\"Loading files...\")).toBeInTheDocument();\n    });\n\n    it(\"should not show message when not provided\", () => {\n      render(<ProgressBar progress={50} />);\n\n      expect(screen.getByText(\"50%\")).toBeInTheDocument();\n      expect(screen.queryByText(\"Loading files...\")).not.toBeInTheDocument();\n    });\n\n    it(\"should show both percentage and message\", () => {\n      render(\n        <ProgressBar\n          progress={75}\n          message=\"Almost done...\"\n          showPercentage={true}\n        />\n      );\n\n      expect(screen.getByText(\"75%\")).toBeInTheDocument();\n      expect(screen.getByText(\"Almost done...\")).toBeInTheDocument();\n    });\n  });\n\n  // ============================================================================\n  // PROGRESS VALIDATION TESTS\n  // ============================================================================\n\n  describe(\"Progress Validation\", () => {\n    it(\"should show actual progress above 100 (no clamping in display)\", () => {\n      const { container } = render(<ProgressBar progress={150} />);\n\n      expect(screen.getByText(\"150%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 100%\"); // Width is clamped, but display shows actual\n    });\n\n    it(\"should show actual progress below 0 (no clamping in display)\", () => {\n      const { container } = render(<ProgressBar progress={-25} />);\n\n      expect(screen.getByText(\"-25%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 0%\"); // Width is clamped, but display shows actual\n    });\n  });\n\n  // ============================================================================\n  // COMPONENT STRUCTURE TESTS\n  // ============================================================================\n\n  describe(\"Component Structure\", () => {\n    it(\"should render with correct DOM structure\", () => {\n      const { container } = render(\n        <ProgressBar progress={50} message=\"Test message\" />\n      );\n\n      const progressBar = container.firstChild as HTMLElement;\n      expect(progressBar).toBeInTheDocument();\n\n      // Check container exists\n      const containerDiv = progressBar.querySelector(\".container\");\n      expect(containerDiv).toBeInTheDocument();\n\n      // Check bar exists\n      const bar = progressBar.querySelector(\".bar\");\n      expect(bar).toBeInTheDocument();\n\n      // Check percentage text exists\n      expect(screen.getByText(\"50%\")).toBeInTheDocument();\n\n      // Check message text exists\n      expect(screen.getByText(\"Test message\")).toBeInTheDocument();\n    });\n\n    it(\"should render percentage and message as separate text elements\", () => {\n      render(<ProgressBar progress={25} message=\"Test message\" />);\n\n      const percentageText = screen.getByText(\"25%\");\n      const messageText = screen.getByText(\"Test message\");\n\n      expect(percentageText).toBeInTheDocument();\n      expect(messageText).toBeInTheDocument();\n      expect(percentageText).not.toBe(messageText);\n    });\n  });\n\n  // ============================================================================\n  // PROPS COMBINATIONS TESTS\n  // ============================================================================\n\n  describe(\"Props Combinations\", () => {\n    it(\"should work with all props provided\", () => {\n      const { container } = render(\n        <ProgressBar\n          progress={85}\n          showPercentage={true}\n          message=\"Finalizing...\"\n          className=\"custom-progress\"\n        />\n      );\n\n      expect(screen.getByText(\"85%\")).toBeInTheDocument();\n      expect(screen.getByText(\"Finalizing...\")).toBeInTheDocument();\n\n      const progressBar = container.firstChild as HTMLElement;\n      expect(progressBar).toHaveClass(\"custom-progress\");\n    });\n\n    it(\"should work with minimal props\", () => {\n      render(<ProgressBar progress={0} />);\n\n      expect(screen.getByText(\"0%\")).toBeInTheDocument();\n    });\n\n    it(\"should handle empty message gracefully\", () => {\n      render(<ProgressBar progress={50} message=\"\" />);\n\n      expect(screen.getByText(\"50%\")).toBeInTheDocument();\n      expect(screen.queryByText(\"\")).not.toBeInTheDocument();\n    });\n  });\n\n  // ============================================================================\n  // EDGE CASES TESTS\n  // ============================================================================\n\n  describe(\"Edge Cases\", () => {\n    it(\"should handle decimal progress values\", () => {\n      render(<ProgressBar progress={33.333} />);\n\n      expect(screen.getByText(\"33%\")).toBeInTheDocument();\n    });\n\n    it(\"should handle very large progress values\", () => {\n      const { container } = render(<ProgressBar progress={999} />);\n\n      expect(screen.getByText(\"999%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 100%\"); // Clamped\n    });\n\n    it(\"should handle very negative progress values\", () => {\n      const { container } = render(<ProgressBar progress={-999} />);\n\n      expect(screen.getByText(\"-999%\")).toBeInTheDocument();\n      const progressBar = container.firstChild as HTMLElement;\n      const barElement = progressBar.querySelector(\".bar\");\n      expect(barElement).toHaveStyle(\"width: 0%\"); // Clamped\n    });\n  });\n});\n"],"version":3}