2b42753a1e70e661d1be49dde313751f
"use strict";

/**
 * Error mock types
 *
 * Contains only types that are actually used in the error mock system.
 * Currently only supports reset function mocking for ErrorBoundary testing.
 */
// No types are currently needed since createMockResetFunction uses jest.MockedFunction directly
// This file is kept for future expansion if additional error mock types are needed
/* istanbul ignore next */
function cov_2cxpcek85r() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/types/types.ts";
  var hash = "bb445d6af29da8a5cf5ed7102b65ec43e2c5bb11";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/types/types.ts",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/types/types.ts",
      mappings: ";AAAA;;;;;GAKG;AAEH,gGAAgG;AAChG,mFAAmF",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/types/types.ts"],
      sourcesContent: ["/**\n * Error mock types\n *\n * Contains only types that are actually used in the error mock system.\n * Currently only supports reset function mocking for ErrorBoundary testing.\n */\n\n// No types are currently needed since createMockResetFunction uses jest.MockedFunction directly\n// This file is kept for future expansion if additional error mock types are needed\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb445d6af29da8a5cf5ed7102b65ec43e2c5bb11"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cxpcek85r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cxpcek85r();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmN4cGNlazg1ciIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3NoYXJlZC90ZXN0aW5nL21vY2tzL2Vycm9ycy90eXBlcy90eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVycm9yIG1vY2sgdHlwZXNcbiAqXG4gKiBDb250YWlucyBvbmx5IHR5cGVzIHRoYXQgYXJlIGFjdHVhbGx5IHVzZWQgaW4gdGhlIGVycm9yIG1vY2sgc3lzdGVtLlxuICogQ3VycmVudGx5IG9ubHkgc3VwcG9ydHMgcmVzZXQgZnVuY3Rpb24gbW9ja2luZyBmb3IgRXJyb3JCb3VuZGFyeSB0ZXN0aW5nLlxuICovXG5cbi8vIE5vIHR5cGVzIGFyZSBjdXJyZW50bHkgbmVlZGVkIHNpbmNlIGNyZWF0ZU1vY2tSZXNldEZ1bmN0aW9uIHVzZXMgamVzdC5Nb2NrZWRGdW5jdGlvbiBkaXJlY3RseVxuLy8gVGhpcyBmaWxlIGlzIGtlcHQgZm9yIGZ1dHVyZSBleHBhbnNpb24gaWYgYWRkaXRpb25hbCBlcnJvciBtb2NrIHR5cGVzIGFyZSBuZWVkZWRcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0E7QUFDQTtBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO0lBQUFDLEtBQUE7SUFBQUMsU0FBQTtJQUFBQyxDQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBIiwiaWdub3JlTGlzdCI6W119