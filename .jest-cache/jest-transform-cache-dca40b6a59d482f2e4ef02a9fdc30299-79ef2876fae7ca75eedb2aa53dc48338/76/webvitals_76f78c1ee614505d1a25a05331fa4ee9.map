{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/web-vitals/web-vitals.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/web-vitals/web-vitals.ts"],"sourcesContent":["import { onCLS, onFCP, onINP, onLCP, onTTFB } from 'web-vitals';\nimport type { WebVitalsConfig } from '../../types/performance.types';\n\n/**\n * Default Web Vitals configuration\n */\nconst defaultConfig: WebVitalsConfig = {\n  debug: process.env.NODE_ENV === 'development',\n  reportToSentry: true,\n};\n\n/**\n * Report Web Vitals to analytics\n */\nfunction reportToAnalytics(\n  metric: { name: string; value: number; delta: number; rating: string },\n  config: WebVitalsConfig\n) {\n  // Report to custom analytics if provided\n  if (config.analytics) {\n    config.analytics(metric);\n  }\n\n  // Report to Sentry if enabled\n  if (config.reportToSentry) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n      const { captureException } = require('@sentry/nextjs');\n      if (metric.rating === 'poor') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        captureException(new Error(`Poor Web Vital: ${metric.name}`), {\n          tags: {\n            metric: metric.name,\n            rating: metric.rating,\n          },\n          extra: {\n            value: metric.value,\n            delta: metric.delta,\n          },\n        });\n      }\n    } catch (error) {\n      // Sentry not available\n    }\n  }\n\n  // Debug logging\n  if (config.debug) {\n    // eslint-disable-next-line no-console\n    console.log('Web Vital:', {\n      name: metric.name,\n      value: metric.value,\n      rating: metric.rating,\n      delta: metric.delta,\n    });\n  }\n}\n\n/**\n * Initialize Web Vitals monitoring\n */\nexport function initWebVitals(config: WebVitalsConfig = {}) {\n  const finalConfig = { ...defaultConfig, ...config };\n\n  onCLS((metric) => reportToAnalytics(metric, finalConfig));\n  onINP((metric) => reportToAnalytics(metric, finalConfig));\n  onLCP((metric) => reportToAnalytics(metric, finalConfig));\n  onFCP((metric) => reportToAnalytics(metric, finalConfig));\n  onTTFB((metric) => reportToAnalytics(metric, finalConfig));\n}\n\n/**\n * Performance budgets for Web Vitals\n */\nexport const PERFORMANCE_BUDGETS = {\n  // Core Web Vitals thresholds\n  LCP: 2500, // Largest Contentful Paint (ms)\n  INP: 200, // Interaction to Next Paint (ms)\n  CLS: 0.1, // Cumulative Layout Shift\n\n  // Additional metrics\n  FCP: 1800, // First Contentful Paint (ms)\n  TTFB: 800, // Time to First Byte (ms)\n};\n\n/**\n * Check if metric meets performance budget\n */\nexport function checkPerformanceBudget(metric: { name: string; value: number }): boolean {\n  const budget = PERFORMANCE_BUDGETS[metric.name as keyof typeof PERFORMANCE_BUDGETS];\n  if (!budget) return true;\n\n  return metric.value <= budget;\n}\n\n/**\n * Get performance rating based on thresholds\n */\nexport function getPerformanceRating(metric: {\n  name: string;\n  value: number;\n}): 'good' | 'needs-improvement' | 'poor' {\n  const budget = PERFORMANCE_BUDGETS[metric.name as keyof typeof PERFORMANCE_BUDGETS];\n  if (!budget) return 'good';\n\n  if (metric.value <= budget * 0.75) return 'good';\n  if (metric.value <= budget) return 'needs-improvement';\n  return 'poor';\n}\n"],"version":3}