{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/lib/errorBoundary.mock.ts","mappings":";AAAA;;;;;;;;;GASG;;;AAMH,+EAA+E;AAC/E,0BAA0B;AAC1B,+EAA+E;AAE/E;;;;;;;;;GASG;AACI,IAAM,uBAAuB,GAAG;IACrC,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC;AACnB,CAAC,CAAC;AAFW,QAAA,uBAAuB,2BAElC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/errors/lib/errorBoundary.mock.ts"],"sourcesContent":["/**\n * ErrorBoundary.mock.ts\n *\n * Single Responsibility: Provides factory function for creating mock reset functions\n * specifically for ErrorBoundary testing.\n *\n * Usage:\n * - Use createMockResetFunction to generate mock reset functions for testing error boundary recovery\n * - This is the only mock currently used in the ErrorBoundary test suite\n */\n\n// External dependencies\n// Reset handler function type\ntype ResetHandlerFunction = () => void;\n\n// ============================================================================\n// MOCK FUNCTION FACTORIES\n// ============================================================================\n\n/**\n * Creates a mock reset function with default implementation\n *\n * @usage\n * Use this when testing reset functionality, recovery flows,\n * or when you need to verify that reset functions are called correctly.\n *\n * PREFER real reset functions when testing integration scenarios.\n * Use this mock when you need to control the reset behavior or verify calls.\n */\nexport const createMockResetFunction = (): jest.MockedFunction<ResetHandlerFunction> => {\n  return jest.fn();\n};\n"],"version":3}