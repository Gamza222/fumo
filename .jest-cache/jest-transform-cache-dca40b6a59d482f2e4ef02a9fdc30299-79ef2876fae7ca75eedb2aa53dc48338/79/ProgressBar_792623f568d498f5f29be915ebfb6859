f572d090370dc540ab6f28200e191ce3
"use strict";

/* istanbul ignore next */
function cov_1tbofj3qpt() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx";
  var hash = "de6401fae978a8516f70e398e394b60d2dd65793";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "4": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "6": {
        start: {
          line: 15,
          column: 32
        },
        end: {
          line: 15,
          column: 85
        }
      },
      "7": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "8": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "11": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "12": {
        start: {
          line: 20,
          column: 40
        },
        end: {
          line: 20,
          column: 60
        }
      },
      "13": {
        start: {
          line: 20,
          column: 79
        },
        end: {
          line: 20,
          column: 104
        }
      },
      "14": {
        start: {
          line: 20,
          column: 118
        },
        end: {
          line: 20,
          column: 133
        }
      },
      "15": {
        start: {
          line: 20,
          column: 140
        },
        end: {
          line: 20,
          column: 153
        }
      },
      "16": {
        start: {
          line: 20,
          column: 165
        },
        end: {
          line: 20,
          column: 188
        }
      },
      "17": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "18": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "19": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 661
        }
      },
      "20": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 19,
            column: 41
          }
        },
        loc: {
          start: {
            line: 19,
            column: 57
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 79
          },
          end: {
            line: 20,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 95
          },
          end: {
            line: 20,
            column: 99
          }
        }, {
          start: {
            line: 20,
            column: 102
          },
          end: {
            line: 20,
            column: 104
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 165
          },
          end: {
            line: 20,
            column: 188
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 181
          },
          end: {
            line: 20,
            column: 183
          }
        }, {
          start: {
            line: 20,
            column: 186
          },
          end: {
            line: 20,
            column: 188
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 85
          },
          end: {
            line: 23,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 85
          },
          end: {
            line: 23,
            column: 130
          }
        }, {
          start: {
            line: 23,
            column: 134
          },
          end: {
            line: 23,
            column: 136
          }
        }],
        line: 23
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 389
          },
          end: {
            line: 23,
            column: 530
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 389
          },
          end: {
            line: 23,
            column: 403
          }
        }, {
          start: {
            line: 23,
            column: 407
          },
          end: {
            line: 23,
            column: 530
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 532
          },
          end: {
            line: 23,
            column: 655
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 532
          },
          end: {
            line: 23,
            column: 539
          }
        }, {
          start: {
            line: 23,
            column: 543
          },
          end: {
            line: 23,
            column: 655
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx",
      mappings: ";;;;;;;AAAA;;;;;GAKG;AAEH,+BAA6B;AAC7B,sFAA+C;AAE/C,kCAAiE;AAEjE,yCAAwC;AACxC,4DAA2D;AAS9C,QAAA,WAAW,GAAG,IAAA,YAAI,EAAmB,UAAC,KAAK;IAC9C,IAAA,QAAQ,GAAqD,KAAK,SAA1D,EAAE,KAAmD,KAAK,eAAnC,EAArB,cAAc,mBAAG,IAAI,KAAA,EAAE,SAAS,GAAmB,KAAK,UAAxB,EAAE,KAAiB,KAAK,QAAV,EAAZ,OAAO,mBAAG,EAAE,KAAA,CAAW;IAC3E,IAAM,gBAAgB,GAAG,IAAA,yBAAmB,EAAC,QAAQ,CAAC,CAAC;IACvD,IAAM,eAAe,GAAG,IAAA,oBAAc,EAAC,QAAQ,CAAC,CAAC;IACjD,OAAO,CACL,iCAAK,SAAS,EAAE,IAAA,uBAAU,EAAC,iCAAM,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,aACnE,gCAAK,SAAS,EAAE,iCAAM,CAAC,SAAS,YAC9B,gCAAK,SAAS,EAAE,iCAAM,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAI,GAC9D,EACL,cAAc,IAAI,uBAAC,WAAI,IAAC,SAAS,EAAE,iCAAM,CAAC,UAAU,YAAG,eAAe,GAAQ,EAC9E,OAAO,IAAI,uBAAC,WAAI,IAAC,SAAS,EAAE,iCAAM,CAAC,OAAO,YAAG,OAAO,GAAQ,IACzD,CACP,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,mBAAW,CAAC,WAAW,GAAG,aAAa,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.tsx"],
      sourcesContent: ["/**\n * ProgressBar Component\n *\n * Reusable progress bar component with smooth animations.\n * Can be moved to shared/ui later if needed elsewhere.\n */\n\nimport { memo } from 'react';\nimport styles from './ProgressBar.module.scss';\n\nimport { formatProgress, getProgressBarWidth } from '../lib/lib';\n\nimport { Text } from '@/shared/ui/Text';\nimport { classNames } from '@/shared/lib/utils/classNames';\n\nexport interface ProgressBarProps {\n  progress: number;\n  showPercentage?: boolean;\n  className?: string;\n  message?: string;\n}\n\nexport const ProgressBar = memo<ProgressBarProps>((props) => {\n  const { progress, showPercentage = true, className, message = '' } = props;\n  const progressBarWidth = getProgressBarWidth(progress);\n  const displayProgress = formatProgress(progress);\n  return (\n    <div className={classNames(styles.progressBar || '', {}, [className])}>\n      <div className={styles.container}>\n        <div className={styles.bar} style={{ width: progressBarWidth }} />\n      </div>\n      {showPercentage && <Text className={styles.percentage}>{displayProgress}</Text>}\n      {message && <Text className={styles.message}>{message}</Text>}\n    </div>\n  );\n});\n\nProgressBar.displayName = 'ProgressBar';\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de6401fae978a8516f70e398e394b60d2dd65793"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tbofj3qpt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tbofj3qpt();
var __importDefault =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[0]++,
/* istanbul ignore next */
(cov_1tbofj3qpt().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1tbofj3qpt().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1tbofj3qpt().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1tbofj3qpt().f[0]++;
  cov_1tbofj3qpt().s[1]++;
  return /* istanbul ignore next */(cov_1tbofj3qpt().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1tbofj3qpt().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1tbofj3qpt().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1tbofj3qpt().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1tbofj3qpt().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1tbofj3qpt().s[3]++;
exports.ProgressBar = void 0;
var jsx_runtime_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[4]++, require("react/jsx-runtime"));
/**
 * ProgressBar Component
 *
 * Reusable progress bar component with smooth animations.
 * Can be moved to shared/ui later if needed elsewhere.
 */
var react_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[5]++, require("react"));
var ProgressBar_module_scss_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[6]++, __importDefault(require("./ProgressBar.module.scss")));
var lib_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[7]++, require("../lib/lib"));
var Text_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[8]++, require("@/shared/ui/Text"));
var classNames_1 =
/* istanbul ignore next */
(cov_1tbofj3qpt().s[9]++, require("@/shared/lib/utils/classNames"));
/* istanbul ignore next */
cov_1tbofj3qpt().s[10]++;
exports.ProgressBar = (0, react_1.memo)(function (props) {
  /* istanbul ignore next */
  cov_1tbofj3qpt().f[1]++;
  var progress =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[11]++, props.progress),
    _a =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[12]++, props.showPercentage),
    showPercentage =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[13]++, _a === void 0 ?
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[3][0]++, true) :
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[3][1]++, _a)),
    className =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[14]++, props.className),
    _b =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[15]++, props.message),
    message =
    /* istanbul ignore next */
    (cov_1tbofj3qpt().s[16]++, _b === void 0 ?
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[4][0]++, '') :
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[4][1]++, _b));
  var progressBarWidth =
  /* istanbul ignore next */
  (cov_1tbofj3qpt().s[17]++, (0, lib_1.getProgressBarWidth)(progress));
  var displayProgress =
  /* istanbul ignore next */
  (cov_1tbofj3qpt().s[18]++, (0, lib_1.formatProgress)(progress));
  /* istanbul ignore next */
  cov_1tbofj3qpt().s[19]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: (0, classNames_1.classNames)(
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[5][0]++, ProgressBar_module_scss_1.default.progressBar) ||
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[5][1]++, ''), {}, [className]),
    children: [(0, jsx_runtime_1.jsx)("div", {
      className: ProgressBar_module_scss_1.default.container,
      children: (0, jsx_runtime_1.jsx)("div", {
        className: ProgressBar_module_scss_1.default.bar,
        style: {
          width: progressBarWidth
        }
      })
    }),
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[6][0]++, showPercentage) &&
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[6][1]++, (0, jsx_runtime_1.jsx)(Text_1.Text, {
      className: ProgressBar_module_scss_1.default.percentage,
      children: displayProgress
    })),
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[7][0]++, message) &&
    /* istanbul ignore next */
    (cov_1tbofj3qpt().b[7][1]++, (0, jsx_runtime_1.jsx)(Text_1.Text, {
      className: ProgressBar_module_scss_1.default.message,
      children: message
    }))]
  });
});
/* istanbul ignore next */
cov_1tbofj3qpt().s[20]++;
exports.ProgressBar.displayName = 'ProgressBar';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXRib2ZqM3FwdCIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJyZXF1aXJlIiwiUHJvZ3Jlc3NCYXJfbW9kdWxlX3Njc3NfMSIsIl9faW1wb3J0RGVmYXVsdCIsImxpYl8xIiwiVGV4dF8xIiwiY2xhc3NOYW1lc18xIiwiZXhwb3J0cyIsIlByb2dyZXNzQmFyIiwibWVtbyIsInByb3BzIiwiZiIsInByb2dyZXNzIiwiX2EiLCJzaG93UGVyY2VudGFnZSIsImIiLCJjbGFzc05hbWUiLCJfYiIsIm1lc3NhZ2UiLCJwcm9ncmVzc0JhcldpZHRoIiwiZ2V0UHJvZ3Jlc3NCYXJXaWR0aCIsImRpc3BsYXlQcm9ncmVzcyIsImZvcm1hdFByb2dyZXNzIiwianN4X3J1bnRpbWVfMSIsImpzeHMiLCJjbGFzc05hbWVzIiwiZGVmYXVsdCIsInByb2dyZXNzQmFyIiwiY2hpbGRyZW4iLCJqc3giLCJjb250YWluZXIiLCJiYXIiLCJzdHlsZSIsIndpZHRoIiwiVGV4dCIsInBlcmNlbnRhZ2UiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3dpZGdldHMvUHJvZ3Jlc3NCYXIvdWkvUHJvZ3Jlc3NCYXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUHJvZ3Jlc3NCYXIgQ29tcG9uZW50XG4gKlxuICogUmV1c2FibGUgcHJvZ3Jlc3MgYmFyIGNvbXBvbmVudCB3aXRoIHNtb290aCBhbmltYXRpb25zLlxuICogQ2FuIGJlIG1vdmVkIHRvIHNoYXJlZC91aSBsYXRlciBpZiBuZWVkZWQgZWxzZXdoZXJlLlxuICovXG5cbmltcG9ydCB7IG1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vUHJvZ3Jlc3NCYXIubW9kdWxlLnNjc3MnO1xuXG5pbXBvcnQgeyBmb3JtYXRQcm9ncmVzcywgZ2V0UHJvZ3Jlc3NCYXJXaWR0aCB9IGZyb20gJy4uL2xpYi9saWInO1xuXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQC9zaGFyZWQvdWkvVGV4dCc7XG5pbXBvcnQgeyBjbGFzc05hbWVzIH0gZnJvbSAnQC9zaGFyZWQvbGliL3V0aWxzL2NsYXNzTmFtZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFByb2dyZXNzQmFyUHJvcHMge1xuICBwcm9ncmVzczogbnVtYmVyO1xuICBzaG93UGVyY2VudGFnZT86IGJvb2xlYW47XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgbWVzc2FnZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFByb2dyZXNzQmFyID0gbWVtbzxQcm9ncmVzc0JhclByb3BzPigocHJvcHMpID0+IHtcbiAgY29uc3QgeyBwcm9ncmVzcywgc2hvd1BlcmNlbnRhZ2UgPSB0cnVlLCBjbGFzc05hbWUsIG1lc3NhZ2UgPSAnJyB9ID0gcHJvcHM7XG4gIGNvbnN0IHByb2dyZXNzQmFyV2lkdGggPSBnZXRQcm9ncmVzc0JhcldpZHRoKHByb2dyZXNzKTtcbiAgY29uc3QgZGlzcGxheVByb2dyZXNzID0gZm9ybWF0UHJvZ3Jlc3MocHJvZ3Jlc3MpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5wcm9ncmVzc0JhciB8fCAnJywge30sIFtjbGFzc05hbWVdKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmFyfSBzdHlsZT17eyB3aWR0aDogcHJvZ3Jlc3NCYXJXaWR0aCB9fSAvPlxuICAgICAgPC9kaXY+XG4gICAgICB7c2hvd1BlcmNlbnRhZ2UgJiYgPFRleHQgY2xhc3NOYW1lPXtzdHlsZXMucGVyY2VudGFnZX0+e2Rpc3BsYXlQcm9ncmVzc308L1RleHQ+fVxuICAgICAge21lc3NhZ2UgJiYgPFRleHQgY2xhc3NOYW1lPXtzdHlsZXMubWVzc2FnZX0+e21lc3NhZ2V9PC9UZXh0Pn1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuXG5Qcm9ncmVzc0Jhci5kaXNwbGF5TmFtZSA9ICdQcm9ncmVzc0Jhcic7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFVQTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVkE7Ozs7OztBQU9BLElBQUFFLE9BQUE7QUFBQTtBQUFBLENBQUFGLGNBQUEsR0FBQUcsQ0FBQSxPQUFBQyxPQUFBO0FBQ0EsSUFBQUMseUJBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUcsQ0FB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