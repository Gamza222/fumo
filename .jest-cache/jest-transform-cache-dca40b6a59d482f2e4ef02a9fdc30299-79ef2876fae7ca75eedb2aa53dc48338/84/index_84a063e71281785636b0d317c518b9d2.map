{"file":"/Users/gamzaramazanov/Desktop/fumo/config/env/index.ts","mappings":";AAAA;;;;;;;;;GASG;;;AAEH,+EAA+E;AAC/E,oCAAoC;AACpC,+EAA+E;AAE/E,wCAAwC;AACxC,mCAA0D;AAAjD,mGAAA,SAAS,OAAA;AAAE,6GAAA,mBAAmB,OAAA;AACvC,2CAMsB;AALpB,2GAAA,aAAa,OAAA;AACb,0GAAA,YAAY,OAAA;AACZ,oGAAA,MAAM,OAAA;AACN,uGAAA,SAAS,OAAA;AACT,mHAAA,qBAAqB,OAAA;AAGvB,8BAA8B;AACvB,IAAM,cAAc,GAAG,UAAC,GAAW,EAAE,YAAqB;IAC/D,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,KAAK,SAAS,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;QACtD,MAAM,IAAI,KAAK,CAAC,+BAAwB,GAAG,6BAA0B,CAAC,CAAC;IACzE,CAAC;IACD,OAAO,KAAK,IAAI,YAAY,IAAI,EAAE,CAAC;AACrC,CAAC,CAAC;AANW,QAAA,cAAc,kBAMzB;AAOF,iCAAsC;AAA7B,oGAAA,WAAW,OAAA;AAEpB,+EAA+E;AAC/E,wCAAwC;AACxC,+EAA+E;AAE/E,uBAAuB;AACvB,2CAAiF;AAAxE,0HAAA,4BAA4B,OAAA;AAAE,iHAAA,mBAAmB,OAAA;AAE1D,iCAAiC;AACjC,yCAAmG;AAA1F,yGAAA,YAAY,OAAA;AAAE,0GAAA,aAAa,OAAA;AAAE,8GAAA,iBAAiB,OAAA;AAAE,iHAAA,oBAAoB,OAAA;AAE7E,+EAA+E;AAC/E,+CAA+C;AAC/C,+EAA+E;AAE/E,mCAAgD;AAAvC,iGAAA,SAAS,OAAW","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/config/env/index.ts"],"sourcesContent":["/**\n * Environment Configuration - Main Entry Point\n *\n * This is the SINGLE entry point for all environment configuration needs.\n * Follows FSD principles by providing a clean, organized interface.\n *\n * Usage:\n *   import { envConfig, isDevelopment, getEnvVariable } from '@/config/env';\n *   import { Environment, EnvConfig } from '@/config/env';\n */\n\n// ============================================================================\n// CORE EXPORTS - Most commonly used\n// ============================================================================\n\n// Environment configuration (most used)\nexport { envConfig, validateEnvironment } from './config';\nexport {\n  isDevelopment,\n  isProduction,\n  isTest,\n  isPreview,\n  getCurrentEnvironment,\n} from './validation';\n\n// Environment variable access\nexport const getEnvVariable = (key: string, defaultValue?: string): string => {\n  const value = process.env[key];\n  if (value === undefined && defaultValue === undefined) {\n    throw new Error(`Environment variable ${key} is required but not set`);\n  }\n  return value || defaultValue || '';\n};\n\n// ============================================================================\n// TYPE EXPORTS - For TypeScript usage\n// ============================================================================\n\nexport type { CompleteEnvConfig, EnvConfig, EnvValidationResult } from './types';\nexport { Environment } from './types';\n\n// ============================================================================\n// ADVANCED EXPORTS - For advanced usage\n// ============================================================================\n\n// Validation functions\nexport { validateEnvironmentVariables, validateEnvVariable } from './validation';\n\n// Constants (for advanced usage)\nexport { ENV_DEFAULTS, ENV_OVERRIDES, REQUIRED_ENV_VARS, ENV_VALIDATION_RULES } from './constants';\n\n// ============================================================================\n// DEFAULT EXPORT - Main configuration instance\n// ============================================================================\n\nexport { envConfig as default } from './config';\n"],"version":3}