{"version":3,"names":["cov_2frrhbj5pu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/types/types.ts"],"sourcesContent":["/**\n * External Library Mock Types\n *\n * Types for external library mocks used in testing.\n * These types ensure consistency across external mock implementations.\n */\n\n// ============================================================================\n// SENTRY MOCK TYPES\n// ============================================================================\n\n/**\n * Mock transaction object returned by Sentry.startTransaction\n */\nexport interface MockSentryTransaction {\n  setTag: jest.Mock;\n  setData: jest.Mock;\n  finish: jest.Mock;\n}\n\n/**\n * Sentry mock interface matching the actual Sentry API\n */\nexport interface MockSentryInterface {\n  // Error capturing\n  captureException: jest.Mock;\n  captureMessage: jest.Mock;\n\n  // Context management\n  setUser: jest.Mock;\n  setTag: jest.Mock;\n  setExtra: jest.Mock;\n  addBreadcrumb: jest.Mock;\n  configureScope: jest.Mock;\n\n  // Scope management\n  withScope: jest.Mock;\n  getCurrentHub: jest.Mock;\n\n  // Transaction/performance monitoring\n  startTransaction: jest.Mock;\n\n  // Integration helpers\n  flush: jest.Mock;\n  close: jest.Mock;\n}\n\n/**\n * Sentry test utilities interface\n */\nexport interface SentryTestUtilsInterface {\n  clearMocks: () => void;\n  resetMocks: () => void;\n  expectExceptionCaptured: (error?: Error | string) => void;\n  expectMessageCaptured: (message: string) => void;\n  expectUserSet: (userId?: string) => void;\n  expectTagSet: (key: string, value?: string) => void;\n  getCapturedExceptions: () => jest.Mock['mock']['calls'];\n  getCapturedMessages: () => jest.Mock['mock']['calls'];\n}\n\n// ============================================================================\n// FUTURE EXTERNAL MOCK TYPES\n// ============================================================================\n\n// NOTE: Add other external library mock types here as needed:\n// - Google Analytics types\n// - Stripe SDK types\n// - Auth0 types\n// - AWS SDK types\n// etc.\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAtB,IAAA;EAAA;EAAA,IAAAuB,QAAA,GAAAtB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAoB,QAAA,CAAAxB,IAAA,KAAAwB,QAAA,CAAAxB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAuB,QAAA,CAAAxB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAoB,cAAA,GAAAD,QAAA,CAAAxB,IAAA;EAAA;IAqEA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAA0B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA1B,cAAA;AAAAA,cAAA,GAAAc,CAAA;;;;AARA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}