{"version":3,"names":["cov_cxwk8tftz","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","mockInitWebVitals","jest","fn","mockImplementation","_config","mockPerformanceBudgets","CLS","FID","FCP","LCP","TTFB","INP","mockCheckPerformanceBudget","metric","budget","value","mockGetPerformanceRating","createMockWebVitals","customBehavior","initWebVitals","checkPerformanceBudget","getPerformanceRating","PERFORMANCE_BUDGETS","mockWebVitalsWithError","error"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/performance/webVitals.mock.ts"],"sourcesContent":["/**\n * Web Vitals Mock for Testing\n *\n * Provides mock implementations of web vitals functions for testing\n * performance monitoring functionality.\n */\n\nimport type { WebVitalsConfig } from '@/infrastructure/performance/types/performance.types';\n\n// Mock web vitals functions\nexport const mockInitWebVitals = jest.fn().mockImplementation((_config: WebVitalsConfig = {}) => {\n  // Mock implementation that does nothing\n  return;\n});\n\n// Mock performance budgets\nexport const mockPerformanceBudgets = {\n  CLS: 0.1,\n  FID: 100,\n  FCP: 1800,\n  LCP: 2500,\n  TTFB: 800,\n  INP: 200,\n};\n\n// Mock performance budget check\nexport const mockCheckPerformanceBudget = jest\n  .fn()\n  .mockImplementation((metric: { name: string; value: number }) => {\n    const budget = mockPerformanceBudgets[metric.name as keyof typeof mockPerformanceBudgets];\n    return budget ? metric.value <= budget : true;\n  });\n\n// Mock performance rating\nexport const mockGetPerformanceRating = jest\n  .fn()\n  .mockImplementation((metric: { name: string; value: number }) => {\n    const budget = mockPerformanceBudgets[metric.name as keyof typeof mockPerformanceBudgets];\n    if (!budget) return 'good';\n\n    if (metric.value <= budget * 0.5) return 'good';\n    if (metric.value <= budget) return 'needs-improvement';\n    return 'poor';\n  });\n\n// Create mock web vitals with custom behavior\nexport const createMockWebVitals = (\n  customBehavior: {\n    initWebVitals?: jest.Mock;\n    checkPerformanceBudget?: jest.Mock;\n    getPerformanceRating?: jest.Mock;\n  } = {}\n) => {\n  return {\n    initWebVitals: customBehavior.initWebVitals || mockInitWebVitals,\n    checkPerformanceBudget: customBehavior.checkPerformanceBudget || mockCheckPerformanceBudget,\n    getPerformanceRating: customBehavior.getPerformanceRating || mockGetPerformanceRating,\n    PERFORMANCE_BUDGETS: mockPerformanceBudgets,\n  };\n};\n\n// Mock web vitals with error\nexport const mockWebVitalsWithError = (error: Error) => {\n  return {\n    initWebVitals: jest.fn().mockImplementation(() => {\n      throw error;\n    }),\n    checkPerformanceBudget: mockCheckPerformanceBudget,\n    getPerformanceRating: mockGetPerformanceRating,\n    PERFORMANCE_BUDGETS: mockPerformanceBudgets,\n  };\n};\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}