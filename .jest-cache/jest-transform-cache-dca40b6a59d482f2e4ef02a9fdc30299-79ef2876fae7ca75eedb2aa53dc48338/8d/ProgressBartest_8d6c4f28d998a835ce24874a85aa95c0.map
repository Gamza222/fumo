{"file":"/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx"],"sourcesContent":["/**\n * ProgressBar Component Tests\n *\n * Comprehensive tests for the ProgressBar component.\n */\n\nimport React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport { ProgressBar } from './ProgressBar';\n\n// ============================================================================\n// TEST SETUP\n// ============================================================================\n\n// Mock the shared Text component\njest.mock('@/shared/ui/Text', () => ({\n  Text: ({ children, className }: { children: React.ReactNode; className?: string }) => (\n    <span className={className} data-testid=\"text-component\">\n      {children}\n    </span>\n  ),\n}));\n\n// Mock the classNames utility\njest.mock('@/shared/lib/utils/classNames', () => ({\n  classNames: (base: string, mods: object, classes: string[]) => {\n    return [base, ...classes].filter(Boolean).join(' ');\n  },\n}));\n\n// ============================================================================\n// BASIC RENDERING TESTS\n// ============================================================================\n\ndescribe('ProgressBar', () => {\n  describe('Basic Rendering', () => {\n    it('should render with default props', () => {\n      render(<ProgressBar progress={50} />);\n      \n      expect(screen.getByRole('progressbar')).toBeInTheDocument();\n      expect(screen.getByText('50%')).toBeInTheDocument();\n    });\n\n    it('should render with custom className', () => {\n      render(<ProgressBar progress={25} className=\"custom-class\" />);\n      \n      const progressBar = screen.getByRole('progressbar');\n      expect(progressBar).toHaveClass('custom-class');\n    });\n\n    it('should render progress bar with correct width', () => {\n      render(<ProgressBar progress={75} />);\n      \n      const progressBar = screen.getByRole('progressbar');\n      const barElement = progressBar.querySelector('.bar');\n      expect(barElement).toHaveStyle('width: 75%');\n    });\n  });\n\n  // ============================================================================\n  // PROGRESS DISPLAY TESTS\n  // ============================================================================\n\n  describe('Progress Display', () => {\n    it('should show percentage when showPercentage is true', () => {\n      render(<ProgressBar progress={33} showPercentage={true} />);\n      \n      expect(screen.getByText('33%')).toBeInTheDocument();\n    });\n\n    it('should hide percentage when showPercentage is false', () => {\n      render(<ProgressBar progress={67} showPercentage={false} />);\n      \n      expect(screen.queryByText('67%')).not.toBeInTheDocument();\n    });\n\n    it('should round progress to nearest integer', () => {\n      render(<ProgressBar progress={33.7} />);\n      \n      expect(screen.getByText('34%')).toBeInTheDocument();\n    });\n\n    it('should handle edge case of 0 progress', () => {\n      render(<ProgressBar progress={0} />);\n      \n      expect(screen.getByText('0%')).toBeInTheDocument();\n      const barElement = screen.getByRole('progressbar').querySelector('.bar');\n      expect(barElement).toHaveStyle('width: 0%');\n    });\n\n    it('should handle edge case of 100 progress', () => {\n      render(<ProgressBar progress={100} />);\n      \n      expect(screen.getByText('100%')).toBeInTheDocument();\n      const barElement = screen.getByRole('progressbar').querySelector('.bar');\n      expect(barElement).toHaveStyle('width: 100%');\n    });\n  });\n\n  // ============================================================================\n  // MESSAGE DISPLAY TESTS\n  // ============================================================================\n\n  describe('Message Display', () => {\n    it('should show message when provided', () => {\n      render(<ProgressBar progress={50} message=\"Loading files...\" />);\n      \n      expect(screen.getByText('Loading files...')).toBeInTheDocument();\n    });\n\n    it('should not show message when not provided', () => {\n      render(<ProgressBar progress={50} />);\n      \n      expect(screen.queryByTestId('text-component')).toHaveTextContent('50%');\n      expect(screen.queryByText('Loading files...')).not.toBeInTheDocument();\n    });\n\n    it('should show both percentage and message', () => {\n      render(\n        <ProgressBar \n          progress={75} \n          message=\"Almost done...\" \n          showPercentage={true}\n        />\n      );\n      \n      expect(screen.getByText('75%')).toBeInTheDocument();\n      expect(screen.getByText('Almost done...')).toBeInTheDocument();\n    });\n  });\n\n  // ============================================================================\n  // PROGRESS VALIDATION TESTS\n  // ============================================================================\n\n  describe('Progress Validation', () => {\n    it('should clamp progress above 100 to 100', () => {\n      render(<ProgressBar progress={150} />);\n      \n      expect(screen.getByText('100%')).toBeInTheDocument();\n      const barElement = screen.getByRole('progressbar').querySelector('.bar');\n      expect(barElement).toHaveStyle('width: 100%');\n    });\n\n    it('should clamp progress below 0 to 0', () => {\n      render(<ProgressBar progress={-25} />);\n      \n      expect(screen.getByText('0%')).toBeInTheDocument();\n      const barElement = screen.getByRole('progressbar').querySelector('.bar');\n      expect(barElement).toHaveStyle('width: 0%');\n    });\n  });\n\n  // ============================================================================\n  // ACCESSIBILITY TESTS\n  // ============================================================================\n\n  describe('Accessibility', () => {\n    it('should have correct ARIA attributes', () => {\n      render(<ProgressBar progress={60} />);\n      \n      const progressBar = screen.getByRole('progressbar');\n      expect(progressBar).toHaveAttribute('aria-valuenow', '60');\n      expect(progressBar).toHaveAttribute('aria-valuemin', '0');\n      expect(progressBar).toHaveAttribute('aria-valuemax', '100');\n    });\n\n    it('should have correct ARIA attributes with custom ariaLabel', () => {\n      render(<ProgressBar progress={40} ariaLabel=\"File upload progress\" />);\n      \n      const progressBar = screen.getByRole('progressbar');\n      expect(progressBar).toHaveAttribute('aria-label', 'File upload progress');\n    });\n  });\n\n  // ============================================================================\n  // COMPONENT STRUCTURE TESTS\n  // ============================================================================\n\n  describe('Component Structure', () => {\n    it('should render with correct DOM structure', () => {\n      render(<ProgressBar progress={50} message=\"Test message\" />);\n      \n      const progressBar = screen.getByRole('progressbar');\n      expect(progressBar).toBeInTheDocument();\n      \n      // Check container exists\n      const container = progressBar.querySelector('.container');\n      expect(container).toBeInTheDocument();\n      \n      // Check bar exists\n      const bar = progressBar.querySelector('.bar');\n      expect(bar).toBeInTheDocument();\n      \n      // Check percentage text exists\n      expect(screen.getByText('50%')).toBeInTheDocument();\n      \n      // Check message text exists\n      expect(screen.getByText('Test message')).toBeInTheDocument();\n    });\n\n    it('should use Text component for percentage and message', () => {\n      render(<ProgressBar progress={25} message=\"Test message\" />);\n      \n      const textComponents = screen.getAllByTestId('text-component');\n      expect(textComponents).toHaveLength(2); // percentage + message\n      \n      expect(textComponents[0]).toHaveTextContent('25%');\n      expect(textComponents[1]).toHaveTextContent('Test message');\n    });\n  });\n\n  // ============================================================================\n  // PROPS COMBINATIONS TESTS\n  // ============================================================================\n\n  describe('Props Combinations', () => {\n    it('should work with all props provided', () => {\n      render(\n        <ProgressBar \n          progress={85}\n          showPercentage={true}\n          message=\"Finalizing...\"\n          className=\"custom-progress\"\n          ariaLabel=\"Custom progress\"\n        />\n      );\n      \n      expect(screen.getByText('85%')).toBeInTheDocument();\n      expect(screen.getByText('Finalizing...')).toBeInTheDocument();\n      expect(screen.getByRole('progressbar')).toHaveClass('custom-progress');\n      expect(screen.getByRole('progressbar')).toHaveAttribute('aria-label', 'Custom progress');\n    });\n\n    it('should work with minimal props', () => {\n      render(<ProgressBar progress={0} />);\n      \n      expect(screen.getByRole('progressbar')).toBeInTheDocument();\n      expect(screen.getByText('0%')).toBeInTheDocument();\n    });\n  });\n});\n"],"version":3}