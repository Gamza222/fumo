5d7f6d4653126171c19083cb4929f4a3
"use strict";

/**
 * Error Boundary Test Utilities
 *
 * Provides utilities for testing error boundaries while suppressing expected console errors.
 */
/* istanbul ignore next */
function cov_2gqzc9c1k8() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/helpers/errorBoundaryTestUtils.ts";
  var hash = "368a0781f1df9192569f8d306c4214fac631ae2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/helpers/errorBoundaryTestUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 165
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "6": {
        start: {
          line: 18,
          column: 41
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "7": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "9": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 21
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "11": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "13": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "19": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 80
        }
      },
      "20": {
        start: {
          line: 53,
          column: 30
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "21": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 54,
          column: 74
        }
      },
      "22": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 49
        }
      },
      "23": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "24": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 26
        }
      },
      "27": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "28": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 58
        }
      },
      "29": {
        start: {
          line: 68,
          column: 17
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "30": {
        start: {
          line: 69,
          column: 13
        },
        end: {
          line: 69,
          column: 27
        }
      },
      "31": {
        start: {
          line: 69,
          column: 43
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "32": {
        start: {
          line: 69,
          column: 75
        },
        end: {
          line: 69,
          column: 90
        }
      },
      "33": {
        start: {
          line: 69,
          column: 107
        },
        end: {
          line: 69,
          column: 140
        }
      },
      "34": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 38
        }
      },
      "36": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "37": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "38": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "39": {
        start: {
          line: 80,
          column: 13
        },
        end: {
          line: 80,
          column: 28
        }
      },
      "40": {
        start: {
          line: 80,
          column: 45
        },
        end: {
          line: 80,
          column: 80
        }
      },
      "41": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "42": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 38
        }
      },
      "43": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 85
        }
      },
      "44": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 48
        }
      },
      "45": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "46": {
        start: {
          line: 91,
          column: 13
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "47": {
        start: {
          line: 91,
          column: 45
        },
        end: {
          line: 91,
          column: 80
        }
      },
      "48": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "49": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 56
          },
          end: {
            line: 7,
            column: 57
          }
        },
        loc: {
          start: {
            line: 7,
            column: 71
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 42
          }
        },
        loc: {
          start: {
            line: 18,
            column: 53
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 21
          }
        },
        loc: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 11
          },
          end: {
            line: 45,
            column: 12
          }
        },
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 53,
            column: 31
          }
        },
        loc: {
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 22
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 17
          },
          end: {
            line: 68,
            column: 18
          }
        },
        loc: {
          start: {
            line: 68,
            column: 31
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 26
          }
        },
        loc: {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 31
          }
        },
        loc: {
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 90,
            column: 26
          }
        },
        loc: {
          start: {
            line: 90,
            column: 39
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 23
          },
          end: {
            line: 7,
            column: 27
          }
        }, {
          start: {
            line: 7,
            column: 31
          },
          end: {
            line: 7,
            column: 51
          }
        }, {
          start: {
            line: 7,
            column: 56
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 8,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 8,
            column: 40
          }
        }, {
          start: {
            line: 8,
            column: 43
          },
          end: {
            line: 8,
            column: 61
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 15
          }
        }, {
          start: {
            line: 8,
            column: 19
          },
          end: {
            line: 8,
            column: 33
          }
        }],
        line: 8
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 39,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 39
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 28,
            column: 64
          }
        }, {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 82
          }
        }, {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 59
          }
        }, {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 53
          }
        }, {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 55
          }
        }, {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 65
          }
        }, {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 58
          }
        }, {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 56
          }
        }, {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 66
          }
        }, {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 60
          }
        }, {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 56
          }
        }, {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 55
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 43
          },
          end: {
            line: 69,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 59
          },
          end: {
            line: 69,
            column: 63
          }
        }, {
          start: {
            line: 69,
            column: 66
          },
          end: {
            line: 69,
            column: 68
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 107
          },
          end: {
            line: 69,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 123
          },
          end: {
            line: 69,
            column: 135
          }
        }, {
          start: {
            line: 69,
            column: 138
          },
          end: {
            line: 69,
            column: 140
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 80,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 61
          },
          end: {
            line: 80,
            column: 75
          }
        }, {
          start: {
            line: 80,
            column: 78
          },
          end: {
            line: 80,
            column: 80
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 61
          },
          end: {
            line: 91,
            column: 75
          }
        }, {
          start: {
            line: 91,
            column: 78
          },
          end: {
            line: 91,
            column: 80
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/helpers/errorBoundaryTestUtils.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/helpers/errorBoundaryTestUtils.ts"],
      sourcesContent: ["/**\n * Error Boundary Test Utilities\n *\n * Provides utilities for testing error boundaries while suppressing expected console errors.\n */\n\nimport { render, RenderOptions } from '@testing-library/react';\nimport React from 'react';\n\n/**\n * Suppresses console errors during error boundary tests\n * This is necessary because error boundaries are supposed to throw errors\n */\nexport const suppressErrorBoundaryConsoleErrors = () => {\n  const originalConsoleError = console.error;\n\n  console.error = (...args: unknown[]) => {\n    const message = args[0];\n\n    // Suppress expected error boundary errors\n    if (\n      typeof message === 'string' &&\n      (message.includes('The above error occurred in the') ||\n        message.includes('React will try to recreate this component tree') ||\n        message.includes('Error: Uncaught [Error:') ||\n        message.includes('Error: Test error') ||\n        message.includes('Error: Render error') ||\n        message.includes('Error: Network request failed') ||\n        message.includes('Error: Failed to fetch') ||\n        message.includes('Error: Loading chunk') ||\n        message.includes('Error: Regular component error') ||\n        message.includes('Error: Synchronous error') ||\n        message.includes('Error: Complex error') ||\n        message.includes('Error: Effect error'))\n    ) {\n      return;\n    }\n\n    // Call original console.error for other messages\n    originalConsoleError(...args);\n  };\n\n  return () => {\n    console.error = originalConsoleError;\n  };\n};\n\n/**\n * Renders a component with error boundary testing utilities\n */\nexport const renderWithErrorBoundary = (ui: React.ReactElement, options?: RenderOptions) => {\n  const restoreConsole = suppressErrorBoundaryConsoleErrors();\n\n  const result = render(ui, options);\n\n  // Restore console after test\n  const originalUnmount = result.unmount;\n  result.unmount = () => {\n    restoreConsole();\n    originalUnmount();\n  };\n\n  return result;\n};\n\n/**\n * Test component that throws errors for error boundary testing\n */\nexport const ThrowError: React.FC<{\n  error?: Error;\n  shouldThrow?: boolean;\n  errorMessage?: string;\n}> = ({ shouldThrow = true, errorMessage = 'Test error' }) => {\n  if (shouldThrow) {\n    throw new Error(errorMessage);\n  }\n  return React.createElement('div', null, 'No error');\n};\n\n/**\n * Test component that throws errors in useEffect\n */\nexport const ThrowErrorInEffect: React.FC<{ errorMessage?: string }> = ({\n  errorMessage = 'Effect error',\n}) => {\n  React.useEffect(() => {\n    throw new Error(errorMessage);\n  }, [errorMessage]);\n\n  return React.createElement('div', null, 'Component with effect error');\n};\n\n/**\n * Test component that throws errors in render\n */\nexport const ThrowErrorInRender: React.FC<{ errorMessage?: string }> = ({\n  errorMessage = 'Render error',\n}) => {\n  throw new Error(errorMessage);\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "368a0781f1df9192569f8d306c4214fac631ae2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gqzc9c1k8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gqzc9c1k8();
var __importDefault =
/* istanbul ignore next */
(cov_2gqzc9c1k8().s[0]++,
/* istanbul ignore next */
(cov_2gqzc9c1k8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2gqzc9c1k8().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2gqzc9c1k8().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[0]++;
  cov_2gqzc9c1k8().s[1]++;
  return /* istanbul ignore next */(cov_2gqzc9c1k8().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2gqzc9c1k8().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2gqzc9c1k8().s[3]++;
exports.ThrowErrorInRender = exports.ThrowErrorInEffect = exports.ThrowError = exports.renderWithErrorBoundary = exports.suppressErrorBoundaryConsoleErrors = void 0;
var react_1 =
/* istanbul ignore next */
(cov_2gqzc9c1k8().s[4]++, require("@testing-library/react"));
var react_2 =
/* istanbul ignore next */
(cov_2gqzc9c1k8().s[5]++, __importDefault(require("react")));
/**
 * Suppresses console errors during error boundary tests
 * This is necessary because error boundaries are supposed to throw errors
 */
/* istanbul ignore next */
cov_2gqzc9c1k8().s[6]++;
var suppressErrorBoundaryConsoleErrors = function () {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[1]++;
  var originalConsoleError =
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().s[7]++, console.error);
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[8]++;
  console.error = function () {
    /* istanbul ignore next */
    cov_2gqzc9c1k8().f[2]++;
    var args =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[9]++, []);
    /* istanbul ignore next */
    cov_2gqzc9c1k8().s[10]++;
    for (var _i =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[11]++, 0); _i < arguments.length; _i++) {
      /* istanbul ignore next */
      cov_2gqzc9c1k8().s[12]++;
      args[_i] = arguments[_i];
    }
    var message =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[13]++, args[0]);
    // Suppress expected error boundary errors
    /* istanbul ignore next */
    cov_2gqzc9c1k8().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][0]++, typeof message === 'string') && (
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][1]++, message.includes('The above error occurred in the')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][2]++, message.includes('React will try to recreate this component tree')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][3]++, message.includes('Error: Uncaught [Error:')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][4]++, message.includes('Error: Test error')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][5]++, message.includes('Error: Render error')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][6]++, message.includes('Error: Network request failed')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][7]++, message.includes('Error: Failed to fetch')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][8]++, message.includes('Error: Loading chunk')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][9]++, message.includes('Error: Regular component error')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][10]++, message.includes('Error: Synchronous error')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][11]++, message.includes('Error: Complex error')) ||
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[4][12]++, message.includes('Error: Effect error')))) {
      /* istanbul ignore next */
      cov_2gqzc9c1k8().b[3][0]++;
      cov_2gqzc9c1k8().s[15]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2gqzc9c1k8().b[3][1]++;
    }
    // Call original console.error for other messages
    cov_2gqzc9c1k8().s[16]++;
    originalConsoleError.apply(void 0, args);
  };
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[17]++;
  return function () {
    /* istanbul ignore next */
    cov_2gqzc9c1k8().f[3]++;
    cov_2gqzc9c1k8().s[18]++;
    console.error = originalConsoleError;
  };
};
/* istanbul ignore next */
cov_2gqzc9c1k8().s[19]++;
exports.suppressErrorBoundaryConsoleErrors = suppressErrorBoundaryConsoleErrors;
/**
 * Renders a component with error boundary testing utilities
 */
/* istanbul ignore next */
cov_2gqzc9c1k8().s[20]++;
var renderWithErrorBoundary = function (ui, options) {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[4]++;
  var restoreConsole =
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().s[21]++, (0, exports.suppressErrorBoundaryConsoleErrors)());
  var result =
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().s[22]++, (0, react_1.render)(ui, options));
  // Restore console after test
  var originalUnmount =
  /* istanbul ignore next */
  (cov_2gqzc9c1k8().s[23]++, result.unmount);
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[24]++;
  result.unmount = function () {
    /* istanbul ignore next */
    cov_2gqzc9c1k8().f[5]++;
    cov_2gqzc9c1k8().s[25]++;
    restoreConsole();
    /* istanbul ignore next */
    cov_2gqzc9c1k8().s[26]++;
    originalUnmount();
  };
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[27]++;
  return result;
};
/* istanbul ignore next */
cov_2gqzc9c1k8().s[28]++;
exports.renderWithErrorBoundary = renderWithErrorBoundary;
/**
 * Test component that throws errors for error boundary testing
 */
/* istanbul ignore next */
cov_2gqzc9c1k8().s[29]++;
var ThrowError = function (_a) {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[6]++;
  var _b =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[30]++, _a.shouldThrow),
    shouldThrow =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[31]++, _b === void 0 ?
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[5][0]++, true) :
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[5][1]++, _b)),
    _c =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[32]++, _a.errorMessage),
    errorMessage =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[33]++, _c === void 0 ?
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[6][0]++, 'Test error') :
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[6][1]++, _c));
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[34]++;
  if (shouldThrow) {
    /* istanbul ignore next */
    cov_2gqzc9c1k8().b[7][0]++;
    cov_2gqzc9c1k8().s[35]++;
    throw new Error(errorMessage);
  } else
  /* istanbul ignore next */
  {
    cov_2gqzc9c1k8().b[7][1]++;
  }
  cov_2gqzc9c1k8().s[36]++;
  return react_2.default.createElement('div', null, 'No error');
};
/* istanbul ignore next */
cov_2gqzc9c1k8().s[37]++;
exports.ThrowError = ThrowError;
/**
 * Test component that throws errors in useEffect
 */
/* istanbul ignore next */
cov_2gqzc9c1k8().s[38]++;
var ThrowErrorInEffect = function (_a) {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[7]++;
  var _b =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[39]++, _a.errorMessage),
    errorMessage =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[40]++, _b === void 0 ?
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[8][0]++, 'Effect error') :
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[8][1]++, _b));
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[41]++;
  react_2.default.useEffect(function () {
    /* istanbul ignore next */
    cov_2gqzc9c1k8().f[8]++;
    cov_2gqzc9c1k8().s[42]++;
    throw new Error(errorMessage);
  }, [errorMessage]);
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[43]++;
  return react_2.default.createElement('div', null, 'Component with effect error');
};
/* istanbul ignore next */
cov_2gqzc9c1k8().s[44]++;
exports.ThrowErrorInEffect = ThrowErrorInEffect;
/**
 * Test component that throws errors in render
 */
/* istanbul ignore next */
cov_2gqzc9c1k8().s[45]++;
var ThrowErrorInRender = function (_a) {
  /* istanbul ignore next */
  cov_2gqzc9c1k8().f[9]++;
  var _b =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[46]++, _a.errorMessage),
    errorMessage =
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().s[47]++, _b === void 0 ?
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[9][0]++, 'Render error') :
    /* istanbul ignore next */
    (cov_2gqzc9c1k8().b[9][1]++, _b));
  /* istanbul ignore next */
  cov_2gqzc9c1k8().s[48]++;
  throw new Error(errorMessage);
};
/* istanbul ignore next */
cov_2gqzc9c1k8().s[49]++;
exports.ThrowErrorInRender = ThrowErrorInRender;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,