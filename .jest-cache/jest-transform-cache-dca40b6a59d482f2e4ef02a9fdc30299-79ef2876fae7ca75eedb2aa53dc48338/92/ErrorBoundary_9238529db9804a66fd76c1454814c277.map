{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/error-handling/ui/ErrorBoundary.tsx","mappings":";AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,6CAAwE;AACxE,sDAAoE;AACpE,iDAAgD;AAChD,kCAAsC;AAGtC;IAA4B,iCAAuD;IACjF,uBAAY,KAAyB;QACnC,YAAA,MAAK,YAAC,KAAK,CAAC,SAAC;QACb,KAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;IACnC,CAAC;IAEM,sCAAwB,GAA/B,UAAgC,MAAa;QAC3C,4DAA4D;QAC5D,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEQ,yCAAiB,GAA1B,UAA2B,KAAY,EAAE,SAAoB;QAC3D,sCAAsC;QACtC,IAAA,cAAQ,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC7B,CAAC;IAEQ,8BAAM,GAAf;QACU,IAAA,QAAQ,GAAK,IAAI,CAAC,KAAK,SAAf,CAAgB;QACxB,IAAA,QAAQ,GAAK,IAAI,CAAC,KAAK,SAAf,CAAgB;QAEhC,IAAI,QAAQ,EAAE,CAAC;YACb,kEAAkE;YAClE,OAAO,CACL,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,uBAAC,kCAAuB,KAAG,YAC7C,uBAAC,qBAAS,KAAG,GACJ,CACZ,CAAC;QACJ,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IACH,oBAAC;AAAD,CAAC,AA/BD,CAA4B,eAAK,CAAC,SAAS,GA+B1C;AAED,kBAAe,aAAa,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/error-handling/ui/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React, { Suspense, type ErrorInfo, type ReactNode } from 'react';\nimport { DefaultSuspenseFallback } from '@/infrastructure/suspense';\nimport { PageError } from '@/widgets/PageError';\nimport { logError } from '../lib/lib';\nimport type { ErrorBoundaryProps, ErrorBoundaryState } from '../types/types';\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log the error to console and Sentry\n    logError(error, errorInfo);\n  }\n\n  override render(): ReactNode {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    if (hasError) {\n      // Wrap PageError in Suspense in case it has any lazy dependencies\n      return (\n        <Suspense fallback={<DefaultSuspenseFallback />}>\n          <PageError />\n        </Suspense>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"version":3}