{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/performance/webVitals.mock.ts","mappings":";AAAA;;;;;GAKG;;;AAIH,4BAA4B;AACf,QAAA,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,UAAC,OAA6B;IAA7B,wBAAA,EAAA,YAA6B;IAC1F,wCAAwC;IACxC,OAAO;AACT,CAAC,CAAC,CAAC;AAEH,2BAA2B;AACd,QAAA,sBAAsB,GAAG;IACpC,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,GAAG;CACT,CAAC;AAEF,gCAAgC;AACnB,QAAA,0BAA0B,GAAG,IAAI;KAC3C,EAAE,EAAE;KACJ,kBAAkB,CAAC,UAAC,MAAuC;IAC1D,IAAM,MAAM,GAAG,8BAAsB,CAAC,MAAM,CAAC,IAA2C,CAAC,CAAC;IAC1F,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AAChD,CAAC,CAAC,CAAC;AAEL,0BAA0B;AACb,QAAA,wBAAwB,GAAG,IAAI;KACzC,EAAE,EAAE;KACJ,kBAAkB,CAAC,UAAC,MAAuC;IAC1D,IAAM,MAAM,GAAG,8BAAsB,CAAC,MAAM,CAAC,IAA2C,CAAC,CAAC;IAC1F,IAAI,CAAC,MAAM;QAAE,OAAO,MAAM,CAAC;IAE3B,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,GAAG,GAAG;QAAE,OAAO,MAAM,CAAC;IAChD,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM;QAAE,OAAO,mBAAmB,CAAC;IACvD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC;AAEL,8CAA8C;AACvC,IAAM,mBAAmB,GAAG,UACjC,cAIM;IAJN,+BAAA,EAAA,mBAIM;IAEN,OAAO;QACL,aAAa,EAAE,cAAc,CAAC,aAAa,IAAI,yBAAiB;QAChE,sBAAsB,EAAE,cAAc,CAAC,sBAAsB,IAAI,kCAA0B;QAC3F,oBAAoB,EAAE,cAAc,CAAC,oBAAoB,IAAI,gCAAwB;QACrF,mBAAmB,EAAE,8BAAsB;KAC5C,CAAC;AACJ,CAAC,CAAC;AAbW,QAAA,mBAAmB,uBAa9B;AAEF,6BAA6B;AACtB,IAAM,sBAAsB,GAAG,UAAC,KAAY;IACjD,OAAO;QACL,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC;YAC1C,MAAM,KAAK,CAAC;QACd,CAAC,CAAC;QACF,sBAAsB,EAAE,kCAA0B;QAClD,oBAAoB,EAAE,gCAAwB;QAC9C,mBAAmB,EAAE,8BAAsB;KAC5C,CAAC;AACJ,CAAC,CAAC;AATW,QAAA,sBAAsB,0BASjC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/performance/webVitals.mock.ts"],"sourcesContent":["/**\n * Web Vitals Mock for Testing\n *\n * Provides mock implementations of web vitals functions for testing\n * performance monitoring functionality.\n */\n\nimport type { WebVitalsConfig } from '@/infrastructure/performance/types/performance.types';\n\n// Mock web vitals functions\nexport const mockInitWebVitals = jest.fn().mockImplementation((_config: WebVitalsConfig = {}) => {\n  // Mock implementation that does nothing\n  return;\n});\n\n// Mock performance budgets\nexport const mockPerformanceBudgets = {\n  CLS: 0.1,\n  FID: 100,\n  FCP: 1800,\n  LCP: 2500,\n  TTFB: 800,\n  INP: 200,\n};\n\n// Mock performance budget check\nexport const mockCheckPerformanceBudget = jest\n  .fn()\n  .mockImplementation((metric: { name: string; value: number }) => {\n    const budget = mockPerformanceBudgets[metric.name as keyof typeof mockPerformanceBudgets];\n    return budget ? metric.value <= budget : true;\n  });\n\n// Mock performance rating\nexport const mockGetPerformanceRating = jest\n  .fn()\n  .mockImplementation((metric: { name: string; value: number }) => {\n    const budget = mockPerformanceBudgets[metric.name as keyof typeof mockPerformanceBudgets];\n    if (!budget) return 'good';\n\n    if (metric.value <= budget * 0.5) return 'good';\n    if (metric.value <= budget) return 'needs-improvement';\n    return 'poor';\n  });\n\n// Create mock web vitals with custom behavior\nexport const createMockWebVitals = (\n  customBehavior: {\n    initWebVitals?: jest.Mock;\n    checkPerformanceBudget?: jest.Mock;\n    getPerformanceRating?: jest.Mock;\n  } = {}\n) => {\n  return {\n    initWebVitals: customBehavior.initWebVitals || mockInitWebVitals,\n    checkPerformanceBudget: customBehavior.checkPerformanceBudget || mockCheckPerformanceBudget,\n    getPerformanceRating: customBehavior.getPerformanceRating || mockGetPerformanceRating,\n    PERFORMANCE_BUDGETS: mockPerformanceBudgets,\n  };\n};\n\n// Mock web vitals with error\nexport const mockWebVitalsWithError = (error: Error) => {\n  return {\n    initWebVitals: jest.fn().mockImplementation(() => {\n      throw error;\n    }),\n    checkPerformanceBudget: mockCheckPerformanceBudget,\n    getPerformanceRating: mockGetPerformanceRating,\n    PERFORMANCE_BUDGETS: mockPerformanceBudgets,\n  };\n};\n"],"version":3}