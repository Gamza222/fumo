cadefa2d08b0eaa01284837db9d0d24e
"use strict";

/* istanbul ignore next */
function cov_23l4m8mbii() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/component-generator/component-generator.ts";
  var hash = "5e91230823042fa9da79fc10e229472254713afa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/component-generator/component-generator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "39": {
        start: {
          line: 40,
          column: 9
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "40": {
        start: {
          line: 41,
          column: 13
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "41": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "42": {
        start: {
          line: 43,
          column: 36
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "43": {
        start: {
          line: 43,
          column: 57
        },
        end: {
          line: 43,
          column: 68
        }
      },
      "44": {
        start: {
          line: 43,
          column: 75
        },
        end: {
          line: 43,
          column: 93
        }
      },
      "45": {
        start: {
          line: 43,
          column: 109
        },
        end: {
          line: 43,
          column: 132
        }
      },
      "46": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "47": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 78
        }
      },
      "48": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "49": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 63
        }
      },
      "50": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "51": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 79
        }
      },
      "52": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 68
        }
      },
      "53": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "54": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "55": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 67
        }
      },
      "56": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 99
        }
      },
      "57": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 44
        }
      },
      "58": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 99
        }
      },
      "59": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 63
        }
      },
      "60": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 105
        }
      },
      "61": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "62": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 82
        }
      },
      "63": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 635
        }
      },
      "64": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 973
        }
      },
      "65": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 1225
        }
      },
      "66": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 140
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "componentGenerator",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 27
          }
        },
        loc: {
          start: {
            line: 42,
            column: 36
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 42
      },
      "11": {
        name: "generateComponentFile",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 30
          }
        },
        loc: {
          start: {
            line: 78,
            column: 50
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 78
      },
      "12": {
        name: "generateTestFile",
        decl: {
          start: {
            line: 81,
            column: 9
          },
          end: {
            line: 81,
            column: 25
          }
        },
        loc: {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 81
      },
      "13": {
        name: "generateStoriesFile",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 28
          }
        },
        loc: {
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 84
      },
      "14": {
        name: "generateIndexFile",
        decl: {
          start: {
            line: 87,
            column: 9
          },
          end: {
            line: 87,
            column: 26
          }
        },
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 43,
            column: 109
          },
          end: {
            line: 43,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 125
          },
          end: {
            line: 43,
            column: 127
          }
        }, {
          start: {
            line: 43,
            column: 130
          },
          end: {
            line: 43,
            column: 132
          }
        }],
        line: 43
      },
      "21": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "22": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 26
          }
        }, {
          start: {
            line: 45,
            column: 30
          },
          end: {
            line: 45,
            column: 68
          }
        }],
        line: 45
      },
      "23": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "24": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 44
          }
        }],
        line: 48
      },
      "25": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "26": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 34
          }
        }, {
          start: {
            line: 51,
            column: 38
          },
          end: {
            line: 51,
            column: 68
          }
        }],
        line: 51
      },
      "27": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "28": {
        loc: {
          start: {
            line: 79,
            column: 248
          },
          end: {
            line: 79,
            column: 292
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 248
          },
          end: {
            line: 79,
            column: 259
          }
        }, {
          start: {
            line: 79,
            column: 263
          },
          end: {
            line: 79,
            column: 292
          }
        }],
        line: 79
      },
      "29": {
        loc: {
          start: {
            line: 85,
            column: 347
          },
          end: {
            line: 85,
            column: 391
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 347
          },
          end: {
            line: 85,
            column: 358
          }
        }, {
          start: {
            line: 85,
            column: 362
          },
          end: {
            line: 85,
            column: 391
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/component-generator/component-generator.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,gDA6CC;AAvDD,qCAAyB;AACzB,8CAAwB;AASxB,SAAgB,kBAAkB,CAAC,MAAuB;IAChD,IAAA,IAAI,GAAoC,MAAM,KAA1C,EAAE,KAAK,GAA6B,MAAM,MAAnC,EAAE,IAAI,GAAuB,MAAM,KAA7B,EAAE,KAAqB,MAAM,YAAX,EAAhB,WAAW,mBAAG,EAAE,KAAA,CAAY;IAEvD,sCAAsC;IACtC,IAAI,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACjE,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QACzC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,KAAK,KAAK,gBAAgB,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACjE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;IACzE,CAAC;IAED,IAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAEzD,uCAAuC;IACvC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;QACjC,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,0BAA0B;IAC1B,IAAM,gBAAgB,GAAG,qBAAqB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAClE,EAAE,CAAC,aAAa,CAAC,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAG,IAAI,SAAM,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAE3E,qBAAqB;IACrB,IAAM,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC3C,EAAE,CAAC,aAAa,CAAC,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAG,IAAI,cAAW,CAAC,EAAE,WAAW,CAAC,CAAC;IAE3E,wBAAwB;IACxB,IAAM,cAAc,GAAG,mBAAmB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC9D,EAAE,CAAC,aAAa,CAAC,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAG,IAAI,iBAAc,CAAC,EAAE,cAAc,CAAC,CAAC;IAEjF,sBAAsB;IACtB,IAAM,YAAY,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC7C,EAAE,CAAC,aAAa,CAAC,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,CAAC;IAEpE,8DAA8D;IAC9D,iBAAiB;IACjB,kBAAkB;IAClB,uBAAuB;IACvB,0BAA0B;IAC1B,eAAe;AACjB,CAAC;AAED,SAAS,qBAAqB,CAAC,IAAY,EAAE,WAAmB;IAC9D,OAAO,sHAGU,IAAI,mHAOlB,WAAW,IAAI,UAAG,IAAI,eAAY,qGAKrB,IAAI,iDAAuC,IAAI,2EAGlC,IAAI,CAAC,WAAW,EAAE,2FAOhD,CAAC;AACF,CAAC;AAED,SAAS,gBAAgB,CAAC,IAAY;IACpC,OAAO,6EACE,IAAI,wBAAc,IAAI,6BAErB,IAAI,+EAEF,IAAI,4BAAkB,IAAI,oJAK1B,IAAI,+CAAmC,IAAI,oJAGtB,IAAI,CAAC,WAAW,EAAE,2FAK5C,IAAI,oFAGH,IAAI,wJAMb,CAAC;AACF,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAY,EAAE,WAAmB;IAC5D,OAAO,4EACE,IAAI,wBAAc,IAAI,2CAEP,IAAI,8BAClB,IAAI,8BACD,IAAI,iHAKG,WAAW,IAAI,UAAG,IAAI,eAAY,oaAsB/B,IAAI,2LASc,IAAI,oIAQtB,IAAI,CAAC,WAAW,EAAE,6CACnB,IAAI,mBAG3B,CAAC;AACF,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAY;IACrC,OAAO,mBAAY,IAAI,wBAAc,IAAI,+BAC3B,IAAI,6BAAmB,IAAI,SAC1C,CAAC;AACF,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/component-generator/component-generator.ts"],
      sourcesContent: ["import * as fs from 'fs';\nimport path from 'path';\n\nexport interface ComponentConfig {\n  name: string;\n  layer: 'shared' | 'widgets' | 'infrastructure';\n  type: 'ui' | 'lib' | 'model' | 'api';\n  description?: string;\n}\n\nexport function componentGenerator(config: ComponentConfig) {\n  const { name, layer, type, description = '' } = config;\n\n  // Validate layer and type combination\n  if (layer === 'shared' && !['ui', 'lib', 'model'].includes(type)) {\n    throw new Error('Shared layer only supports ui, lib, or model types');\n  }\n\n  if (layer === 'widgets' && type !== 'ui') {\n    throw new Error('Widgets layer only supports ui type');\n  }\n\n  if (layer === 'infrastructure' && !['lib', 'api'].includes(type)) {\n    throw new Error('Infrastructure layer only supports lib or api types');\n  }\n\n  const componentDir = path.join('src', layer, type, name);\n\n  // Create directory if it doesn't exist\n  if (!fs.existsSync(componentDir)) {\n    fs.mkdirSync(componentDir, { recursive: true });\n  }\n\n  // Generate component file\n  const componentContent = generateComponentFile(name, description);\n  fs.writeFileSync(path.join(componentDir, `${name}.tsx`), componentContent);\n\n  // Generate test file\n  const testContent = generateTestFile(name);\n  fs.writeFileSync(path.join(componentDir, `${name}.test.tsx`), testContent);\n\n  // Generate stories file\n  const storiesContent = generateStoriesFile(name, description);\n  fs.writeFileSync(path.join(componentDir, `${name}.stories.tsx`), storiesContent);\n\n  // Generate index file\n  const indexContent = generateIndexFile(name);\n  fs.writeFileSync(path.join(componentDir, 'index.ts'), indexContent);\n\n  // Component ${name} generated successfully in ${componentDir}\n  // Files created:\n  //   - ${name}.tsx\n  //   - ${name}.test.tsx\n  //   - ${name}.stories.tsx\n  //   - index.ts\n}\n\nfunction generateComponentFile(name: string, description: string): string {\n  return `import React from 'react';\nimport { classNames } from '@/shared/lib/utils/classNames';\n\nexport interface ${name}Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Add your props here\n}\n\n/**\n * ${description || `${name} component`}\n * \n * @param props - Component props\n * @returns JSX element\n */\nexport function ${name}({ className, children, ...props }: ${name}Props) {\n  return (\n    <div \n      className={classNames('${name.toLowerCase()}', {}, [className])}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n`;\n}\n\nfunction generateTestFile(name: string): string {\n  return `import { render, screen } from '@testing-library/react';\nimport { ${name} } from './${name}';\n\ndescribe('${name}', () => {\n  it('renders without crashing', () => {\n    render(<${name}>Test content</${name}>);\n    expect(screen.getByText('Test content')).toBeInTheDocument();\n  });\n\n  it('applies custom className', () => {\n    render(<${name} className=\"custom-class\">Test</${name}>);\n    const element = screen.getByText('Test');\n    expect(element).toHaveClass('custom-class');\n    expect(element).toHaveClass('${name.toLowerCase()}');\n  });\n\n  it('renders children correctly', () => {\n    render(\n      <${name}>\n        <span>Child 1</span>\n        <span>Child 2</span>\n      </${name}>\n    );\n    expect(screen.getByText('Child 1')).toBeInTheDocument();\n    expect(screen.getByText('Child 2')).toBeInTheDocument();\n  });\n});\n`;\n}\n\nfunction generateStoriesFile(name: string, description: string): string {\n  return `import type { Meta, StoryObj } from '@storybook/react';\nimport { ${name} } from './${name}';\n\nconst meta: Meta<typeof ${name}> = {\n  title: '${name}',\n  component: ${name},\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: '${description || `${name} component`}',\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Custom CSS class',\n    },\n    children: {\n      control: 'text',\n      description: 'Content to render inside the component',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    children: 'Default ${name}',\n  },\n};\n\nexport const WithCustomContent: Story = {\n  args: {\n    children: (\n      <div>\n        <h3>Custom Content</h3>\n        <p>This is custom content inside ${name}</p>\n      </div>\n    ),\n  },\n};\n\nexport const WithCustomClassName: Story = {\n  args: {\n    className: 'custom-${name.toLowerCase()}-class',\n    children: 'Styled ${name}',\n  },\n};\n`;\n}\n\nfunction generateIndexFile(name: string): string {\n  return `export { ${name} } from './${name}';\nexport type { ${name}Props } from './${name}';\n`;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5e91230823042fa9da79fc10e229472254713afa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23l4m8mbii = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23l4m8mbii();
var __createBinding =
/* istanbul ignore next */
(cov_23l4m8mbii().s[0]++,
/* istanbul ignore next */
(cov_23l4m8mbii().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_23l4m8mbii().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_23l4m8mbii().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_23l4m8mbii().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[0]++;
  cov_23l4m8mbii().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[2][0]++;
    cov_23l4m8mbii().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_23l4m8mbii().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[5][1]++,
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[3][0]++;
    cov_23l4m8mbii().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_23l4m8mbii().f[1]++;
        cov_23l4m8mbii().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[3][1]++;
  }
  cov_23l4m8mbii().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_23l4m8mbii().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[2]++;
  cov_23l4m8mbii().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[7][0]++;
    cov_23l4m8mbii().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[7][1]++;
  }
  cov_23l4m8mbii().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_23l4m8mbii().s[11]++,
/* istanbul ignore next */
(cov_23l4m8mbii().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_23l4m8mbii().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_23l4m8mbii().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_23l4m8mbii().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[3]++;
  cov_23l4m8mbii().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_23l4m8mbii().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[4]++;
  cov_23l4m8mbii().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_23l4m8mbii().s[14]++,
/* istanbul ignore next */
(cov_23l4m8mbii().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_23l4m8mbii().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_23l4m8mbii().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[5]++;
  cov_23l4m8mbii().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_23l4m8mbii().f[6]++;
    cov_23l4m8mbii().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_23l4m8mbii().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_23l4m8mbii().s[17]++, []);
      /* istanbul ignore next */
      cov_23l4m8mbii().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_23l4m8mbii().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_23l4m8mbii().b[12][0]++;
          cov_23l4m8mbii().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_23l4m8mbii().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_23l4m8mbii().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_23l4m8mbii().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_23l4m8mbii().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_23l4m8mbii().f[8]++;
    cov_23l4m8mbii().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_23l4m8mbii().b[13][0]++;
      cov_23l4m8mbii().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_23l4m8mbii().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[26]++, {});
    /* istanbul ignore next */
    cov_23l4m8mbii().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_23l4m8mbii().b[15][0]++;
      cov_23l4m8mbii().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_23l4m8mbii().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_23l4m8mbii().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_23l4m8mbii().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_23l4m8mbii().b[16][0]++;
          cov_23l4m8mbii().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_23l4m8mbii().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_23l4m8mbii().b[15][1]++;
    }
    cov_23l4m8mbii().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_23l4m8mbii().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_23l4m8mbii().s[35]++,
/* istanbul ignore next */
(cov_23l4m8mbii().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_23l4m8mbii().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_23l4m8mbii().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[9]++;
  cov_23l4m8mbii().s[36]++;
  return /* istanbul ignore next */(cov_23l4m8mbii().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_23l4m8mbii().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23l4m8mbii().s[38]++;
exports.componentGenerator = componentGenerator;
var fs =
/* istanbul ignore next */
(cov_23l4m8mbii().s[39]++, __importStar(require("fs")));
var path_1 =
/* istanbul ignore next */
(cov_23l4m8mbii().s[40]++, __importDefault(require("path")));
function componentGenerator(config) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[10]++;
  var name =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[41]++, config.name),
    layer =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[42]++, config.layer),
    type =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[43]++, config.type),
    _a =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[44]++, config.description),
    description =
    /* istanbul ignore next */
    (cov_23l4m8mbii().s[45]++, _a === void 0 ?
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[20][0]++, '') :
    /* istanbul ignore next */
    (cov_23l4m8mbii().b[20][1]++, _a));
  // Validate layer and type combination
  /* istanbul ignore next */
  cov_23l4m8mbii().s[46]++;
  if (
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[22][0]++, layer === 'shared') &&
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[22][1]++, !['ui', 'lib', 'model'].includes(type))) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[21][0]++;
    cov_23l4m8mbii().s[47]++;
    throw new Error('Shared layer only supports ui, lib, or model types');
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[21][1]++;
  }
  cov_23l4m8mbii().s[48]++;
  if (
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[24][0]++, layer === 'widgets') &&
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[24][1]++, type !== 'ui')) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[23][0]++;
    cov_23l4m8mbii().s[49]++;
    throw new Error('Widgets layer only supports ui type');
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[23][1]++;
  }
  cov_23l4m8mbii().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[26][0]++, layer === 'infrastructure') &&
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[26][1]++, !['lib', 'api'].includes(type))) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[25][0]++;
    cov_23l4m8mbii().s[51]++;
    throw new Error('Infrastructure layer only supports lib or api types');
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[25][1]++;
  }
  var componentDir =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[52]++, path_1.default.join('src', layer, type, name));
  // Create directory if it doesn't exist
  /* istanbul ignore next */
  cov_23l4m8mbii().s[53]++;
  if (!fs.existsSync(componentDir)) {
    /* istanbul ignore next */
    cov_23l4m8mbii().b[27][0]++;
    cov_23l4m8mbii().s[54]++;
    fs.mkdirSync(componentDir, {
      recursive: true
    });
  } else
  /* istanbul ignore next */
  {
    cov_23l4m8mbii().b[27][1]++;
  }
  // Generate component file
  var componentContent =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[55]++, generateComponentFile(name, description));
  /* istanbul ignore next */
  cov_23l4m8mbii().s[56]++;
  fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".tsx")), componentContent);
  // Generate test file
  var testContent =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[57]++, generateTestFile(name));
  /* istanbul ignore next */
  cov_23l4m8mbii().s[58]++;
  fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".test.tsx")), testContent);
  // Generate stories file
  var storiesContent =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[59]++, generateStoriesFile(name, description));
  /* istanbul ignore next */
  cov_23l4m8mbii().s[60]++;
  fs.writeFileSync(path_1.default.join(componentDir, "".concat(name, ".stories.tsx")), storiesContent);
  // Generate index file
  var indexContent =
  /* istanbul ignore next */
  (cov_23l4m8mbii().s[61]++, generateIndexFile(name));
  /* istanbul ignore next */
  cov_23l4m8mbii().s[62]++;
  fs.writeFileSync(path_1.default.join(componentDir, 'index.ts'), indexContent);
  // Component ${name} generated successfully in ${componentDir}
  // Files created:
  //   - ${name}.tsx
  //   - ${name}.test.tsx
  //   - ${name}.stories.tsx
  //   - index.ts
}
function generateComponentFile(name, description) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[11]++;
  cov_23l4m8mbii().s[63]++;
  return "import React from 'react';\nimport { classNames } from '@/shared/lib/utils/classNames';\n\nexport interface ".concat(name, "Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Add your props here\n}\n\n/**\n * ").concat(
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[28][0]++, description) ||
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[28][1]++, "".concat(name, " component")), "\n * \n * @param props - Component props\n * @returns JSX element\n */\nexport function ").concat(name, "({ className, children, ...props }: ").concat(name, "Props) {\n  return (\n    <div \n      className={classNames('").concat(name.toLowerCase(), "', {}, [className])}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n");
}
function generateTestFile(name) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[12]++;
  cov_23l4m8mbii().s[64]++;
  return "import { render, screen } from '@testing-library/react';\nimport { ".concat(name, " } from './").concat(name, "';\n\ndescribe('").concat(name, "', () => {\n  it('renders without crashing', () => {\n    render(<").concat(name, ">Test content</").concat(name, ">);\n    expect(screen.getByText('Test content')).toBeInTheDocument();\n  });\n\n  it('applies custom className', () => {\n    render(<").concat(name, " className=\"custom-class\">Test</").concat(name, ">);\n    const element = screen.getByText('Test');\n    expect(element).toHaveClass('custom-class');\n    expect(element).toHaveClass('").concat(name.toLowerCase(), "');\n  });\n\n  it('renders children correctly', () => {\n    render(\n      <").concat(name, ">\n        <span>Child 1</span>\n        <span>Child 2</span>\n      </").concat(name, ">\n    );\n    expect(screen.getByText('Child 1')).toBeInTheDocument();\n    expect(screen.getByText('Child 2')).toBeInTheDocument();\n  });\n});\n");
}
function generateStoriesFile(name, description) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[13]++;
  cov_23l4m8mbii().s[65]++;
  return "import type { Meta, StoryObj } from '@storybook/react';\nimport { ".concat(name, " } from './").concat(name, "';\n\nconst meta: Meta<typeof ").concat(name, "> = {\n  title: '").concat(name, "',\n  component: ").concat(name, ",\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: '").concat(
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[29][0]++, description) ||
  /* istanbul ignore next */
  (cov_23l4m8mbii().b[29][1]++, "".concat(name, " component")), "',\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Custom CSS class',\n    },\n    children: {\n      control: 'text',\n      description: 'Content to render inside the component',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    children: 'Default ").concat(name, "',\n  },\n};\n\nexport const WithCustomContent: Story = {\n  args: {\n    children: (\n      <div>\n        <h3>Custom Content</h3>\n        <p>This is custom content inside ").concat(name, "</p>\n      </div>\n    ),\n  },\n};\n\nexport const WithCustomClassName: Story = {\n  args: {\n    className: 'custom-").concat(name.toLowerCase(), "-class',\n    children: 'Styled ").concat(name, "',\n  },\n};\n");
}
function generateIndexFile(name) {
  /* istanbul ignore next */
  cov_23l4m8mbii().f[14]++;
  cov_23l4m8mbii().s[66]++;
  return "export { ".concat(name, " } from './").concat(name, "';\nexport type { ").concat(name, "Props } from './").concat(name, "';\n");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,