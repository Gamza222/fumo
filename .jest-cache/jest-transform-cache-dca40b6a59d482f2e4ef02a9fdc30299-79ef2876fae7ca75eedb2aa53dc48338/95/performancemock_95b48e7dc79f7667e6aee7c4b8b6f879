7f5d6630c3de7be79e064f56e6ef6a74
"use strict";

/**
 * Performance API Mock for Testing
 *
 * Provides a mock implementation of the Performance API for testing environments.
 * Simulates performance timing and measurement capabilities.
 */
/* istanbul ignore next */
function cov_1yt9p7i7sd() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts";
  var hash = "a0adf0474281c46a5ed03ead96c7d93a994e766a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "3": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "4": {
        start: {
          line: 10,
          column: 31
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "5": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "7": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "8": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "11": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 97
        }
      },
      "13": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "14": {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 23,
          column: 43
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "16": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 36,
          column: 14
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 18
        }
      },
      "18": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "20": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "21": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 49,
          column: 84
        }
      },
      "22": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 27
        }
      },
      "23": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 42
        }
      },
      "24": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "25": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 51
        }
      },
      "26": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 49
        }
      },
      "27": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 66
        }
      },
      "28": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "29": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 62,
          column: 52
        }
      },
      "30": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 8,
            column: 43
          }
        },
        loc: {
          start: {
            line: 8,
            column: 54
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 9,
            column: 33
          }
        },
        loc: {
          start: {
            line: 9,
            column: 44
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 45
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 31
          }
        },
        loc: {
          start: {
            line: 28,
            column: 46
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 47,
            column: 23
          }
        },
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 28
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 15
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 20
          }
        }, {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 37
          }
        }, {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 28
          }
        }, {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts",
      mappings: ";AAAA;;;;;GAKG;;;;;;;;;;;;;;AAIH,gCAAgC;AAChC,IAAM,sBAAsB,GAAG;IAC7B,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;IACxB,MAAM,EAAE;QACN,eAAe,EAAE,CAAC;QAClB,YAAY,EAAE,IAAI;KACnB;IACD,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,UAAC,IAAY;QACrC,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;YAC1B,OAAO;gBACL;oBACE,IAAI,EAAE,YAAY;oBAClB,SAAS,EAAE,CAAC;oBACZ,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC;QACJ,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;CACH,CAAC;AAEF;;;;;GAKG;AACI,IAAM,eAAe,GAAG,UAC7B,UAAkD;IAAlD,2BAAA,EAAA,eAAkD;IAElD,IAAM,eAAe,yBAChB,sBAAsB,GACtB,UAAU,CACd,CAAC;IAEF,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B;AAEF,gCAAgC;AACzB,IAAM,oBAAoB,GAAG,UAAC,UAAkD;IAAlD,2BAAA,EAAA,eAAkD;IACrF,IAAM,eAAe,GAAG,IAAA,uBAAe,EAAC,UAAU,CAAC,CAAC;IAEpD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE;QAC3C,KAAK,EAAE,eAAe;QACtB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;AACL,CAAC,CAAC;AAPW,QAAA,oBAAoB,wBAO/B;AAEF,oCAAoC;AACvB,QAAA,sBAAsB,GAAG,IAAA,uBAAe,GAAE,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/performance/performance.mock.ts"],
      sourcesContent: ["/**\n * Performance API Mock for Testing\n *\n * Provides a mock implementation of the Performance API for testing environments.\n * Simulates performance timing and measurement capabilities.\n */\n\nimport { mockPerformanceInterface } from '../../types/types';\n\n// Default performance mock data\nconst defaultPerformanceData = {\n  now: jest.fn(() => 1000),\n  timing: {\n    navigationStart: 0,\n    loadEventEnd: 1000,\n  },\n  getEntriesByType: jest.fn((type: string) => {\n    if (type === 'navigation') {\n      return [\n        {\n          name: 'navigation',\n          startTime: 0,\n          duration: 1000,\n        },\n      ];\n    }\n    return [];\n  }),\n};\n\n/**\n * Creates a mock performance object for testing\n *\n * @param customData - Optional custom performance data to override defaults\n * @returns A mock performance object that implements mockPerformanceInterface\n */\nexport const mockPerformance = (\n  customData: Partial<mockPerformanceInterface> = {}\n): mockPerformanceInterface => {\n  const performanceMock: mockPerformanceInterface = {\n    ...defaultPerformanceData,\n    ...customData,\n  };\n\n  return performanceMock;\n};\n\n// Global performance mock setup\nexport const setupPerformanceMock = (customData: Partial<mockPerformanceInterface> = {}): void => {\n  const performanceMock = mockPerformance(customData);\n\n  Object.defineProperty(window, 'performance', {\n    value: performanceMock,\n    writable: true,\n  });\n};\n\n// Default performance mock instance\nexport const defaultPerformanceMock = mockPerformance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0adf0474281c46a5ed03ead96c7d93a994e766a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yt9p7i7sd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yt9p7i7sd();
var __assign =
/* istanbul ignore next */
(cov_1yt9p7i7sd().s[0]++,
/* istanbul ignore next */
(cov_1yt9p7i7sd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1yt9p7i7sd().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_1yt9p7i7sd().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_1yt9p7i7sd().f[0]++;
  cov_1yt9p7i7sd().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_1yt9p7i7sd().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_1yt9p7i7sd().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_1yt9p7i7sd().f[1]++;
    cov_1yt9p7i7sd().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_1yt9p7i7sd().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_1yt9p7i7sd().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_1yt9p7i7sd().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_1yt9p7i7sd().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_1yt9p7i7sd().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_1yt9p7i7sd().b[2][0]++;
          cov_1yt9p7i7sd().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_1yt9p7i7sd().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1yt9p7i7sd().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_1yt9p7i7sd().s[10]++;
  return __assign.apply(this, arguments);
}));
/* istanbul ignore next */
cov_1yt9p7i7sd().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1yt9p7i7sd().s[12]++;
exports.defaultPerformanceMock = exports.setupPerformanceMock = exports.mockPerformance = void 0;
// Default performance mock data
var defaultPerformanceData =
/* istanbul ignore next */
(cov_1yt9p7i7sd().s[13]++, {
  now: jest.fn(function () {
    /* istanbul ignore next */
    cov_1yt9p7i7sd().f[2]++;
    cov_1yt9p7i7sd().s[14]++;
    return 1000;
  }),
  timing: {
    navigationStart: 0,
    loadEventEnd: 1000
  },
  getEntriesByType: jest.fn(function (type) {
    /* istanbul ignore next */
    cov_1yt9p7i7sd().f[3]++;
    cov_1yt9p7i7sd().s[15]++;
    if (type === 'navigation') {
      /* istanbul ignore next */
      cov_1yt9p7i7sd().b[3][0]++;
      cov_1yt9p7i7sd().s[16]++;
      return [{
        name: 'navigation',
        startTime: 0,
        duration: 1000
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1yt9p7i7sd().b[3][1]++;
    }
    cov_1yt9p7i7sd().s[17]++;
    return [];
  })
});
/**
 * Creates a mock performance object for testing
 *
 * @param customData - Optional custom performance data to override defaults
 * @returns A mock performance object that implements mockPerformanceInterface
 */
/* istanbul ignore next */
cov_1yt9p7i7sd().s[18]++;
var mockPerformance = function (customData) {
  /* istanbul ignore next */
  cov_1yt9p7i7sd().f[4]++;
  cov_1yt9p7i7sd().s[19]++;
  if (customData === void 0) {
    /* istanbul ignore next */
    cov_1yt9p7i7sd().b[4][0]++;
    cov_1yt9p7i7sd().s[20]++;
    customData = {};
  } else
  /* istanbul ignore next */
  {
    cov_1yt9p7i7sd().b[4][1]++;
  }
  var performanceMock =
  /* istanbul ignore next */
  (cov_1yt9p7i7sd().s[21]++, __assign(__assign({}, defaultPerformanceData), customData));
  /* istanbul ignore next */
  cov_1yt9p7i7sd().s[22]++;
  return performanceMock;
};
/* istanbul ignore next */
cov_1yt9p7i7sd().s[23]++;
exports.mockPerformance = mockPerformance;
// Global performance mock setup
/* istanbul ignore next */
cov_1yt9p7i7sd().s[24]++;
var setupPerformanceMock = function (customData) {
  /* istanbul ignore next */
  cov_1yt9p7i7sd().f[5]++;
  cov_1yt9p7i7sd().s[25]++;
  if (customData === void 0) {
    /* istanbul ignore next */
    cov_1yt9p7i7sd().b[5][0]++;
    cov_1yt9p7i7sd().s[26]++;
    customData = {};
  } else
  /* istanbul ignore next */
  {
    cov_1yt9p7i7sd().b[5][1]++;
  }
  var performanceMock =
  /* istanbul ignore next */
  (cov_1yt9p7i7sd().s[27]++, (0, exports.mockPerformance)(customData));
  /* istanbul ignore next */
  cov_1yt9p7i7sd().s[28]++;
  Object.defineProperty(window, 'performance', {
    value: performanceMock,
    writable: true
  });
};
/* istanbul ignore next */
cov_1yt9p7i7sd().s[29]++;
exports.setupPerformanceMock = setupPerformanceMock;
// Default performance mock instance
/* istanbul ignore next */
cov_1yt9p7i7sd().s[30]++;
exports.defaultPerformanceMock = (0, exports.mockPerformance)();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,