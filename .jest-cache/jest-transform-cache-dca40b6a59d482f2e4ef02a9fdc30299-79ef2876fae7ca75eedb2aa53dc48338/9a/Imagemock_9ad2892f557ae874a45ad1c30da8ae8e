fe91297c54046392a7a8026741bcc770
"use strict";

/* istanbul ignore next */
function cov_ymwrurw2e() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/components/Image.mock.tsx";
  var hash = "fce8936a2c1a4784397d6dc7a81ec85fe9d4f730";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/components/Image.mock.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 10,
          column: 6
        }
      },
      "2": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 8,
          column: 9
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 25
        }
      },
      "4": {
        start: {
          line: 4,
          column: 31
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "5": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 29
        }
      },
      "6": {
        start: {
          line: 6,
          column: 12
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "7": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "8": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "9": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 17
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "11": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "12": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 14
        }
      },
      "13": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "14": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "15": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "16": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "17": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "18": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 22
        }
      },
      "19": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "20": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "21": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 13
        }
      },
      "23": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "24": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "26": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "27": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "28": {
        start: {
          line: 30,
          column: 14
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "29": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "30": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "31": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 49
        }
      },
      "32": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 72
        }
      },
      "33": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "34": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 43
          }
        },
        loc: {
          start: {
            line: 2,
            column: 54
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 3,
            column: 33
          }
        },
        loc: {
          start: {
            line: 3,
            column: 44
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 39
          }
        },
        loc: {
          start: {
            line: 13,
            column: 54
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 57
          }
        },
        loc: {
          start: {
            line: 24,
            column: 71
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 17
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 15
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 2,
            column: 20
          }
        }, {
          start: {
            line: 2,
            column: 24
          },
          end: {
            line: 2,
            column: 37
          }
        }, {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 3,
            column: 28
          }
        }, {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 10,
            column: 5
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 18
          }
        }, {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 33
          }
        }, {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 16,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 16,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 67
          }
        }, {
          start: {
            line: 15,
            column: 71
          },
          end: {
            line: 15,
            column: 87
          }
        }],
        line: 15
      },
      "6": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "7": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 17
          }
        }, {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 71
          }
        }],
        line: 17
      },
      "8": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 20,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 20,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "9": {
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 35
          }
        }, {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 90
          }
        }],
        line: 19
      },
      "10": {
        loc: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 26,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 26,
            column: 1
          }
        }],
        line: 24
      },
      "11": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 40
          }
        }, {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 61
          }
        }],
        line: 25
      },
      "12": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 15
          }
        }, {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 33
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/components/Image.mock.tsx",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAG1B;;;GAGG;AACI,IAAM,SAAS,GAAsC,UAAC,EAAiB;IAAf,IAAA,GAAG,SAAA,EAAK,KAAK,cAAf,OAAiB,CAAF;IAC1E,OAAO,yCAAK,GAAG,EAAE,GAAG,IAAM,KAAK,EAAI,CAAC;AACtC,CAAC,CAAC;AAFW,QAAA,SAAS,aAEpB;AAEF,iFAAiF;AACjF,kBAAe,iBAAS,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/components/Image.mock.tsx"],
      sourcesContent: ["import React from 'react';\nimport { mockImagePropsInterface } from '../types/types';\n\n/**\n * Mock Image component for testing\n * Replaces Next.js Image component in tests\n */\nexport const mockImage: React.FC<mockImagePropsInterface> = ({ alt, ...props }) => {\n  return <img alt={alt} {...props} />;\n};\n\n// Default export for Jest moduleNameMapper (image files are imported as default)\nexport default mockImage;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fce8936a2c1a4784397d6dc7a81ec85fe9d4f730"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ymwrurw2e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ymwrurw2e();
var __assign =
/* istanbul ignore next */
(cov_ymwrurw2e().s[0]++,
/* istanbul ignore next */
(cov_ymwrurw2e().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_ymwrurw2e().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_ymwrurw2e().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_ymwrurw2e().f[0]++;
  cov_ymwrurw2e().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_ymwrurw2e().f[1]++;
    cov_ymwrurw2e().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_ymwrurw2e().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_ymwrurw2e().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_ymwrurw2e().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_ymwrurw2e().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_ymwrurw2e().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_ymwrurw2e().b[2][0]++;
          cov_ymwrurw2e().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_ymwrurw2e().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_ymwrurw2e().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_ymwrurw2e().s[10]++;
  return __assign.apply(this, arguments);
}));
var __rest =
/* istanbul ignore next */
(cov_ymwrurw2e().s[11]++,
/* istanbul ignore next */
(cov_ymwrurw2e().b[3][0]++, this) &&
/* istanbul ignore next */
(cov_ymwrurw2e().b[3][1]++, this.__rest) ||
/* istanbul ignore next */
(cov_ymwrurw2e().b[3][2]++, function (s, e) {
  /* istanbul ignore next */
  cov_ymwrurw2e().f[2]++;
  var t =
  /* istanbul ignore next */
  (cov_ymwrurw2e().s[12]++, {});
  /* istanbul ignore next */
  cov_ymwrurw2e().s[13]++;
  for (var p in s) {
    /* istanbul ignore next */
    cov_ymwrurw2e().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_ymwrurw2e().b[5][0]++, Object.prototype.hasOwnProperty.call(s, p)) &&
    /* istanbul ignore next */
    (cov_ymwrurw2e().b[5][1]++, e.indexOf(p) < 0)) {
      /* istanbul ignore next */
      cov_ymwrurw2e().b[4][0]++;
      cov_ymwrurw2e().s[15]++;
      t[p] = s[p];
    } else
    /* istanbul ignore next */
    {
      cov_ymwrurw2e().b[4][1]++;
    }
  }
  /* istanbul ignore next */
  cov_ymwrurw2e().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[7][0]++, s != null) &&
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[7][1]++, typeof Object.getOwnPropertySymbols === "function")) {
    /* istanbul ignore next */
    cov_ymwrurw2e().b[6][0]++;
    cov_ymwrurw2e().s[17]++;
    for (var i =
      /* istanbul ignore next */
      (cov_ymwrurw2e().s[18]++, 0), p =
      /* istanbul ignore next */
      (cov_ymwrurw2e().s[19]++, Object.getOwnPropertySymbols(s)); i < p.length; i++) {
      /* istanbul ignore next */
      cov_ymwrurw2e().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_ymwrurw2e().b[9][0]++, e.indexOf(p[i]) < 0) &&
      /* istanbul ignore next */
      (cov_ymwrurw2e().b[9][1]++, Object.prototype.propertyIsEnumerable.call(s, p[i]))) {
        /* istanbul ignore next */
        cov_ymwrurw2e().b[8][0]++;
        cov_ymwrurw2e().s[21]++;
        t[p[i]] = s[p[i]];
      } else
      /* istanbul ignore next */
      {
        cov_ymwrurw2e().b[8][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_ymwrurw2e().b[6][1]++;
  }
  cov_ymwrurw2e().s[22]++;
  return t;
}));
var __importDefault =
/* istanbul ignore next */
(cov_ymwrurw2e().s[23]++,
/* istanbul ignore next */
(cov_ymwrurw2e().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_ymwrurw2e().b[10][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_ymwrurw2e().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_ymwrurw2e().f[3]++;
  cov_ymwrurw2e().s[24]++;
  return /* istanbul ignore next */(cov_ymwrurw2e().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[12][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[11][0]++, mod) :
  /* istanbul ignore next */
  (cov_ymwrurw2e().b[11][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_ymwrurw2e().s[25]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ymwrurw2e().s[26]++;
exports.mockImage = void 0;
var jsx_runtime_1 =
/* istanbul ignore next */
(cov_ymwrurw2e().s[27]++, require("react/jsx-runtime"));
var react_1 =
/* istanbul ignore next */
(cov_ymwrurw2e().s[28]++, __importDefault(require("react")));
/**
 * Mock Image component for testing
 * Replaces Next.js Image component in tests
 */
/* istanbul ignore next */
cov_ymwrurw2e().s[29]++;
var mockImage = function (_a) {
  /* istanbul ignore next */
  cov_ymwrurw2e().f[4]++;
  var alt =
    /* istanbul ignore next */
    (cov_ymwrurw2e().s[30]++, _a.alt),
    props =
    /* istanbul ignore next */
    (cov_ymwrurw2e().s[31]++, __rest(_a, ["alt"]));
  /* istanbul ignore next */
  cov_ymwrurw2e().s[32]++;
  return (0, jsx_runtime_1.jsx)("img", __assign({
    alt: alt
  }, props));
};
/* istanbul ignore next */
cov_ymwrurw2e().s[33]++;
exports.mockImage = mockImage;
// Default export for Jest moduleNameMapper (image files are imported as default)
/* istanbul ignore next */
cov_ymwrurw2e().s[34]++;
exports.default = exports.mockImage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiY292X3ltd3J1cncyZSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwibW9ja0ltYWdlIiwiX2EiLCJmIiwiYWx0IiwicHJvcHMiLCJfX3Jlc3QiLCJqc3hfcnVudGltZV8xIiwianN4IiwiX19hc3NpZ24iLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3NoYXJlZC90ZXN0aW5nL21vY2tzL2Fzc2V0cy9jb21wb25lbnRzL0ltYWdlLm1vY2sudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb2NrSW1hZ2VQcm9wc0ludGVyZmFjZSB9IGZyb20gJy4uL3R5cGVzL3R5cGVzJztcblxuLyoqXG4gKiBNb2NrIEltYWdlIGNvbXBvbmVudCBmb3IgdGVzdGluZ1xuICogUmVwbGFjZXMgTmV4dC5qcyBJbWFnZSBjb21wb25lbnQgaW4gdGVzdHNcbiAqL1xuZXhwb3J0IGNvbnN0IG1vY2tJbWFnZTogUmVhY3QuRkM8bW9ja0ltYWdlUHJvcHNJbnRlcmZhY2U+ID0gKHsgYWx0LCAuLi5wcm9wcyB9KSA9PiB7XG4gIHJldHVybiA8aW1nIGFsdD17YWx0fSB7Li4ucHJvcHN9IC8+O1xufTtcblxuLy8gRGVmYXVsdCBleHBvcnQgZm9yIEplc3QgbW9kdWxlTmFtZU1hcHBlciAoaW1hZ2UgZmlsZXMgYXJlIGltcG9ydGVkIGFzIGRlZmF1bHQpXG5leHBvcnQgZGVmYXVsdCBtb2NrSW1hZ2U7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBO0FBQUE7QUFBQSxDQUFBQyxhQUFBLEdBQUFDLENBQUEsUUFBQUMsZUFBQSxDQUFBQyxPQUFBO0FBR0E7Ozs7QUFBQTtBQUFBSCxhQUFBLEdBQUFDLENBQUE7QUFJTyxJQUFNRyxTQUFTLEdBQXNDLFNBQUFBLENBQUNDLEVBQWlCO0VBQUE7RUFBQUwsYUFBQSxHQUFBTSxDQUFBO0VBQWYsSUFBQUMsR0FBRztJQUFBO0lBQUEsQ0FBQVAsYUFBQSxHQUFBQyxDQUFBLFFBQUFJLEVBQUEsQ0FBQUUsR0FBQTtJQUFLQyxLQUFLO0lBQUE7SUFBQSxDQUFBUixhQUFBLEdBQUFDLENBQUEsUUFBQVEsTUFBQSxDQUFBSixFQUFBLEVBQWYsT0FBaUIsQ0FBRjtFQUFBO0VBQUFMLGFBQUEsR0FBQUMsQ0FBQTtFQUMxRSxPQUFPLElBQUFTLGFBQUEsQ0FBQUMsR0FBQSxTQUFBQyxRQUFBO0lBQUtMLEdBQUcsRUFBRUE7RUFBRyxHQUFNQyxLQUFLLEVBQUk7QUFDckMsQ0FBQztBQUFDO0FBQUFSLGFBQUEsR0FBQUMsQ0FBQTtBQUZXWSxPQUFBLENBQUFULFNBQVMsR0FBQUEsU0FBQTtBQUl0QjtBQUFBO0FBQUFKLGFBQUEsR0FBQUMsQ0FBQTtBQUNBWSxPQUFBLENBQUFDLE9BQUEsR0FBZUQsT0FBQSxDQUFBVCxTQUFTIiwiaWdub3JlTGlzdCI6W119