{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/critical-css/critical-css.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/critical-css/critical-css.ts"],"sourcesContent":["/**\n * Critical CSS Utilities\n *\n * Critical CSS extraction and inlining for maximum performance.\n * Built on top of existing performance monitoring infrastructure.\n */\n\nimport type {\n  CriticalCSSConfig,\n  CriticalCSSResult,\n  PerformanceMetric,\n} from '../../types/performance.types';\nimport { NonCriticalStrategy, PerformanceRating } from '../../types/performance.enums';\nimport { performanceMonitor } from '../performance-monitor';\n\n// ============================================================================\n// DEFAULT CONFIGURATION\n// ============================================================================\n\nconst DEFAULT_CONFIG: CriticalCSSConfig = {\n  extract: true,\n  inline: true,\n  selector: 'body',\n  nonCriticalStrategy: NonCriticalStrategy.ASYNC,\n};\n\n// ============================================================================\n// CRITICAL CSS UTILITIES\n// ============================================================================\n\n/**\n * Extract critical CSS from stylesheet\n */\nexport function extractCriticalCSS(\n  cssContent: string,\n  _selector: string = 'body'\n): { critical: string; nonCritical: string } {\n  const startTime = performance.now();\n\n  try {\n    // Simple critical CSS extraction based on selectors\n    // In a real implementation, you'd use a library like critical\n    const criticalSelectors = [\n      'html',\n      'body',\n      'head',\n      'main',\n      'header',\n      'footer',\n      'nav',\n      '.container',\n      '.wrapper',\n      '.content',\n      '.hero',\n      '.banner',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'p',\n      'a',\n      'button',\n      '.btn',\n      '.card',\n      '.grid',\n      '.flex',\n      '.hidden',\n      '.visible',\n      '.text-',\n      '.bg-',\n      '.border-',\n      '.p-',\n      '.m-',\n      '.w-',\n      '.h-',\n    ];\n\n    const lines = cssContent.split('\\n');\n    const criticalLines: string[] = [];\n    const nonCriticalLines: string[] = [];\n\n    let inCriticalBlock = false;\n    let braceCount = 0;\n\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n\n      // Check if line contains critical selectors\n      const isCritical = criticalSelectors.some(\n        (selector) =>\n          trimmedLine.includes(selector) ||\n          trimmedLine.startsWith('@media') ||\n          trimmedLine.startsWith('@keyframes') ||\n          trimmedLine.startsWith('@font-face')\n      );\n\n      if (isCritical) {\n        inCriticalBlock = true;\n        criticalLines.push(line);\n      } else if (inCriticalBlock) {\n        if (trimmedLine.includes('{')) {\n          braceCount++;\n        }\n        if (trimmedLine.includes('}')) {\n          braceCount--;\n          if (braceCount === 0) {\n            inCriticalBlock = false;\n          }\n        }\n        criticalLines.push(line);\n      } else {\n        nonCriticalLines.push(line);\n      }\n    }\n\n    const critical = criticalLines.join('\\n');\n    const nonCritical = nonCriticalLines.join('\\n');\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'critical_css_extraction',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 50 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return { critical, nonCritical };\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'critical_css_extraction_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return { critical: '', nonCritical: cssContent };\n  }\n}\n\n/**\n * Inline critical CSS in HTML\n */\nexport function inlineCriticalCSS(html: string, criticalCSS: string): string {\n  const startTime = performance.now();\n\n  try {\n    // Find the head tag and insert critical CSS\n    const headRegex = /<head[^>]*>/i;\n    const headMatch = html.match(headRegex);\n\n    if (headMatch) {\n      const criticalStyle = `<style id=\"critical-css\">${criticalCSS}</style>`;\n      const htmlWithCritical = html.replace(headMatch[0], `${headMatch[0]}\\n${criticalStyle}`);\n\n      // Track performance metric\n      const endTime = performance.now();\n      performanceMonitor.addMetric({\n        name: 'critical_css_inlining',\n        value: endTime - startTime,\n        timestamp: Date.now(),\n        rating:\n          endTime - startTime < 10 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n      });\n\n      return htmlWithCritical;\n    }\n\n    return html;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'critical_css_inlining_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return html;\n  }\n}\n\n/**\n * Load non-critical CSS asynchronously\n */\nexport function loadNonCriticalCSS(\n  cssUrl: string,\n  strategy: NonCriticalStrategy = NonCriticalStrategy.ASYNC\n): void {\n  const startTime = performance.now();\n\n  try {\n    if (typeof window === 'undefined') return;\n\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = cssUrl;\n\n    switch (strategy) {\n      case NonCriticalStrategy.ASYNC:\n        link.setAttribute('media', 'print');\n        link.setAttribute('onload', \"this.media='all'\");\n        break;\n      case NonCriticalStrategy.DEFER:\n        link.setAttribute('defer', '');\n        break;\n      case NonCriticalStrategy.LAZY:\n        link.setAttribute('media', 'print');\n        link.setAttribute('onload', \"this.media='all'\");\n        link.setAttribute('importance', 'low');\n        break;\n    }\n\n    document.head.appendChild(link);\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'non_critical_css_loading',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 5 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'non_critical_css_loading_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n  }\n}\n\n/**\n * Process critical CSS with full pipeline\n */\nexport function processCriticalCSS(\n  cssContent: string,\n  html: string,\n  config: CriticalCSSConfig = {}\n): CriticalCSSResult {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n  const startTime = performance.now();\n\n  try {\n    let result: CriticalCSSResult;\n\n    if (finalConfig.extract) {\n      const { critical, nonCritical } = extractCriticalCSS(cssContent, finalConfig.selector);\n\n      if (finalConfig.inline && critical) {\n        inlineCriticalCSS(html, critical);\n      }\n\n      result = {\n        critical,\n        nonCritical,\n        size: cssContent.length,\n        criticalRatio: critical.length / cssContent.length,\n      };\n    } else {\n      result = {\n        critical: cssContent,\n        nonCritical: '',\n        size: cssContent.length,\n        criticalRatio: 1,\n      };\n    }\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'critical_css_processing',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 100 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return result;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'critical_css_processing_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return {\n      critical: '',\n      nonCritical: cssContent,\n      size: cssContent.length,\n      criticalRatio: 0,\n    };\n  }\n}\n\n/**\n * Generate critical CSS for above-the-fold content\n */\nexport function generateAboveTheFoldCSS(cssContent: string, _viewportHeight: number = 800): string {\n  const startTime = performance.now();\n\n  try {\n    // Extract CSS rules that affect above-the-fold content\n    const aboveTheFoldSelectors = [\n      'html',\n      'body',\n      'head',\n      'main',\n      'header',\n      'nav',\n      '.hero',\n      '.banner',\n      '.above-fold',\n      '.top-section',\n      'h1',\n      'h2',\n      'h3',\n      'p',\n      'a',\n      'button',\n      '.btn',\n      '.card',\n      '.grid',\n      '.flex',\n      '.text-',\n      '.bg-',\n      '.border-',\n      '.p-',\n      '.m-',\n      '.w-',\n      '.h-',\n      '.hidden',\n      '.visible',\n    ];\n\n    const lines = cssContent.split('\\n');\n    const criticalLines: string[] = [];\n\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n\n      const isAboveTheFold = aboveTheFoldSelectors.some(\n        (selector) =>\n          trimmedLine.includes(selector) ||\n          trimmedLine.startsWith('@media') ||\n          trimmedLine.startsWith('@keyframes') ||\n          trimmedLine.startsWith('@font-face')\n      );\n\n      if (isAboveTheFold) {\n        criticalLines.push(line);\n      }\n    }\n\n    const critical = criticalLines.join('\\n');\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'above_the_fold_css_generation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 30 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return critical;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'above_the_fold_css_generation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return '';\n  }\n}\n\n/**\n * Get critical CSS performance metrics\n */\nexport function getCriticalCSSMetrics(): PerformanceMetric[] {\n  return performanceMonitor\n    .getMetricsByName('critical_css_extraction')\n    .concat(performanceMonitor.getMetricsByName('critical_css_inlining'))\n    .concat(performanceMonitor.getMetricsByName('non_critical_css_loading'))\n    .concat(performanceMonitor.getMetricsByName('critical_css_processing'))\n    .concat(performanceMonitor.getMetricsByName('above_the_fold_css_generation'));\n}\n"],"version":3}