{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/location/windowLocationReload.mock.ts","mappings":";;;;;;;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;GAoBG;AAEH;;;;GAIG;AACI,IAAM,wBAAwB,GAAyB;IAC5D,IAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;IAE7B,iDAAiD;IACjD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;QACxC,KAAK,wBACA,MAAM,CAAC,QAAQ,KAClB,MAAM,EAAE,UAAU,GACnB;QACD,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAbW,QAAA,wBAAwB,4BAanC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/location/windowLocationReload.mock.ts"],"sourcesContent":["// Local type definition (moved from error types that was cleaned up)\ntype mockWindowReloadType = () => jest.Mock;\n\n/**\n * WindowLocationReload.mock.ts\n *\n * This provides mock implementation for window.location.reload to prevent actual page reloads in tests.\n *\n * @usage\n * - Use mockWindowLocationReload when you need to test reload behavior without triggering a real page reload.\n * - Returns a Jest mock function that can be spied on to verify reload calls.\n *\n * @safety\n * This mock prevents accidental page reloads during testing that would interrupt the test suite.\n *\n * @example\n * ```typescript\n * import { mockWindowLocationReload } from '@jestmocks/browser';\n *\n * const mockReload = mockWindowLocationReload();\n * // ... trigger action that should reload\n * expect(mockReload).toHaveBeenCalled();\n * ```\n */\n\n/**\n * Creates a mock for window.location.reload\n *\n * @returns Mock function that replaces window.location.reload\n */\nexport const mockWindowLocationReload: mockWindowReloadType = () => {\n  const mockReload = jest.fn();\n\n  // Replace the actual reload method with our mock\n  Object.defineProperty(window, 'location', {\n    value: {\n      ...window.location,\n      reload: mockReload,\n    },\n    writable: true,\n  });\n\n  return mockReload;\n};\n"],"version":3}