6a0310c7ea6a3bf0168e871710f6dad7
"use strict";
/**
 * Security-related type definitions
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecuritySeverity = exports.SecurityEventType = exports.Permission = exports.UserRole = void 0;
var UserRole;
(function (UserRole) {
    UserRole["ADMIN"] = "admin";
    UserRole["USER"] = "user";
    UserRole["MODERATOR"] = "moderator";
    UserRole["GUEST"] = "guest";
})(UserRole || (exports.UserRole = UserRole = {}));
var Permission;
(function (Permission) {
    // User permissions
    Permission["READ_USERS"] = "read:users";
    Permission["WRITE_USERS"] = "write:users";
    Permission["DELETE_USERS"] = "delete:users";
    // Content permissions
    Permission["READ_CONTENT"] = "read:content";
    Permission["WRITE_CONTENT"] = "write:content";
    Permission["DELETE_CONTENT"] = "delete:content";
    // System permissions
    Permission["READ_SYSTEM"] = "read:system";
    Permission["WRITE_SYSTEM"] = "write:system";
    Permission["ADMIN_SYSTEM"] = "admin:system";
})(Permission || (exports.Permission = Permission = {}));
// ============================================================================
// SECURITY EVENT TYPES
// ============================================================================
var SecurityEventType;
(function (SecurityEventType) {
    SecurityEventType["LOGIN_SUCCESS"] = "login_success";
    SecurityEventType["LOGIN_FAILED"] = "login_failed";
    SecurityEventType["LOGOUT"] = "logout";
    SecurityEventType["PASSWORD_CHANGE"] = "password_change";
    SecurityEventType["PERMISSION_DENIED"] = "permission_denied";
    SecurityEventType["SUSPICIOUS_ACTIVITY"] = "suspicious_activity";
    SecurityEventType["RATE_LIMIT_EXCEEDED"] = "rate_limit_exceeded";
    SecurityEventType["INVALID_TOKEN"] = "invalid_token";
    SecurityEventType["TOKEN_EXPIRED"] = "token_expired";
})(SecurityEventType || (exports.SecurityEventType = SecurityEventType = {}));
var SecuritySeverity;
(function (SecuritySeverity) {
    SecuritySeverity["LOW"] = "low";
    SecuritySeverity["MEDIUM"] = "medium";
    SecuritySeverity["HIGH"] = "high";
    SecuritySeverity["CRITICAL"] = "critical";
})(SecuritySeverity || (exports.SecuritySeverity = SecuritySeverity = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,