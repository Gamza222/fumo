{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/security/types/security.types.ts","mappings":";AAAA;;GAEG;;;AAmBH,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,2BAAe,CAAA;IACf,yBAAa,CAAA;IACb,mCAAuB,CAAA;IACvB,2BAAe,CAAA;AACjB,CAAC,EALW,QAAQ,wBAAR,QAAQ,QAKnB;AAED,IAAY,UAeX;AAfD,WAAY,UAAU;IACpB,mBAAmB;IACnB,uCAAyB,CAAA;IACzB,yCAA2B,CAAA;IAC3B,2CAA6B,CAAA;IAE7B,sBAAsB;IACtB,2CAA6B,CAAA;IAC7B,6CAA+B,CAAA;IAC/B,+CAAiC,CAAA;IAEjC,qBAAqB;IACrB,yCAA2B,CAAA;IAC3B,2CAA6B,CAAA;IAC7B,2CAA6B,CAAA;AAC/B,CAAC,EAfW,UAAU,0BAAV,UAAU,QAerB;AAsCD,+EAA+E;AAC/E,uBAAuB;AACvB,+EAA+E;AAE/E,IAAY,iBAUX;AAVD,WAAY,iBAAiB;IAC3B,oDAA+B,CAAA;IAC/B,kDAA6B,CAAA;IAC7B,sCAAiB,CAAA;IACjB,wDAAmC,CAAA;IACnC,4DAAuC,CAAA;IACvC,gEAA2C,CAAA;IAC3C,gEAA2C,CAAA;IAC3C,oDAA+B,CAAA;IAC/B,oDAA+B,CAAA;AACjC,CAAC,EAVW,iBAAiB,iCAAjB,iBAAiB,QAU5B;AAaD,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,+BAAW,CAAA;IACX,qCAAiB,CAAA;IACjB,iCAAa,CAAA;IACb,yCAAqB,CAAA;AACvB,CAAC,EALW,gBAAgB,gCAAhB,gBAAgB,QAK3B","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/security/types/security.types.ts"],"sourcesContent":["/**\n * Security-related type definitions\n */\n\n// ============================================================================\n// AUTHENTICATION TYPES\n// ============================================================================\n\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  password: string;\n  role: UserRole;\n  permissions: Permission[];\n  isActive: boolean;\n  lastLoginAt?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  USER = 'user',\n  MODERATOR = 'moderator',\n  GUEST = 'guest',\n}\n\nexport enum Permission {\n  // User permissions\n  READ_USERS = 'read:users',\n  WRITE_USERS = 'write:users',\n  DELETE_USERS = 'delete:users',\n\n  // Content permissions\n  READ_CONTENT = 'read:content',\n  WRITE_CONTENT = 'write:content',\n  DELETE_CONTENT = 'delete:content',\n\n  // System permissions\n  READ_SYSTEM = 'read:system',\n  WRITE_SYSTEM = 'write:system',\n  ADMIN_SYSTEM = 'admin:system',\n}\n\nexport interface AuthToken {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  tokenType: 'Bearer';\n}\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n}\n\nexport interface RegisterData {\n  email: string;\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\n// ============================================================================\n// AUTHORIZATION TYPES\n// ============================================================================\n\nexport interface AuthorizationContext {\n  user: User;\n  resource?: string;\n  action?: string;\n  resourceId?: string;\n}\n\nexport interface PermissionCheck {\n  hasPermission: boolean;\n  reason?: string;\n}\n\n// ============================================================================\n// SECURITY EVENT TYPES\n// ============================================================================\n\nexport enum SecurityEventType {\n  LOGIN_SUCCESS = 'login_success',\n  LOGIN_FAILED = 'login_failed',\n  LOGOUT = 'logout',\n  PASSWORD_CHANGE = 'password_change',\n  PERMISSION_DENIED = 'permission_denied',\n  SUSPICIOUS_ACTIVITY = 'suspicious_activity',\n  RATE_LIMIT_EXCEEDED = 'rate_limit_exceeded',\n  INVALID_TOKEN = 'invalid_token',\n  TOKEN_EXPIRED = 'token_expired',\n}\n\nexport interface SecurityEvent {\n  id: string;\n  type: SecurityEventType;\n  userId?: string;\n  ipAddress: string;\n  userAgent: string;\n  timestamp: Date;\n  details: Record<string, unknown>;\n  severity: SecuritySeverity;\n}\n\nexport enum SecuritySeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical',\n}\n\n// ============================================================================\n// RATE LIMITING TYPES\n// ============================================================================\n\nexport interface RateLimitInfo {\n  limit: number;\n  remaining: number;\n  reset: Date;\n  retryAfter?: number;\n}\n\nexport interface RateLimitConfig {\n  windowMs: number;\n  maxRequests: number;\n  keyGenerator?: (req: unknown) => string;\n  skipSuccessfulRequests?: boolean;\n  skipFailedRequests?: boolean;\n}\n\nexport interface SecurityConfig {\n  headers: SecurityHeaders;\n  cors: CorsConfig;\n  auth: AuthConfig;\n  rateLimit: RateLimitConfig;\n}\n\nexport interface CorsConfig {\n  origin: string | string[];\n  credentials: boolean;\n  methods: string[];\n  allowedHeaders: string[];\n  exposedHeaders: string[];\n  maxAge: number;\n}\n\nexport interface AuthConfig {\n  jwtSecret: string;\n  jwtExpiresIn: string;\n  refreshTokenExpiresIn: string;\n  passwordMinLength: number;\n  passwordRequireSpecialChars: boolean;\n  passwordRequireNumbers: boolean;\n  passwordRequireUppercase: boolean;\n  sessionTimeout: number;\n}\n\n// ============================================================================\n// CSP TYPES\n// ============================================================================\n\nexport interface CSPDirective {\n  name: string;\n  values: string[];\n}\n\nexport interface CSPViolation {\n  blockedURI: string;\n  documentURI: string;\n  effectiveDirective: string;\n  originalPolicy: string;\n  referrer: string;\n  violatedDirective: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n// ============================================================================\n// SECURITY HEADERS TYPES\n// ============================================================================\n\nexport interface SecurityHeaders {\n  'Content-Security-Policy'?: string;\n  'X-Frame-Options'?: string;\n  'X-Content-Type-Options'?: string;\n  'Referrer-Policy'?: string;\n  'Permissions-Policy'?: string;\n  'Strict-Transport-Security'?: string;\n  'X-XSS-Protection'?: string;\n  'Cross-Origin-Embedder-Policy'?: string;\n  'Cross-Origin-Opener-Policy'?: string;\n  'Cross-Origin-Resource-Policy'?: string;\n}\n\n// ============================================================================\n// ENCRYPTION TYPES\n// ============================================================================\n\nexport interface EncryptionConfig {\n  algorithm: string;\n  keyLength: number;\n  ivLength: number;\n  tagLength: number;\n}\n\nexport interface EncryptedData {\n  data: string;\n  iv: string;\n  tag: string;\n  algorithm: string;\n}\n"],"version":3}