7e008736412eaf25089b9dc53824e237
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
// ============================================================================
// TEST SETUP
// ============================================================================
// Mock the classNames utility
jest.mock("@/shared/lib/utils/classNames", function () { return ({
    classNames: function (base, mods, classes) {
        return __spreadArray([base], classes, true).filter(Boolean).join(" ");
    },
}); });
/**
 * InitialLoader Component Tests
 */
var react_1 = __importDefault(require("react"));
var react_2 = require("@testing-library/react");
var InitialLoader_1 = require("./InitialLoader");
var app_loading_1 = require("@/infrastructure/providers/app-loading");
// ============================================================================
// TEST UTILITIES
// ============================================================================
var renderWithProvider = function (props) {
    if (props === void 0) { props = {}; }
    return (0, react_2.render)((0, jsx_runtime_1.jsx)(app_loading_1.AppLoadingProvider, { children: (0, jsx_runtime_1.jsx)(InitialLoader_1.InitialLoader, __assign({}, props)) }));
};
// ============================================================================
// TESTS
// ============================================================================
describe("InitialLoader", function () {
    describe("Basic Rendering", function () {
        it("should render with default props", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        // Check for progress bar role
                        expect(react_2.screen.getByRole("progressbar")).toBeInTheDocument();
                        // Check for loading message
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText(/Loading/i)).toBeInTheDocument();
                            })];
                    case 1:
                        // Check for loading message
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should render with custom className", function () {
            var container = renderWithProvider({ className: "custom-loader" }).container;
            var loader = container.firstChild;
            expect(loader).toHaveClass("custom-loader");
        });
        it("should have correct ARIA attributes", function () {
            renderWithProvider();
            var progressBar = react_2.screen.getByRole("progressbar");
            expect(progressBar).toHaveAttribute("aria-label", "Loading application");
            expect(progressBar).toHaveAttribute("aria-valuemin", "0");
            expect(progressBar).toHaveAttribute("aria-valuemax", "100");
        });
    });
    describe("Progress Display", function () {
        it("should show progress percentage", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        // Wait for progress to be displayed
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText(/\d+%/)).toBeInTheDocument();
                            })];
                    case 1:
                        // Wait for progress to be displayed
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should show progress bar with correct width", function () { return __awaiter(void 0, void 0, void 0, function () {
            var container;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        container = renderWithProvider().container;
                        // Wait for progress bar to render
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                var progressBar = container.querySelector('div[style*="width:"]');
                                expect(progressBar).toBeInTheDocument();
                            })];
                    case 1:
                        // Wait for progress bar to render
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should hide percentage when showProgress is false", function () {
            renderWithProvider({ showProgress: false });
            // Should not show percentage text
            expect(react_2.screen.queryByText(/\d+%/)).not.toBeInTheDocument();
        });
    });
    describe("Message Display", function () {
        it("should show default loading message", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText(/Loading/i)).toBeInTheDocument();
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should show custom message when provided", function () {
            renderWithProvider({ loadingMessage: "Custom loading message" });
            expect(react_2.screen.getByText("Custom loading message")).toBeInTheDocument();
        });
        it("should show step details when enabled", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider({ showStepDetails: true });
                        // Should show some step information
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                var stepElement = react_2.screen.queryByText(/Loading|Ready|Complete/i);
                                expect(stepElement).toBeInTheDocument();
                            })];
                    case 1:
                        // Should show some step information
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Loading States", function () {
        it("should start with loading state", function () {
            renderWithProvider();
            expect(react_2.screen.getByRole("progressbar")).toBeInTheDocument();
            expect(react_2.screen.getByText(/Loading/i)).toBeInTheDocument();
        });
        it("should eventually complete loading", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        // Wait for loading to complete
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText("100%")).toBeInTheDocument();
                            }, { timeout: 5000 })];
                    case 1:
                        // Wait for loading to complete
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should show ready state when complete", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        // Wait for completion
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText("100%")).toBeInTheDocument();
                            }, { timeout: 5000 })];
                    case 1:
                        // Wait for completion
                        _a.sent();
                        // Should show ready message
                        expect(react_2.screen.getByText("Ready!")).toBeInTheDocument();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Animation States", function () {
        it("should handle fade out animation", function () { return __awaiter(void 0, void 0, void 0, function () {
            var container, loader;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        container = renderWithProvider().container;
                        // Wait for completion
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText("100%")).toBeInTheDocument();
                            }, { timeout: 5000 })];
                    case 1:
                        // Wait for completion
                        _a.sent();
                        loader = container.firstChild;
                        expect(loader).toHaveClass("fadeOut");
                        return [2 /*return*/];
                }
            });
        }); });
        it("should hide after fade out completes", function () { return __awaiter(void 0, void 0, void 0, function () {
            var container;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        container = renderWithProvider().container;
                        // Wait for completion and fade out
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.queryByRole("progressbar")).not.toBeInTheDocument();
                            }, { timeout: 6000 })];
                    case 1:
                        // Wait for completion and fade out
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Component Integration", function () {
        it("should integrate with ProgressBar component", function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider();
                        // Should have progress bar
                        expect(react_2.screen.getByRole("progressbar")).toBeInTheDocument();
                        // Should show progress
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText(/\d+%/)).toBeInTheDocument();
                            })];
                    case 1:
                        // Should show progress
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("should work with all props provided", function () { return __awaiter(void 0, void 0, void 0, function () {
            var container, loader;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        renderWithProvider({
                            showProgress: true,
                            showStepDetails: true,
                            loadingMessage: "Custom message",
                            className: "test-class",
                        });
                        // Check custom message
                        expect(react_2.screen.getByText("Custom message")).toBeInTheDocument();
                        // Check progress
                        return [4 /*yield*/, (0, react_2.waitFor)(function () {
                                expect(react_2.screen.getByText(/\d+%/)).toBeInTheDocument();
                            })];
                    case 1:
                        // Check progress
                        _a.sent();
                        container = renderWithProvider({ className: "test-class" }).container;
                        loader = container.firstChild;
                        expect(loader).toHaveClass("test-class");
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe("Error Handling", function () {
        it("should handle missing context gracefully", function () {
            // Render without provider to test error boundary
            expect(function () {
                (0, react_2.render)((0, jsx_runtime_1.jsx)(InitialLoader_1.InitialLoader, {}));
            }).toThrow("useAppLoadingContext must be used within an AppLoadingProvider");
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,