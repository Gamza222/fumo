{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/http-cache/http-cache.test.ts","mappings":";AAAA;;;;GAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYH,2BAA2B;AAC3B,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,cAAM,OAAA,CAAC;IACzC,kBAAkB,EAAE;QAClB,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE;QACpB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;KAC5B;CACF,CAAC,EALwC,CAKxC,CAAC,CAAC;AAhBJ,2CASsB;AAStB,QAAQ,CAAC,cAAc,EAAE;IACvB,IAAI,kBAAuB,CAAC;IAE5B,UAAU,CAAC;;;;;oBACT,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBACE,sFAAa,wBAAwB,QAAC;;oBAAjE,sBAAsB,GAAK,CAAA,SAAsC,CAAA,mBAA3C;oBAClD,kBAAkB,GAAG,sBAAsB,CAAC;;;;SAC7C,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE;QACrC,EAAE,CAAC,mDAAmD,EAAE;YACtD,IAAM,MAAM,GAAG;gBACb,MAAM,EAAE,IAAI;gBACZ,UAAU,EAAE,CAAC,QAAQ,CAAC;aACvB,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,uCAA0B,EAAC,MAAM,CAAC,CAAC;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACnC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE;YACvD,IAAM,MAAM,GAAG;gBACb,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,CAAC,QAAQ,CAAC;aACvB,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,uCAA0B,EAAC,MAAM,CAAC,CAAC;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE;YAC/B,IAAM,MAAM,GAAG,IAAA,uCAA0B,EAAC,EAAE,CAAC,CAAC;YAE9C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE;QAC7B,EAAE,CAAC,yCAAyC,EAAE;YAC5C,IAAM,OAAO,GAAG,eAAe,CAAC;YAEhC,IAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,OAAO,CAAC,CAAC;YAE3C,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACxC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE;YACrD,IAAM,OAAO,GAAG,eAAe,CAAC;YAEhC,IAAM,OAAO,GAAG,IAAA,+BAAkB,EAAC,OAAO,CAAC,CAAC;YAC5C,IAAM,OAAO,GAAG,IAAA,+BAAkB,EAAC,OAAO,CAAC,CAAC;YAE5C,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE;YACzD,IAAM,QAAQ,GAAG,eAAe,CAAC;YACjC,IAAM,QAAQ,GAAG,kBAAkB,CAAC;YAEpC,IAAM,OAAO,GAAG,IAAA,+BAAkB,EAAC,QAAQ,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,IAAA,+BAAkB,EAAC,QAAQ,CAAC,CAAC;YAE7C,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE;QACrC,EAAE,CAAC,+CAA+C,EAAE;YAClD,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAE9C,IAAM,MAAM,GAAG,IAAA,uCAA0B,EAAC,IAAI,CAAC,CAAC;YAEhD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YACrD,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE;YAC9C,IAAM,MAAM,GAAG,IAAA,uCAA0B,GAAE,CAAC;YAE5C,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,8DAA8D,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE;QAC3B,EAAE,CAAC,oDAAoD,EAAE;YACvD,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,QAAQ,CAAC,CAAC;YAE1C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxD,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,uBAAuB;gBAC7B,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE;YACzD,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,SAAS,CAAC,CAAC;YAE3C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE;YACjD,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,KAAK,CAAC,CAAC;YAEvC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE;QAC/B,EAAE,CAAC,4CAA4C,EAAE;YAC/C,IAAM,OAAO,GAAG,eAAe,CAAC;YAChC,IAAM,YAAY,GAAG,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAEtD,IAAM,MAAM,GAAG,IAAA,iCAAoB,EAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;YAErE,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAC9D,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YACtE,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE;YAC5C,IAAM,OAAO,GAAG,eAAe,CAAC;YAEhC,IAAM,MAAM,GAAG,IAAA,iCAAoB,EAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEvD,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAC9D,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CACrC,8DAA8D,CAC/D,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE;QAC7B,EAAE,CAAC,qCAAqC,EAAE;YACxC,IAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAE9C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE;YAC1D,IAAM,OAAO,GAAG;gBACd,eAAe,EAAE,UAAU;aAC5B,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE;YAC1D,IAAM,OAAO,GAAG;gBACd,MAAM,EAAE,UAAU;aACnB,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE;QAC3B,EAAE,CAAC,wCAAwC,EAAE;YAC3C,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;YAE/D,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAChD,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACvD,MAAM,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,sBAAsB;gBAC5B,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,MAAM;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE;YACjD,IAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE,QAAQ;aACjB,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,QAAQ,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;YAE5E,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;YACtD,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE;YAC9C,IAAM,WAAW,GAAG;gBAClB,CAAC,EAAE,QAAQ;gBACX,CAAC,EAAE,QAAQ;gBACX,CAAC,EAAE,QAAQ;aACZ,CAAC;YAEF,IAAM,MAAM,GAAG,IAAA,6BAAgB,EAAC,QAAQ,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;YAE5E,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACrC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACrC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE;QAC1B,EAAE,CAAC,6BAA6B,EAAE;YAChC,IAAM,WAAW,GAAG;gBAClB,EAAE,IAAI,EAAE,0BAA0B,EAAE,KAAK,EAAE,EAAE,EAAE;gBAC/C,EAAE,IAAI,EAAE,iBAAiB,EAAE,KAAK,EAAE,CAAC,EAAE;aACtC,CAAC;YAED,kBAAkB,CAAC,gBAA8B,CAAC,kBAAkB,CAAC,UAAC,IAAI;gBACzE,OAAO,WAAW,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,IAAI,KAAK,IAAI,EAApB,CAAoB,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,IAAM,MAAM,GAAG,IAAA,4BAAe,GAAE,CAAC;YAEjC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,0BAA0B,CAAC,CAAC;YAC7F,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/http-cache/http-cache.test.ts"],"sourcesContent":["/**\n * HTTP Caching Tests\n *\n * Comprehensive tests for HTTP caching utilities.\n */\n\nimport {\n  generateCacheControlHeader,\n  generateCacheHeaders,\n  generateCacheKey,\n  generateETagHeader,\n  generateLastModifiedHeader,\n  getCacheMetrics,\n  getCacheStrategy,\n  isCacheableRequest,\n} from './http-cache';\n// Mock performance monitor\njest.mock('../performance-monitor', () => ({\n  performanceMonitor: {\n    addMetric: jest.fn(),\n    getMetricsByName: jest.fn(),\n  },\n}));\n\ndescribe('HTTP Caching', () => {\n  let performanceMonitor: any;\n\n  beforeEach(async () => {\n    jest.clearAllMocks();\n    jest.spyOn(performance, 'now').mockReturnValue(1000);\n    const { performanceMonitor: mockPerformanceMonitor } = await import('../performance-monitor');\n    performanceMonitor = mockPerformanceMonitor;\n  });\n\n  describe('generateCacheControlHeader', () => {\n    it('should generate Cache-Control header with max-age', () => {\n      const config = {\n        maxAge: 3600,\n        directives: ['public'],\n      };\n\n      const result = generateCacheControlHeader(config);\n\n      expect(result).toContain('max-age=3600');\n      expect(result).toContain('public');\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'cache_control_generation',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should generate Cache-Control header with s-maxage', () => {\n      const config = {\n        maxAge: 3600,\n        sMaxAge: 7200,\n        directives: ['public'],\n      };\n\n      const result = generateCacheControlHeader(config);\n\n      expect(result).toContain('max-age=3600');\n      expect(result).toContain('s-maxage=7200');\n      expect(result).toContain('public');\n    });\n\n    it('should handle empty config', () => {\n      const result = generateCacheControlHeader({});\n\n      expect(result).toBe('');\n    });\n  });\n\n  describe('generateETagHeader', () => {\n    it('should generate ETag header for content', () => {\n      const content = 'Hello, World!';\n\n      const result = generateETagHeader(content);\n\n      expect(result).toMatch(/^\"[a-f0-9]+\"$/);\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'etag_generation',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should generate consistent ETag for same content', () => {\n      const content = 'Hello, World!';\n\n      const result1 = generateETagHeader(content);\n      const result2 = generateETagHeader(content);\n\n      expect(result1).toBe(result2);\n    });\n\n    it('should generate different ETag for different content', () => {\n      const content1 = 'Hello, World!';\n      const content2 = 'Hello, Universe!';\n\n      const result1 = generateETagHeader(content1);\n      const result2 = generateETagHeader(content2);\n\n      expect(result1).not.toBe(result2);\n    });\n  });\n\n  describe('generateLastModifiedHeader', () => {\n    it('should generate Last-Modified header for date', () => {\n      const date = new Date('2024-01-01T00:00:00Z');\n\n      const result = generateLastModifiedHeader(date);\n\n      expect(result).toBe('Mon, 01 Jan 2024 00:00:00 GMT');\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'last_modified_generation',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should use current date when not provided', () => {\n      const result = generateLastModifiedHeader();\n\n      expect(result).toMatch(/^[A-Za-z]{3}, \\d{2} [A-Za-z]{3} \\d{4} \\d{2}:\\d{2}:\\d{2} GMT$/);\n    });\n  });\n\n  describe('getCacheStrategy', () => {\n    it('should return static strategy for static resources', () => {\n      const result = getCacheStrategy('static');\n\n      expect(result.type).toBe('static');\n      expect(result.config.maxAge).toBe(31536000);\n      expect(result.config.directives).toContain('immutable');\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'cache_strategy_lookup',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should return dynamic strategy for unknown resources', () => {\n      const result = getCacheStrategy('unknown');\n\n      expect(result.type).toBe('dynamic');\n      expect(result.config.maxAge).toBe(3600);\n    });\n\n    it('should return api strategy for api resources', () => {\n      const result = getCacheStrategy('api');\n\n      expect(result.type).toBe('api');\n      expect(result.config.maxAge).toBe(300);\n      expect(result.config.lastModified).toBe(false);\n    });\n  });\n\n  describe('generateCacheHeaders', () => {\n    it('should generate cache headers for resource', () => {\n      const content = 'Hello, World!';\n      const lastModified = new Date('2024-01-01T00:00:00Z');\n\n      const result = generateCacheHeaders('static', content, lastModified);\n\n      expect(result['Cache-Control']).toContain('max-age=31536000');\n      expect(result['Cache-Control']).toContain('immutable');\n      expect(result['ETag']).toMatch(/^\"[a-f0-9]+\"$/);\n      expect(result['Last-Modified']).toBe('Mon, 01 Jan 2024 00:00:00 GMT');\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'cache_headers_generation',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should handle missing lastModified date', () => {\n      const content = 'Hello, World!';\n\n      const result = generateCacheHeaders('static', content);\n\n      expect(result['Cache-Control']).toContain('max-age=31536000');\n      expect(result['ETag']).toMatch(/^\"[a-f0-9]+\"$/);\n      expect(result['Last-Modified']).toMatch(\n        /^[A-Za-z]{3}, \\d{2} [A-Za-z]{3} \\d{4} \\d{2}:\\d{2}:\\d{2} GMT$/\n      );\n    });\n  });\n\n  describe('isCacheableRequest', () => {\n    it('should return true for GET requests', () => {\n      const result = isCacheableRequest('GET', {});\n\n      expect(result).toBe(true);\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'cacheability_check',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should return false for non-GET requests', () => {\n      const result = isCacheableRequest('POST', {});\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false for requests with no-cache header', () => {\n      const headers = {\n        'cache-control': 'no-cache',\n      };\n\n      const result = isCacheableRequest('GET', headers);\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false for requests with pragma no-cache', () => {\n      const headers = {\n        pragma: 'no-cache',\n      };\n\n      const result = isCacheableRequest('GET', headers);\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('generateCacheKey', () => {\n    it('should generate cache key for resource', () => {\n      const result = generateCacheKey('static', '/path/to/resource');\n\n      expect(result).toBe('static-/path/to/resource');\n      expect(performanceMonitor.addMetric).toHaveBeenCalledWith(\n        expect.objectContaining({\n          name: 'cache_key_generation',\n          value: 0,\n          rating: 'good',\n        })\n      );\n    });\n\n    it('should include query parameters in cache key', () => {\n      const queryParams = {\n        param1: 'value1',\n        param2: 'value2',\n      };\n\n      const result = generateCacheKey('static', '/path/to/resource', queryParams);\n\n      expect(result).toContain('static-/path/to/resource?');\n      expect(result).toContain('param1=value1');\n      expect(result).toContain('param2=value2');\n    });\n\n    it('should sort query parameters consistently', () => {\n      const queryParams = {\n        z: 'value3',\n        a: 'value1',\n        m: 'value2',\n      };\n\n      const result = generateCacheKey('static', '/path/to/resource', queryParams);\n\n      expect(result).toContain('a=value1');\n      expect(result).toContain('m=value2');\n      expect(result).toContain('z=value3');\n    });\n  });\n\n  describe('getCacheMetrics', () => {\n    it('should return cache metrics', () => {\n      const mockMetrics = [\n        { name: 'cache_control_generation', value: 10 },\n        { name: 'etag_generation', value: 5 },\n      ];\n\n      (performanceMonitor.getMetricsByName as jest.Mock).mockImplementation((name) => {\n        return mockMetrics.filter((metric) => metric.name === name);\n      });\n\n      const result = getCacheMetrics();\n\n      expect(result).toHaveLength(2);\n      expect(performanceMonitor.getMetricsByName).toHaveBeenCalledWith('cache_control_generation');\n      expect(performanceMonitor.getMetricsByName).toHaveBeenCalledWith('etag_generation');\n    });\n  });\n});\n"],"version":3}