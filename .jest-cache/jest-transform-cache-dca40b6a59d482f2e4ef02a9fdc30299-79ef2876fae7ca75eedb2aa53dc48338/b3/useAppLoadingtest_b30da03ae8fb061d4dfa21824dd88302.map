{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoading/useAppLoading.test.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/app-loading/hooks/useAppLoading/useAppLoading.test.ts"],"sourcesContent":["/**\n * useAppLoading Hook Tests\n */\n\nimport { renderHook, act, waitFor } from \"@testing-library/react\";\nimport { useAppLoading } from \"./useAppLoading\";\n\n// Mock setup for DOM APIs\nconst mockPerformance = {\n  now: jest.fn(() => 1000),\n};\n\nconst mockQuerySelectorAll = jest.fn(() => []);\nconst mockHasAttribute = jest.fn(() => true);\nconst mockClassListContains = jest.fn(() => true);\n\n// Setup mocks\nObject.defineProperty(window, \"performance\", {\n  value: mockPerformance,\n  writable: true,\n});\n\nObject.defineProperty(document, \"readyState\", {\n  get: () => \"complete\",\n  configurable: true,\n});\n\nObject.defineProperty(document, \"querySelectorAll\", {\n  value: mockQuerySelectorAll,\n  writable: true,\n});\n\nObject.defineProperty(document.documentElement, \"hasAttribute\", {\n  value: mockHasAttribute,\n});\n\nObject.defineProperty(document.documentElement, \"classList\", {\n  value: { contains: mockClassListContains },\n});\n\nObject.defineProperty(document.body, \"classList\", {\n  value: { contains: mockClassListContains },\n});\n\nObject.defineProperty(window, \"setTimeout\", {\n  value: jest.fn((callback) => {\n    callback();\n    return 1;\n  }),\n  writable: true,\n});\n\ndescribe(\"useAppLoading\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockPerformance.now.mockReturnValue(1000);\n    mockQuerySelectorAll.mockReturnValue([]);\n    mockHasAttribute.mockReturnValue(true);\n    mockClassListContains.mockReturnValue(true);\n  });\n\n  describe(\"Initial State\", () => {\n    it(\"should start with loading state\", async () => {\n      const { result } = renderHook(() => useAppLoading());\n      \n      expect(result.current.isInitialLoading).toBe(true);\n      expect(result.current.isOverallLoading).toBe(true);\n      expect(result.current.isSuspenseLoading).toBe(false);\n      expect(result.current.progress).toBe(0);\n      \n      // Wait for the hook to initialize and set the first step\n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n      \n      expect(result.current.steps).toHaveLength(4);\n    });\n\n    it(\"should have correct function types\", () => {\n      const { result } = renderHook(() => useAppLoading());\n      \n      expect(typeof result.current.forceComplete).toBe(\"function\");\n      expect(typeof result.current.restart).toBe(\"function\");\n      expect(typeof result.current.setSuspenseLoading).toBe(\"function\");\n    });\n  });\n\n  describe(\"Force Complete\", () => {\n    it(\"should force complete immediately\", () => {\n      const { result } = renderHook(() => useAppLoading());\n\n      act(() => {\n        result.current.forceComplete();\n      });\n\n      expect(result.current.isInitialLoading).toBe(false);\n      expect(result.current.isOverallLoading).toBe(false);\n      expect(result.current.progress).toBe(100);\n      expect(result.current.currentStep).toBe(\"Ready\");\n    });\n  });\n\n  describe(\"Restart\", () => {\n    it(\"should restart loading state\", async () => {\n      const { result } = renderHook(() => useAppLoading());\n\n      // First complete it\n      act(() => {\n        result.current.forceComplete();\n      });\n      \n      expect(result.current.isInitialLoading).toBe(false);\n\n      // Then restart\n      act(() => {\n        result.current.restart();\n      });\n\n      expect(result.current.isInitialLoading).toBe(true);\n      expect(result.current.isOverallLoading).toBe(true);\n      expect(result.current.progress).toBe(0);\n      expect(result.current.steps).toHaveLength(4);\n      expect(result.current.isSuspenseLoading).toBe(false);\n      \n      // Wait for the first step to be set\n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n  });\n\n  describe(\"Suspense Loading\", () => {\n    it(\"should handle suspense loading state\", () => {\n      const { result } = renderHook(() => useAppLoading());\n\n      // Initially suspense is not loading\n      expect(result.current.isSuspenseLoading).toBe(false);\n      expect(result.current.isOverallLoading).toBe(true); // Because initial loading is true\n\n      // Set suspense loading to true\n      act(() => {\n        result.current.setSuspenseLoading(true);\n      });\n\n      expect(result.current.isSuspenseLoading).toBe(true);\n      expect(result.current.isOverallLoading).toBe(true); // Should still be true\n\n      // Set suspense loading to false\n      act(() => {\n        result.current.setSuspenseLoading(false);\n      });\n\n      expect(result.current.isSuspenseLoading).toBe(false);\n      expect(result.current.isOverallLoading).toBe(true); // Should still be true because initial loading is true\n    });\n\n    it(\"should compute isOverallLoading correctly\", () => {\n      const { result } = renderHook(() => useAppLoading());\n\n      // Both initial and suspense loading\n      act(() => {\n        result.current.setSuspenseLoading(true);\n      });\n      expect(result.current.isOverallLoading).toBe(true);\n\n      // Only initial loading\n      act(() => {\n        result.current.setSuspenseLoading(false);\n      });\n      expect(result.current.isOverallLoading).toBe(true);\n\n      // Force complete initial loading, only suspense\n      act(() => {\n        result.current.forceComplete();\n        result.current.setSuspenseLoading(true);\n      });\n      expect(result.current.isOverallLoading).toBe(true);\n\n      // Neither loading\n      act(() => {\n        result.current.setSuspenseLoading(false);\n      });\n      expect(result.current.isOverallLoading).toBe(false);\n    });\n  });\n\n  describe(\"Loading Steps\", () => {\n    it(\"should initialize steps correctly\", async () => {\n      const { result } = renderHook(() => useAppLoading());\n      \n      // Wait for steps to be initialized\n      await waitFor(() => {\n        expect(result.current.steps).toHaveLength(4);\n      });\n      \n      const expectedSteps = [\n        { id: \"dom-ready\", name: \"Preparing Application\", completed: false },\n        { id: \"critical-css\", name: \"Loading Styles\", completed: false },\n        { id: \"theme-initialized\", name: \"Applying Theme\", completed: false },\n        { id: \"core-javascript\", name: \"Loading Core Features\", completed: false },\n      ];\n\n      expectedSteps.forEach((expectedStep, index) => {\n        expect(result.current.steps[index].id).toBe(expectedStep.id);\n        expect(result.current.steps[index].name).toBe(expectedStep.name);\n        expect(result.current.steps[index].completed).toBe(expectedStep.completed);\n      });\n    });\n  });\n\n  describe(\"DOM Condition Checks\", () => {\n    it(\"should check DOM ready state correctly\", async () => {\n      // Mock document.readyState as complete\n      Object.defineProperty(document, \"readyState\", {\n        get: () => \"complete\",\n        configurable: true,\n      });\n\n      const { result } = renderHook(() => useAppLoading());\n      \n      // The hook should work without errors\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      // Wait for it to process\n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n\n    it(\"should check critical CSS correctly\", async () => {\n      // Mock no critical CSS sheets\n      mockQuerySelectorAll.mockReturnValue([]);\n      \n      const { result } = renderHook(() => useAppLoading());\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n\n    it(\"should check theme initialization correctly\", async () => {\n      // Mock theme attributes\n      mockHasAttribute.mockReturnValue(true);\n      mockClassListContains.mockReturnValue(true);\n      \n      const { result } = renderHook(() => useAppLoading());\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n\n    it(\"should check core JavaScript correctly\", async () => {\n      // Mock window and document ready state\n      Object.defineProperty(document, \"readyState\", {\n        get: () => \"complete\",\n        configurable: true,\n      });\n      \n      const { result } = renderHook(() => useAppLoading());\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n  });\n\n  describe(\"Error Handling\", () => {\n    it(\"should handle DOM API errors gracefully\", async () => {\n      // Mock querySelectorAll to throw error\n      mockQuerySelectorAll.mockImplementation(() => {\n        throw new Error(\"DOM error\");\n      });\n      \n      const { result } = renderHook(() => useAppLoading());\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      // Should still work despite the error\n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n  });\n\n  describe(\"Performance\", () => {\n    it(\"should not recreate conditions on every render\", async () => {\n      const { result, rerender } = renderHook(() => useAppLoading());\n      \n      // Wait for initial setup\n      await waitFor(() => {\n        expect(result.current.steps).toHaveLength(4);\n      });\n      \n      const initialSteps = result.current.steps;\n      \n      rerender();\n      \n      // Steps should be the same object (memoized)\n      expect(result.current.steps).toBe(initialSteps);\n    });\n\n    it(\"should handle performance.now correctly\", async () => {\n      mockPerformance.now\n        .mockReturnValueOnce(1000) // startTime\n        .mockReturnValueOnce(2200); // currentTime\n      \n      const { result } = renderHook(() => useAppLoading());\n      expect(result.current.isInitialLoading).toBe(true);\n      \n      await waitFor(() => {\n        expect(result.current.currentStep).toBe(\"Preparing Application\");\n      });\n    });\n  });\n});"],"version":3}