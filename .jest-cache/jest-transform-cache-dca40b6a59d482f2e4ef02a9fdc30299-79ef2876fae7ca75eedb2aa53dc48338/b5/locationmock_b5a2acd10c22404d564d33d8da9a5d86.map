{"version":3,"names":["mockLocation","initialUrl","cov_28yq91m2x4","f","b","s","url","URL","locationMock","__assign","assign","jest","fn","replace","reload","ancestorOrigins","_a","length","contains","item","Symbol","iterator","toString","pathname","href","origin","protocol","host","hostname","port","search","hash","Object","defineProperty","window","value","writable","exports"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/location/location.mock.ts"],"sourcesContent":["import { mockLocationInterface } from '../../types/types';\n\nconst mockLocation = (initialUrl: string = 'http://localhost/'): mockLocationInterface => {\n  const url = new URL(initialUrl);\n\n  const locationMock: mockLocationInterface = {\n    ...url,\n    assign: jest.fn(),\n    replace: jest.fn(),\n    reload: jest.fn(),\n    ancestorOrigins: {\n      length: 0,\n      contains: () => false,\n      item: () => null,\n      [Symbol.iterator]: jest.fn(),\n    },\n    toString: () => url.toString(),\n    // Ensure pathname is explicitly set\n    pathname: url.pathname,\n    href: url.href,\n    origin: url.origin,\n    protocol: url.protocol,\n    host: url.host,\n    hostname: url.hostname,\n    port: url.port,\n    search: url.search,\n    hash: url.hash,\n  };\n\n  // Allows properties to be modified in tests\n  Object.defineProperty(window, 'location', {\n    value: locationMock,\n    writable: true,\n  });\n\n  return locationMock;\n};\n\n// Initialize the global mock\nmockLocation();\n\nexport { mockLocation };\n"],"mappingswC;EAAA;EAAAC,cAAA,GAAAC,CAAA;;;;EAAxC,IAAAF,UAAA;IAAA;IAAAC,cAAA,GAAAE,CAAA;IAAAF,cAAA,GAAAG,CAAA;IAAAJ,UAAA,sBAAwC;EAAA;EAAA;EAAA;IAAAC,cAAA,GAAAE,CAAA;EAAA;EAC5D,IAAME,GAAG;EAAA;EAAA,CAAAJ,cAAA,GAAAG,CAAA,QAAG,IAAIE,GAAG,CAACN,UAAU,CAAC;EAE/B,IAAMO,YAAY;EAAA;EAAA,CAAAN,cAAA,GAAAG,CAAA,QAAAI,QAAA,CAAAA,QAAA,KACbH,GAAG;IACNI,MAAM,EAAEC,IAAI,CAACC,EAAE,EAAE;IACjBC,OAAO,EAAEF,IAAI,CAACC,EAAE,EAAE;IAClBE,MAAM,EAAEH,IAAI,CAACC,EAAE,EAAE;IACjBG,eAAe,GAAAC,EAAA;MACbC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,SAAAA,CAAA;QAAA;QAAAhB,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAG,CAAA;QAAM,YAAK;MAAL,CAAK;MACrBc,IAAI,EAAE,SAAAA,CAAA;QAAA;QAAAjB,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAG,CAAA;QAAM,WAAI;MAAJ;OACZW,EAAA,CAACI,MAAM,CAACC,QAAQ,IAAGV,IAAI,CAACC,EAAE,EAAE,E;IAE9BU,QAAQ,EAAE,SAAAA,CAAA;MAAA;MAAApB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAG,CAAA;MAAM,OAAAC,GAAG,CAACgB,QAAQ,EAAE;IAAd,CAAc;IAC9B;IACAC,QAAQ,EAAEjB,GAAG,CAACiB,QAAQ;IACtBC,IAAI,EAAElB,GAAG,CAACkB,IAAI;IACdC,MAAM,EAAEnB,GAAG,CAACmB,MAAM;IAClBC,QAAQ,EAAEpB,GAAG,CAACoB,QAAQ;IACtBC,IAAI,EAAErB,GAAG,CAACqB,IAAI;IACdC,QAAQ,EAAEtB,GAAG,CAACsB,QAAQ;IACtBC,IAAI,EAAEvB,GAAG,CAACuB,IAAI;IACdC,MAAM,EAAExB,GAAG,CAACwB,MAAM;IAClBC,IAAI,EAAEzB,GAAG,CAACyB;EAAI,EACf;EAED;EAAA;EAAA7B,cAAA,GAAAG,CAAA;EACA2B,MAAM,CAACC,cAAc,CAACC,MAAM,EAAE,UAAU,EAAE;IACxCC,KAAK,EAAE3B,YAAY;IACnB4B,QAAQ,EAAE;GACX,CAAC;EAAC;EAAAlC,cAAA,GAAAG,CAAA;EAEH,OAAOG,YAAY;AACrB,CAAC;AAAC;AAAAN,cAAA,GAAAG,CAAA;AAKOgC,OAAA,CAAArC,YAAA,GAAAA,YAAA;AAHT;AAAA;AAAAE,cAAA,GAAAG,CAAA;AACAL,YAAY,EAAE","ignoreList":[]}