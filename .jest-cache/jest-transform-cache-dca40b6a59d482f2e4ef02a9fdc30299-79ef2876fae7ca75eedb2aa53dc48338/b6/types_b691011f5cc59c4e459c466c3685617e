04a79b9d695547847bd32aa9459a2831
"use strict";
/**
 * Universal API Types
 *
 * Common interfaces and types that any enterprise application needs.
 * Foundation-level types only - no app-specific interfaces.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrimaryAuthTokenKey = exports.getAllAuthTokenKeys = exports.AuthTokenKey = exports.WebSocketState = exports.ConnectionState = void 0;
/**
 * WebSocket connection state
 */
var ConnectionState;
(function (ConnectionState) {
    ConnectionState["CONNECTING"] = "connecting";
    ConnectionState["CONNECTED"] = "connected";
    ConnectionState["DISCONNECTING"] = "disconnecting";
    ConnectionState["DISCONNECTED"] = "disconnected";
    ConnectionState["RECONNECTING"] = "reconnecting";
    ConnectionState["ERROR"] = "error";
})(ConnectionState || (exports.ConnectionState = ConnectionState = {}));
/**
 * WebSocket state enum
 */
var WebSocketState;
(function (WebSocketState) {
    WebSocketState["CONNECTING"] = "connecting";
    WebSocketState["CONNECTED"] = "connected";
    WebSocketState["DISCONNECTING"] = "disconnecting";
    WebSocketState["DISCONNECTED"] = "disconnected";
    WebSocketState["RECONNECTING"] = "reconnecting";
    WebSocketState["ERROR"] = "error";
})(WebSocketState || (exports.WebSocketState = WebSocketState = {}));
// ============================================================================
// AUTH TOKEN CONSTANTS
// ============================================================================
var authTokens_1 = require("./authTokens");
Object.defineProperty(exports, "AuthTokenKey", { enumerable: true, get: function () { return authTokens_1.AuthTokenKey; } });
Object.defineProperty(exports, "getAllAuthTokenKeys", { enumerable: true, get: function () { return authTokens_1.getAllAuthTokenKeys; } });
Object.defineProperty(exports, "getPrimaryAuthTokenKey", { enumerable: true, get: function () { return authTokens_1.getPrimaryAuthTokenKey; } });
// ============================================================================
// EXPORT ALL TYPES
// ============================================================================
// Types are already exported as interfaces above
//# sourceMappingURL=data:application/json;charset=utf-8;base64,