{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/production-config/production.config.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/production-config/production.config.ts"],"sourcesContent":["/**\n * Production Configuration\n *\n * Production-specific configuration and optimizations for maximum performance.\n * Built on top of existing performance monitoring infrastructure.\n */\n\nimport type { PerformanceMetric, ProductionConfig } from '../../types/performance.types';\nimport { PerformanceRating } from '../../types/performance.enums';\nimport { performanceMonitor } from '../performance-monitor';\n\n// ============================================================================\n// DEFAULT CONFIGURATION\n// ============================================================================\n\nconst DEFAULT_PRODUCTION_CONFIG: ProductionConfig = {\n  compression: true,\n  minification: true,\n  treeShaking: true,\n  codeSplitting: true,\n  bundleAnalyzer: false,\n  sourceMaps: false,\n};\n\n// ============================================================================\n// PRODUCTION CONFIGURATION UTILITIES\n// ============================================================================\n\n/**\n * Get production configuration based on environment\n */\nexport function getProductionConfig(): ProductionConfig {\n  const startTime = performance.now();\n\n  try {\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    // const isProduction = process.env.NODE_ENV === 'production';\n\n    const config: ProductionConfig = {\n      ...DEFAULT_PRODUCTION_CONFIG,\n      // Disable source maps in production\n      sourceMaps: isDevelopment,\n      // Enable bundle analyzer in development\n      bundleAnalyzer: isDevelopment,\n    };\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'production_config_generation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 1 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return config;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'production_config_generation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return DEFAULT_PRODUCTION_CONFIG;\n  }\n}\n\n/**\n * Generate Next.js production configuration\n */\nexport function generateNextJSConfig(config: ProductionConfig = {}): Record<string, unknown> {\n  const startTime = performance.now();\n\n  try {\n    const finalConfig = { ...DEFAULT_PRODUCTION_CONFIG, ...config };\n\n    const nextConfig: Record<string, unknown> = {\n      // Enable React strict mode\n      reactStrictMode: true,\n\n      // Disable powered by header\n      poweredByHeader: false,\n\n      // TypeScript configuration\n      typescript: {\n        ignoreBuildErrors: false,\n      },\n\n      // ESLint configuration\n      eslint: {\n        ignoreDuringBuilds: false,\n      },\n\n      // Image optimization\n      images: {\n        domains: [],\n        formats: ['image/webp', 'image/avif'],\n        minimumCacheTTL: 60,\n        dangerouslyAllowSVG: false,\n        contentSecurityPolicy: \"default-src 'self'; script-src 'none'; sandbox;\",\n      },\n\n      // Compression\n      compress: finalConfig.compression,\n\n      // Experimental features\n      experimental: {\n        optimizeCss: finalConfig.minification,\n        optimizePackageImports: finalConfig.treeShaking ? ['@/components', '@/lib'] : [],\n      },\n    };\n\n    // Add bundle analyzer if enabled\n    if (finalConfig.bundleAnalyzer) {\n      nextConfig.bundleAnalyzer = {\n        enabled: true,\n        openAnalyzer: false,\n      };\n    }\n\n    // Add source maps if enabled\n    if (finalConfig.sourceMaps) {\n      nextConfig.productionBrowserSourceMaps = true;\n    }\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'nextjs_config_generation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 10 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return nextConfig;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'nextjs_config_generation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return {\n      reactStrictMode: true,\n      poweredByHeader: false,\n    };\n  }\n}\n\n/**\n * Generate webpack production configuration\n */\nexport function generateWebpackConfig(config: ProductionConfig = {}): Record<string, unknown> {\n  const startTime = performance.now();\n\n  try {\n    const finalConfig = { ...DEFAULT_PRODUCTION_CONFIG, ...config };\n\n    const webpackConfig: Record<string, unknown> = {\n      // Optimization\n      optimization: {\n        minimize: finalConfig.minification,\n        splitChunks: finalConfig.codeSplitting\n          ? {\n              chunks: 'all',\n              cacheGroups: {\n                vendor: {\n                  test: /[\\\\/]node_modules[\\\\/]/,\n                  name: 'vendors',\n                  chunks: 'all',\n                },\n                common: {\n                  name: 'common',\n                  minChunks: 2,\n                  chunks: 'all',\n                  enforce: true,\n                },\n              },\n            }\n          : false,\n      },\n\n      // Performance hints\n      performance: {\n        hints: 'warning',\n        maxEntrypointSize: 250000,\n        maxAssetSize: 250000,\n      },\n    };\n\n    // Add tree shaking if enabled\n    if (finalConfig.treeShaking) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      (webpackConfig.optimization as any).usedExports = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      (webpackConfig.optimization as any).sideEffects = false;\n    }\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'webpack_config_generation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 5 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return webpackConfig;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'webpack_config_generation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return {\n      optimization: {\n        minimize: true,\n      },\n    };\n  }\n}\n\n/**\n * Generate environment-specific configuration\n */\nexport function generateEnvironmentConfig(\n  environment: 'development' | 'production' | 'test'\n): Record<string, unknown> {\n  const startTime = performance.now();\n\n  try {\n    const baseConfig = {\n      NODE_ENV: environment,\n      NEXT_PUBLIC_APP_ENV: environment,\n    };\n\n    const environmentConfigs: Record<string, Record<string, unknown>> = {\n      development: {\n        ...baseConfig,\n        NEXT_PUBLIC_DEBUG: 'true',\n        NEXT_PUBLIC_ANALYTICS: 'false',\n        NEXT_PUBLIC_SENTRY_DSN: '',\n      },\n      production: {\n        ...baseConfig,\n        NEXT_PUBLIC_DEBUG: 'false',\n        NEXT_PUBLIC_ANALYTICS: 'true',\n        NEXT_PUBLIC_SENTRY_DSN: process.env.NEXT_PUBLIC_SENTRY_DSN || '',\n      },\n      test: {\n        ...baseConfig,\n        NEXT_PUBLIC_DEBUG: 'false',\n        NEXT_PUBLIC_ANALYTICS: 'false',\n        NEXT_PUBLIC_SENTRY_DSN: '',\n      },\n    };\n\n    const config = environmentConfigs[environment] || environmentConfigs.development;\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'environment_config_generation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 1 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return config!;\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'environment_config_generation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return {\n      NODE_ENV: environment,\n      NEXT_PUBLIC_APP_ENV: environment,\n    };\n  }\n}\n\n/**\n * Validate production configuration\n */\nexport function validateProductionConfig(config: ProductionConfig): {\n  isValid: boolean;\n  errors: string[];\n} {\n  const startTime = performance.now();\n\n  try {\n    const errors: string[] = [];\n\n    // Validate compression\n    if (config.compression !== undefined && typeof config.compression !== 'boolean') {\n      errors.push('compression must be a boolean');\n    }\n\n    // Validate minification\n    if (config.minification !== undefined && typeof config.minification !== 'boolean') {\n      errors.push('minification must be a boolean');\n    }\n\n    // Validate tree shaking\n    if (config.treeShaking !== undefined && typeof config.treeShaking !== 'boolean') {\n      errors.push('treeShaking must be a boolean');\n    }\n\n    // Validate code splitting\n    if (config.codeSplitting !== undefined && typeof config.codeSplitting !== 'boolean') {\n      errors.push('codeSplitting must be a boolean');\n    }\n\n    // Validate bundle analyzer\n    if (config.bundleAnalyzer !== undefined && typeof config.bundleAnalyzer !== 'boolean') {\n      errors.push('bundleAnalyzer must be a boolean');\n    }\n\n    // Validate source maps\n    if (config.sourceMaps !== undefined && typeof config.sourceMaps !== 'boolean') {\n      errors.push('sourceMaps must be a boolean');\n    }\n\n    const isValid = errors.length === 0;\n\n    // Track performance metric\n    const endTime = performance.now();\n    performanceMonitor.addMetric({\n      name: 'production_config_validation',\n      value: endTime - startTime,\n      timestamp: Date.now(),\n      rating:\n        endTime - startTime < 5 ? PerformanceRating.GOOD : PerformanceRating.NEEDS_IMPROVEMENT,\n    });\n\n    return { isValid, errors };\n  } catch (error) {\n    performanceMonitor.addMetric({\n      name: 'production_config_validation_error',\n      value: 0,\n      timestamp: Date.now(),\n      rating: PerformanceRating.POOR,\n    });\n\n    return { isValid: false, errors: ['Validation error'] };\n  }\n}\n\n/**\n * Get production performance metrics\n */\nexport function getProductionMetrics(): PerformanceMetric[] {\n  return performanceMonitor\n    .getMetricsByName('production_config_generation')\n    .concat(performanceMonitor.getMetricsByName('nextjs_config_generation'))\n    .concat(performanceMonitor.getMetricsByName('webpack_config_generation'))\n    .concat(performanceMonitor.getMetricsByName('environment_config_generation'))\n    .concat(performanceMonitor.getMetricsByName('production_config_validation'));\n}\n"],"version":3}