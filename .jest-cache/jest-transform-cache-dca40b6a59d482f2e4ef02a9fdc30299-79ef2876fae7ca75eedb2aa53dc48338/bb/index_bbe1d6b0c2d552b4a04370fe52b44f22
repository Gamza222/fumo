d602e42b8ff8c84b267c2596146e7edc
"use strict";

/**
 * Next.js Mocks
 *
 * Type: ðŸ“¦ MANUAL
 *
 * This file exports all mocks for Next.js server components that need to be manually imported
 * and configured in tests.
 *
 * These are MANUAL mocks - they use named exports for functions that need to be imported
 * and controlled in tests.
 */
/* istanbul ignore next */
function cov_9gs0efslp() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/nextjs/index.ts";
  var hash = "b90de8bf2bdf8c225e204fb9294a46cf5d76cc81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/nextjs/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 190
        }
      },
      "2": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 137
        }
      },
      "4": {
        start: {
          line: 19,
          column: 89
        },
        end: {
          line: 19,
          column: 131
        }
      },
      "5": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 149
        }
      },
      "6": {
        start: {
          line: 20,
          column: 95
        },
        end: {
          line: 20,
          column: 143
        }
      },
      "7": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "8": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 140
        }
      },
      "9": {
        start: {
          line: 22,
          column: 90
        },
        end: {
          line: 22,
          column: 134
        }
      },
      "10": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 152
        }
      },
      "11": {
        start: {
          line: 23,
          column: 96
        },
        end: {
          line: 23,
          column: 146
        }
      },
      "12": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "13": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 142
        }
      },
      "14": {
        start: {
          line: 25,
          column: 95
        },
        end: {
          line: 25,
          column: 136
        }
      },
      "15": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 144
        }
      },
      "16": {
        start: {
          line: 26,
          column: 96
        },
        end: {
          line: 26,
          column: 138
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 75
          },
          end: {
            line: 19,
            column: 76
          }
        },
        loc: {
          start: {
            line: 19,
            column: 87
          },
          end: {
            line: 19,
            column: 133
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 81
          },
          end: {
            line: 20,
            column: 82
          }
        },
        loc: {
          start: {
            line: 20,
            column: 93
          },
          end: {
            line: 20,
            column: 145
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 76
          },
          end: {
            line: 22,
            column: 77
          }
        },
        loc: {
          start: {
            line: 22,
            column: 88
          },
          end: {
            line: 22,
            column: 136
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 82
          },
          end: {
            line: 23,
            column: 83
          }
        },
        loc: {
          start: {
            line: 23,
            column: 94
          },
          end: {
            line: 23,
            column: 148
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 81
          },
          end: {
            line: 25,
            column: 82
          }
        },
        loc: {
          start: {
            line: 25,
            column: 93
          },
          end: {
            line: 25,
            column: 138
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 82
          },
          end: {
            line: 26,
            column: 83
          }
        },
        loc: {
          start: {
            line: 26,
            column: 94
          },
          end: {
            line: 26,
            column: 140
          }
        },
        line: 26
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/nextjs/index.ts",
      mappings: ";AAAA;;;;;;;;;;GAUG;;;AAEH,+EAA+E;AAC/E,eAAe;AACf,+EAA+E;AAE/E,kEAAuF;AAA9E,mHAAA,eAAe,OAAA;AAAE,yHAAA,qBAAqB,OAAA;AAC/C,oEAA0F;AAAjF,qHAAA,gBAAgB,OAAA;AAAE,2HAAA,sBAAsB,OAAA;AACjD,gEAGsC;AAFpC,wHAAA,eAAe,OAAyB;AACxC,yHAAA,gBAAgB,OAA0B",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/nextjs/index.ts"],
      sourcesContent: ["/**\n * Next.js Mocks\n *\n * Type: \uD83D\uDCE6 MANUAL\n *\n * This file exports all mocks for Next.js server components that need to be manually imported\n * and configured in tests.\n *\n * These are MANUAL mocks - they use named exports for functions that need to be imported\n * and controlled in tests.\n */\n\n// ============================================================================\n// SERVER MOCKS\n// ============================================================================\n\nexport { MockNextRequest, createMockNextRequest } from './lib/server/nextRequest.mock';\nexport { MockNextResponse, createMockNextResponse } from './lib/server/nextResponse.mock';\nexport {\n  MockNextRequest as MockNextServerRequest,\n  MockNextResponse as MockNextServerResponse,\n} from './lib/server/nextServer.mock';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport type {\n  mockNextRequestInterface,\n  mockNextRequestOptionsInterface,\n  mockNextResponseInterface,\n  mockNextResponseOptionsInterface,\n  mockNextServerInterface,\n} from './types/types';\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b90de8bf2bdf8c225e204fb9294a46cf5d76cc81"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9gs0efslp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9gs0efslp();
cov_9gs0efslp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9gs0efslp().s[1]++;
exports.MockNextServerResponse = exports.MockNextServerRequest = exports.createMockNextResponse = exports.MockNextResponse = exports.createMockNextRequest = exports.MockNextRequest = void 0;
// ============================================================================
// SERVER MOCKS
// ============================================================================
var nextRequest_mock_1 =
/* istanbul ignore next */
(cov_9gs0efslp().s[2]++, require("./lib/server/nextRequest.mock"));
/* istanbul ignore next */
cov_9gs0efslp().s[3]++;
Object.defineProperty(exports, "MockNextRequest", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[0]++;
    cov_9gs0efslp().s[4]++;
    return nextRequest_mock_1.MockNextRequest;
  }
});
/* istanbul ignore next */
cov_9gs0efslp().s[5]++;
Object.defineProperty(exports, "createMockNextRequest", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[1]++;
    cov_9gs0efslp().s[6]++;
    return nextRequest_mock_1.createMockNextRequest;
  }
});
var nextResponse_mock_1 =
/* istanbul ignore next */
(cov_9gs0efslp().s[7]++, require("./lib/server/nextResponse.mock"));
/* istanbul ignore next */
cov_9gs0efslp().s[8]++;
Object.defineProperty(exports, "MockNextResponse", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[2]++;
    cov_9gs0efslp().s[9]++;
    return nextResponse_mock_1.MockNextResponse;
  }
});
/* istanbul ignore next */
cov_9gs0efslp().s[10]++;
Object.defineProperty(exports, "createMockNextResponse", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[3]++;
    cov_9gs0efslp().s[11]++;
    return nextResponse_mock_1.createMockNextResponse;
  }
});
var nextServer_mock_1 =
/* istanbul ignore next */
(cov_9gs0efslp().s[12]++, require("./lib/server/nextServer.mock"));
/* istanbul ignore next */
cov_9gs0efslp().s[13]++;
Object.defineProperty(exports, "MockNextServerRequest", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[4]++;
    cov_9gs0efslp().s[14]++;
    return nextServer_mock_1.MockNextRequest;
  }
});
/* istanbul ignore next */
cov_9gs0efslp().s[15]++;
Object.defineProperty(exports, "MockNextServerResponse", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9gs0efslp().f[5]++;
    cov_9gs0efslp().s[16]++;
    return nextServer_mock_1.MockNextResponse;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,