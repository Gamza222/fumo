{"file":"/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/ProgressBar/ui/ProgressBar.test.tsx"],"sourcesContent":["/**\n * ProgressBar Component Tests\n */\n\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport { ProgressBar } from \"./ProgressBar\";\n\n// ============================================================================\n// TEST SETUP\n// ============================================================================\n\n// Mock the shared Text component\njest.mock(\"@/shared/ui/Text\", () => ({\n  Text: ({\n    children,\n    className,\n  }: {\n    children: React.ReactNode;\n    className?: string;\n  }) => <span className={className}>{children}</span>,\n}));\n\n// Mock the classNames utility\njest.mock(\"@/shared/lib/utils/classNames\", () => ({\n  classNames: (base: string, mods: object, classes: string[]) => {\n    return [base, ...classes].filter(Boolean).join(\" \");\n  },\n}));\n\n// ============================================================================\n// TESTS\n// ============================================================================\n\ndescribe(\"ProgressBar\", () => {\n  it(\"should render with default props\", () => {\n    render(<ProgressBar progress={50} />);\n\n    expect(screen.getByText(\"50%\")).toBeInTheDocument();\n  });\n\n  it(\"should render with custom className\", () => {\n    const { container } = render(\n      <ProgressBar progress={25} className=\"custom-class\" />\n    );\n\n    const progressBar = container.firstChild as HTMLElement;\n    expect(progressBar).toHaveClass(\"custom-class\");\n  });\n\n  it(\"should render progress bar with correct width\", () => {\n    const { container } = render(<ProgressBar progress={75} />);\n\n    // Find the div with inline style (the bar)\n    const barElement = container.querySelector('div[style*=\"width: 75%\"]');\n    expect(barElement).toBeInTheDocument();\n  });\n\n  it(\"should show percentage when showPercentage is true\", () => {\n    render(<ProgressBar progress={33} showPercentage={true} />);\n\n    expect(screen.getByText(\"33%\")).toBeInTheDocument();\n  });\n\n  it(\"should hide percentage when showPercentage is false\", () => {\n    render(<ProgressBar progress={67} showPercentage={false} />);\n\n    expect(screen.queryByText(\"67%\")).not.toBeInTheDocument();\n  });\n\n  it(\"should round progress to nearest integer\", () => {\n    render(<ProgressBar progress={33.7} />);\n\n    expect(screen.getByText(\"34%\")).toBeInTheDocument();\n  });\n\n  it(\"should handle edge case of 0 progress\", () => {\n    const { container } = render(<ProgressBar progress={0} />);\n\n    expect(screen.getByText(\"0%\")).toBeInTheDocument();\n    const barElement = container.querySelector('div[style*=\"width: 0%\"]');\n    expect(barElement).toBeInTheDocument();\n  });\n\n  it(\"should handle edge case of 100 progress\", () => {\n    const { container } = render(<ProgressBar progress={100} />);\n\n    expect(screen.getByText(\"100%\")).toBeInTheDocument();\n    const barElement = container.querySelector('div[style*=\"width: 100%\"]');\n    expect(barElement).toBeInTheDocument();\n  });\n\n  it(\"should show message when provided\", () => {\n    render(<ProgressBar progress={50} message=\"Loading files...\" />);\n\n    expect(screen.getByText(\"Loading files...\")).toBeInTheDocument();\n  });\n\n  it(\"should not show message when not provided\", () => {\n    render(<ProgressBar progress={50} />);\n\n    expect(screen.getByText(\"50%\")).toBeInTheDocument();\n    expect(screen.queryByText(\"Loading files...\")).not.toBeInTheDocument();\n  });\n\n  it(\"should show both percentage and message\", () => {\n    render(\n      <ProgressBar\n        progress={75}\n        message=\"Almost done...\"\n        showPercentage={true}\n      />\n    );\n\n    expect(screen.getByText(\"75%\")).toBeInTheDocument();\n    expect(screen.getByText(\"Almost done...\")).toBeInTheDocument();\n  });\n\n  it(\"should show actual progress above 100 (no clamping in display)\", () => {\n    const { container } = render(<ProgressBar progress={150} />);\n\n    expect(screen.getByText(\"150%\")).toBeInTheDocument();\n    const barElement = container.querySelector('div[style*=\"width: 100%\"]');\n    expect(barElement).toBeInTheDocument(); // Width is clamped\n  });\n\n  it(\"should show actual progress below 0 (no clamping in display)\", () => {\n    const { container } = render(<ProgressBar progress={-25} />);\n\n    expect(screen.getByText(\"-25%\")).toBeInTheDocument();\n    const barElement = container.querySelector('div[style*=\"width: 0%\"]');\n    expect(barElement).toBeInTheDocument(); // Width is clamped\n  });\n\n  it(\"should render with correct DOM structure\", () => {\n    const { container } = render(\n      <ProgressBar progress={50} message=\"Test message\" />\n    );\n\n    // Check percentage text exists\n    expect(screen.getByText(\"50%\")).toBeInTheDocument();\n\n    // Check message text exists\n    expect(screen.getByText(\"Test message\")).toBeInTheDocument();\n\n    // Check structure has the right elements\n    const divs = container.querySelectorAll(\"div\");\n    expect(divs.length).toBeGreaterThan(0); // Should have div elements\n  });\n\n  it(\"should work with all props provided\", () => {\n    const { container } = render(\n      <ProgressBar\n        progress={85}\n        showPercentage={true}\n        message=\"Finalizing...\"\n        className=\"custom-progress\"\n      />\n    );\n\n    expect(screen.getByText(\"85%\")).toBeInTheDocument();\n    expect(screen.getByText(\"Finalizing...\")).toBeInTheDocument();\n\n    const progressBar = container.firstChild as HTMLElement;\n    expect(progressBar).toHaveClass(\"custom-progress\");\n  });\n\n  it(\"should work with minimal props\", () => {\n    render(<ProgressBar progress={0} />);\n\n    expect(screen.getByText(\"0%\")).toBeInTheDocument();\n  });\n\n  it(\"should handle empty message gracefully\", () => {\n    render(<ProgressBar progress={50} message=\"\" />);\n\n    expect(screen.getByText(\"50%\")).toBeInTheDocument();\n    // Empty message should not render anything\n  });\n});\n"],"version":3}