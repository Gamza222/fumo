{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/web-vitals/web-vitals.test.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/performance/lib/web-vitals/web-vitals.test.ts"],"sourcesContent":["// Mock web-vitals before importing\njest.mock('web-vitals', () => ({\n  onCLS: jest.fn((callback) => callback({ name: 'CLS', value: 0.05, rating: 'good' })),\n  onINP: jest.fn((callback) => callback({ name: 'INP', value: 100, rating: 'good' })),\n  onFCP: jest.fn((callback) => callback({ name: 'FCP', value: 1200, rating: 'good' })),\n  onLCP: jest.fn((callback) => callback({ name: 'LCP', value: 2000, rating: 'good' })),\n  onTTFB: jest.fn((callback) => callback({ name: 'TTFB', value: 600, rating: 'good' })),\n}));\n\nimport {\n  checkPerformanceBudget,\n  getPerformanceRating,\n  initWebVitals,\n  PERFORMANCE_BUDGETS,\n} from './web-vitals';\n\n// Mock Sentry\njest.mock('@sentry/nextjs', () => ({\n  captureException: jest.fn(),\n}));\n\ndescribe('Web Vitals', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('initWebVitals', () => {\n    it('should initialize web vitals monitoring', async () => {\n      // Import the mocked functions\n      const { onCLS, onINP, onFCP, onLCP, onTTFB } = await import('web-vitals');\n\n      initWebVitals({\n        debug: true,\n        reportToSentry: false,\n      });\n\n      // Check that the web-vitals functions are called\n      expect(onCLS).toHaveBeenCalled();\n      expect(onINP).toHaveBeenCalled();\n      expect(onFCP).toHaveBeenCalled();\n      expect(onLCP).toHaveBeenCalled();\n      expect(onTTFB).toHaveBeenCalled();\n    });\n\n    it('should not log in production', () => {\n      const consoleSpy = jest.spyOn(console, 'log').mockImplementation();\n\n      initWebVitals({\n        debug: false,\n        reportToSentry: false,\n      });\n\n      expect(consoleSpy).not.toHaveBeenCalled();\n      consoleSpy.mockRestore();\n    });\n  });\n\n  describe('PERFORMANCE_BUDGETS', () => {\n    it('should have correct budget values', () => {\n      expect(PERFORMANCE_BUDGETS.LCP).toBe(2500);\n      expect(PERFORMANCE_BUDGETS.INP).toBe(200);\n      expect(PERFORMANCE_BUDGETS.CLS).toBe(0.1);\n      expect(PERFORMANCE_BUDGETS.FCP).toBe(1800);\n      expect(PERFORMANCE_BUDGETS.TTFB).toBe(800);\n    });\n  });\n\n  describe('checkPerformanceBudget', () => {\n    it('should return true for good metrics', () => {\n      expect(checkPerformanceBudget({ name: 'LCP', value: 2000 })).toBe(true);\n      expect(checkPerformanceBudget({ name: 'INP', value: 100 })).toBe(true);\n      expect(checkPerformanceBudget({ name: 'CLS', value: 0.05 })).toBe(true);\n    });\n\n    it('should return false for poor metrics', () => {\n      expect(checkPerformanceBudget({ name: 'LCP', value: 3000 })).toBe(false);\n      expect(checkPerformanceBudget({ name: 'INP', value: 300 })).toBe(false);\n      expect(checkPerformanceBudget({ name: 'CLS', value: 0.2 })).toBe(false);\n    });\n  });\n\n  describe('getPerformanceRating', () => {\n    it('should return good for excellent metrics', () => {\n      expect(getPerformanceRating({ name: 'LCP', value: 1000 })).toBe('good');\n      expect(getPerformanceRating({ name: 'INP', value: 50 })).toBe('good');\n    });\n\n    it('should return needs-improvement for borderline metrics', () => {\n      expect(getPerformanceRating({ name: 'LCP', value: 2000 })).toBe('needs-improvement');\n      expect(getPerformanceRating({ name: 'INP', value: 180 })).toBe('needs-improvement');\n    });\n\n    it('should return poor for bad metrics', () => {\n      expect(getPerformanceRating({ name: 'LCP', value: 3000 })).toBe('poor');\n      expect(getPerformanceRating({ name: 'INP', value: 300 })).toBe('poor');\n    });\n  });\n});\n"],"version":3}