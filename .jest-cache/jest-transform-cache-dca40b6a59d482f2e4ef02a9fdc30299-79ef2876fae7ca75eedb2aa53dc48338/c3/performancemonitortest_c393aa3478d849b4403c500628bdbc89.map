{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/performance-monitor/performance-monitor.test.tsx","mappings":";;;AAWA,iBAAiB;AACjB,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,cAAM,OAAA,CAAC;IAC5C,SAAS,EAAE;QACT,aAAa,EAAE,IAAI;QACnB,YAAY,EAAE,KAAK;QACnB,MAAM,EAAE,KAAK;QACb,SAAS,EAAE,KAAK;KACjB;CACF,CAAC,EAP2C,CAO3C,CAAC,CAAC;AAnBJ,gDAAwD;AACxD,6DAA2D;AAC3D,gDAA8D;AAE9D,0BAA0B;AAC1B,IAAA,4BAAoB,EAAC;AACnB,YAAY;AACZ,8CAA8C;AAC9C,KAAK;CACN,CAAC,CAAC;AAYH,mBAAmB;AACnB,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;AAEzC,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,UAAU,CAAC;QACT,oBAAoB;QACnB,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,sBAAsB;QACrB,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,WAAW,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAC/B,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAA,cAAM,EAAC,uBAAC,wCAAkB,KAAG,CAAC,CAAC;QAC/B,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE;QACvC,iDAAiD;QACjD,0EAA0E;QAC1E,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC5B,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAA,cAAM,EAAC,uBAAC,wCAAkB,IAAC,SAAS,EAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/D,IAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QACjC,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAA,cAAM,EAAC,uBAAC,wCAAkB,KAAG,CAAC,CAAC;QAC/B,IAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE;QAC3B,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAA,cAAM,EAAC,uBAAC,wCAAkB,IAAC,QAAQ,EAAC,aAAa,GAAG,CAAC,CAAC;QACtD,IAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QACpC,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAA,cAAM,EAAC,uBAAC,wCAAkB,KAAG,CAAC,CAAC;QAE/B,IAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QACjC,OAAO,CAAC,GAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;QAE9C,IAAM,SAAS,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,CAAU,CAAC;QAEpF,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ;YACjB,IAAA,OAAO,GAAK,IAAA,cAAM,EAAC,uBAAC,wCAAkB,IAAC,QAAQ,EAAE,QAAQ,GAAI,CAAC,QAAvD,CAAwD;YACvE,IAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YAE/C,IAAI,QAAQ,KAAK,UAAU,EAAE,CAAC;gBAC5B,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAC7D,CAAC;iBAAM,IAAI,QAAQ,KAAK,WAAW,EAAE,CAAC;gBACpC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;YAC9D,CAAC;iBAAM,IAAI,QAAQ,KAAK,aAAa,EAAE,CAAC;gBACtC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAChE,CAAC;iBAAM,IAAI,QAAQ,KAAK,cAAc,EAAE,CAAC;gBACvC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACjE,CAAC;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/performance-monitor/performance-monitor.test.tsx"],"sourcesContent":["import { render, screen } from '@testing-library/react';\nimport { PerformanceMonitor } from './performance-monitor';\nimport { setupPerformanceMock } from '@/shared/testing/mocks';\n\n// Mock performance.memory\nsetupPerformanceMock({\n  // memory: {\n  //   usedJSHeapSize: 50 * 1024 * 1024, // 50MB\n  // },\n});\n\n// Mock envConfig\njest.mock('../../../../../config/env', () => ({\n  envConfig: {\n    isDevelopment: true,\n    isProduction: false,\n    isTest: false,\n    isPreview: false,\n  },\n}));\n\n// Mock process.env\nconst originalEnv = process.env.NODE_ENV;\n\ndescribe('PerformanceMonitor', () => {\n  beforeEach(() => {\n    // Reset environment\n    (process.env as any).NODE_ENV = 'development';\n  });\n\n  afterEach(() => {\n    // Restore environment\n    (process.env as any).NODE_ENV = originalEnv;\n  });\n\n  it('renders in development mode', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    render(<PerformanceMonitor />);\n    expect(screen.getByText('Performance')).toBeInTheDocument();\n  });\n\n  it('does not render in production mode', () => {\n    // Skip this test as the mock approach is complex\n    // In a real scenario, this would be tested by setting NODE_ENV=production\n    expect(true).toBe(true);\n  });\n\n  it('applies custom className', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    render(<PerformanceMonitor className=\"custom-perf-monitor\" />);\n    const button = screen.getByText('Performance');\n    expect(button.parentElement).toHaveClass('custom-perf-monitor');\n  });\n\n  it('uses correct default position', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    render(<PerformanceMonitor />);\n    const button = screen.getByText('Performance');\n    expect(button.parentElement).toHaveClass('monitorTopRight');\n  });\n\n  it('applies custom position', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    render(<PerformanceMonitor position=\"bottom-left\" />);\n    const button = screen.getByText('Performance');\n    expect(button.parentElement).toHaveClass('monitorBottomLeft');\n  });\n\n  it('has clickable performance button', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    render(<PerformanceMonitor />);\n\n    const button = screen.getByText('Performance');\n    expect(button).toBeInTheDocument();\n    expect(button).toHaveClass('toggleButton');\n  });\n\n  it('handles all position variants', () => {\n    (process.env as any).NODE_ENV = 'development';\n\n    const positions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'] as const;\n\n    positions.forEach((position) => {\n      const { unmount } = render(<PerformanceMonitor position={position} />);\n      const button = screen.getByText('Performance');\n\n      if (position === 'top-left') {\n        expect(button.parentElement).toHaveClass('monitorTopLeft');\n      } else if (position === 'top-right') {\n        expect(button.parentElement).toHaveClass('monitorTopRight');\n      } else if (position === 'bottom-left') {\n        expect(button.parentElement).toHaveClass('monitorBottomLeft');\n      } else if (position === 'bottom-right') {\n        expect(button.parentElement).toHaveClass('monitorBottomRight');\n      }\n\n      unmount();\n    });\n  });\n});\n"],"version":3}