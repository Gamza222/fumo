40c932560d57f39a7380df7414be1c3c
"use strict";

/**
 * Auth Service Mock for Testing
 *
 * Provides mock implementations for authentication service testing.
 * Simulates user registration, login, and token verification.
 */
/* istanbul ignore next */
function cov_10wr2azj6q() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/security/auth.mock.ts";
  var hash = "571713d3a8bb85dc5f548364ba6b6fe9f02f7cd7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/security/auth.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "3": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "4": {
        start: {
          line: 10,
          column: 31
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "5": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "7": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "8": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "11": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 175
        }
      },
      "13": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "14": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "15": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "16": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "17": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "18": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 51,
          column: 134
        }
      },
      "19": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "20": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 42
        }
      },
      "21": {
        start: {
          line: 61,
          column: 15
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "22": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "23": {
        start: {
          line: 62,
          column: 33
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "24": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "25": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "26": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "27": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "28": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "29": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "30": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "31": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 64
        }
      },
      "32": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 50
        }
      },
      "33": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 80,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 8,
            column: 43
          }
        },
        loc: {
          start: {
            line: 8,
            column: 54
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 9,
            column: 33
          }
        },
        loc: {
          start: {
            line: 9,
            column: 44
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 43,
            column: 23
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 16
          }
        },
        loc: {
          start: {
            line: 61,
            column: 37
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 28
          }
        },
        loc: {
          start: {
            line: 72,
            column: 49
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 72
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 15
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 20
          }
        }, {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 37
          }
        }, {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 28
          }
        }, {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 13,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/security/auth.mock.ts",
      mappings: ";AAAA;;;;;GAKG;;;;;;;;;;;;;;AAQH,yBAAyB;AACzB,IAAM,eAAe,GAAsB;IACzC,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,kBAAkB;IACzB,QAAQ,EAAE,UAAU;IACpB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,IAAI;IACd,WAAW,EAAE,EAAE;IACf,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;IACjC,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;CAClC,CAAC;AAEF,2BAA2B;AAC3B,IAAM,sBAAsB,GAAkC;IAC5D,KAAK,EAAE,kBAAkB;IACzB,QAAQ,EAAE,aAAa;CACxB,CAAC;AAEF;;;;;GAKG;AACI,IAAM,eAAe,GAAG,UAC7B,UAAkD;IAAlD,2BAAA,EAAA,eAAkD;IAElD,IAAM,WAAW,cACf,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACpC,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE,gBAAgB;SACxB,CAAC,EACF,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACjC,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE,gBAAgB;SACxB,CAAC,EACF,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,eAAe,CAAC,EACzD,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,IAC7C,UAAU,CACd,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAlBW,QAAA,eAAe,mBAkB1B;AAEF;;;;;GAKG;AACI,IAAM,QAAQ,GAAG,UAAC,UAA2C;IAA3C,2BAAA,EAAA,eAA2C;IAClE,6BACK,eAAe,GACf,UAAU,EACb;AACJ,CAAC,CAAC;AALW,QAAA,QAAQ,YAKnB;AAEF;;;;;GAKG;AACI,IAAM,oBAAoB,GAAG,UAClC,UAAuD;IAAvD,2BAAA,EAAA,eAAuD;IAEvD,6BACK,sBAAsB,GACtB,UAAU,EACb;AACJ,CAAC,CAAC;AAPW,QAAA,oBAAoB,wBAO/B;AAEF,yBAAyB;AACZ,QAAA,sBAAsB,GAAG,IAAA,uBAAe,GAAE,CAAC;AAC3C,QAAA,eAAe,GAAG,IAAA,gBAAQ,GAAE,CAAC;AAC7B,QAAA,sBAAsB,GAAG,IAAA,4BAAoB,GAAE,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/security/auth.mock.ts"],
      sourcesContent: ["/**\n * Auth Service Mock for Testing\n *\n * Provides mock implementations for authentication service testing.\n * Simulates user registration, login, and token verification.\n */\n\nimport {\n  mockAuthServiceInterface,\n  mockLoginCredentialsInterface,\n  mockUserInterface,\n} from '../../types/types';\n\n// Default mock user data\nconst defaultMockUser: mockUserInterface = {\n  id: '1',\n  email: 'test@example.com',\n  username: 'testuser',\n  role: 'USER',\n  isActive: true,\n  permissions: [],\n  createdAt: new Date('2023-01-01'),\n  updatedAt: new Date('2023-01-01'),\n};\n\n// Default mock credentials\nconst defaultMockCredentials: mockLoginCredentialsInterface = {\n  email: 'test@example.com',\n  password: 'password123',\n};\n\n/**\n * Creates a mock auth service for testing\n *\n * @param customData - Optional custom mock data to override defaults\n * @returns A mock auth service object\n */\nexport const mockAuthService = (\n  customData: Partial<mockAuthServiceInterface> = {}\n): mockAuthServiceInterface => {\n  const mockService: mockAuthServiceInterface = {\n    register: jest.fn().mockResolvedValue({\n      user: defaultMockUser,\n      token: 'mock-jwt-token',\n    }),\n    login: jest.fn().mockResolvedValue({\n      user: defaultMockUser,\n      token: 'mock-jwt-token',\n    }),\n    verifyToken: jest.fn().mockResolvedValue(defaultMockUser),\n    getSecurityEvents: jest.fn().mockReturnValue([]),\n    ...customData,\n  };\n\n  return mockService;\n};\n\n/**\n * Creates a mock user for testing\n *\n * @param customData - Optional custom user data to override defaults\n * @returns A mock user object\n */\nexport const mockUser = (customData: Partial<mockUserInterface> = {}): mockUserInterface => {\n  return {\n    ...defaultMockUser,\n    ...customData,\n  };\n};\n\n/**\n * Creates mock login credentials for testing\n *\n * @param customData - Optional custom credentials to override defaults\n * @returns Mock login credentials\n */\nexport const mockLoginCredentials = (\n  customData: Partial<mockLoginCredentialsInterface> = {}\n): mockLoginCredentialsInterface => {\n  return {\n    ...defaultMockCredentials,\n    ...customData,\n  };\n};\n\n// Default mock instances\nexport const defaultAuthServiceMock = mockAuthService();\nexport const defaultUserMock = mockUser();\nexport const defaultCredentialsMock = mockLoginCredentials();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "571713d3a8bb85dc5f548364ba6b6fe9f02f7cd7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10wr2azj6q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10wr2azj6q();
var __assign =
/* istanbul ignore next */
(cov_10wr2azj6q().s[0]++,
/* istanbul ignore next */
(cov_10wr2azj6q().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_10wr2azj6q().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_10wr2azj6q().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_10wr2azj6q().f[0]++;
  cov_10wr2azj6q().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_10wr2azj6q().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_10wr2azj6q().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_10wr2azj6q().f[1]++;
    cov_10wr2azj6q().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_10wr2azj6q().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_10wr2azj6q().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_10wr2azj6q().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_10wr2azj6q().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_10wr2azj6q().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_10wr2azj6q().b[2][0]++;
          cov_10wr2azj6q().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_10wr2azj6q().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_10wr2azj6q().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_10wr2azj6q().s[10]++;
  return __assign.apply(this, arguments);
}));
/* istanbul ignore next */
cov_10wr2azj6q().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10wr2azj6q().s[12]++;
exports.defaultCredentialsMock = exports.defaultUserMock = exports.defaultAuthServiceMock = exports.mockLoginCredentials = exports.mockUser = exports.mockAuthService = void 0;
// Default mock user data
var defaultMockUser =
/* istanbul ignore next */
(cov_10wr2azj6q().s[13]++, {
  id: '1',
  email: 'test@example.com',
  username: 'testuser',
  role: 'USER',
  isActive: true,
  permissions: [],
  createdAt: new Date('2023-01-01'),
  updatedAt: new Date('2023-01-01')
});
// Default mock credentials
var defaultMockCredentials =
/* istanbul ignore next */
(cov_10wr2azj6q().s[14]++, {
  email: 'test@example.com',
  password: 'password123'
});
/**
 * Creates a mock auth service for testing
 *
 * @param customData - Optional custom mock data to override defaults
 * @returns A mock auth service object
 */
/* istanbul ignore next */
cov_10wr2azj6q().s[15]++;
var mockAuthService = function (customData) {
  /* istanbul ignore next */
  cov_10wr2azj6q().f[2]++;
  cov_10wr2azj6q().s[16]++;
  if (customData === void 0) {
    /* istanbul ignore next */
    cov_10wr2azj6q().b[3][0]++;
    cov_10wr2azj6q().s[17]++;
    customData = {};
  } else
  /* istanbul ignore next */
  {
    cov_10wr2azj6q().b[3][1]++;
  }
  var mockService =
  /* istanbul ignore next */
  (cov_10wr2azj6q().s[18]++, __assign({
    register: jest.fn().mockResolvedValue({
      user: defaultMockUser,
      token: 'mock-jwt-token'
    }),
    login: jest.fn().mockResolvedValue({
      user: defaultMockUser,
      token: 'mock-jwt-token'
    }),
    verifyToken: jest.fn().mockResolvedValue(defaultMockUser),
    getSecurityEvents: jest.fn().mockReturnValue([])
  }, customData));
  /* istanbul ignore next */
  cov_10wr2azj6q().s[19]++;
  return mockService;
};
/* istanbul ignore next */
cov_10wr2azj6q().s[20]++;
exports.mockAuthService = mockAuthService;
/**
 * Creates a mock user for testing
 *
 * @param customData - Optional custom user data to override defaults
 * @returns A mock user object
 */
/* istanbul ignore next */
cov_10wr2azj6q().s[21]++;
var mockUser = function (customData) {
  /* istanbul ignore next */
  cov_10wr2azj6q().f[3]++;
  cov_10wr2azj6q().s[22]++;
  if (customData === void 0) {
    /* istanbul ignore next */
    cov_10wr2azj6q().b[4][0]++;
    cov_10wr2azj6q().s[23]++;
    customData = {};
  } else
  /* istanbul ignore next */
  {
    cov_10wr2azj6q().b[4][1]++;
  }
  cov_10wr2azj6q().s[24]++;
  return __assign(__assign({}, defaultMockUser), customData);
};
/* istanbul ignore next */
cov_10wr2azj6q().s[25]++;
exports.mockUser = mockUser;
/**
 * Creates mock login credentials for testing
 *
 * @param customData - Optional custom credentials to override defaults
 * @returns Mock login credentials
 */
/* istanbul ignore next */
cov_10wr2azj6q().s[26]++;
var mockLoginCredentials = function (customData) {
  /* istanbul ignore next */
  cov_10wr2azj6q().f[4]++;
  cov_10wr2azj6q().s[27]++;
  if (customData === void 0) {
    /* istanbul ignore next */
    cov_10wr2azj6q().b[5][0]++;
    cov_10wr2azj6q().s[28]++;
    customData = {};
  } else
  /* istanbul ignore next */
  {
    cov_10wr2azj6q().b[5][1]++;
  }
  cov_10wr2azj6q().s[29]++;
  return __assign(__assign({}, defaultMockCredentials), customData);
};
/* istanbul ignore next */
cov_10wr2azj6q().s[30]++;
exports.mockLoginCredentials = mockLoginCredentials;
// Default mock instances
/* istanbul ignore next */
cov_10wr2azj6q().s[31]++;
exports.defaultAuthServiceMock = (0, exports.mockAuthService)();
/* istanbul ignore next */
cov_10wr2azj6q().s[32]++;
exports.defaultUserMock = (0, exports.mockUser)();
/* istanbul ignore next */
cov_10wr2azj6q().s[33]++;
exports.defaultCredentialsMock = (0, exports.mockLoginCredentials)();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,