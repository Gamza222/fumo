{"version":3,"names":["cov_10wr2azj6q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","defaultMockUser","id","email","username","role","isActive","permissions","createdAt","Date","updatedAt","defaultMockCredentials","password","mockAuthService","customData","mockService","__assign","register","jest","fn","mockResolvedValue","user","token","login","verifyToken","getSecurityEvents","mockReturnValue","exports","mockUser","mockLoginCredentials","defaultAuthServiceMock","defaultUserMock","defaultCredentialsMock"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/infrastructure/lib/security/auth.mock.ts"],"sourcesContent":["/**\n * Auth Service Mock for Testing\n *\n * Provides mock implementations for authentication service testing.\n * Simulates user registration, login, and token verification.\n */\n\nimport {\n  mockAuthServiceInterface,\n  mockLoginCredentialsInterface,\n  mockUserInterface,\n} from '../../types/types';\n\n// Default mock user data\nconst defaultMockUser: mockUserInterface = {\n  id: '1',\n  email: 'test@example.com',\n  username: 'testuser',\n  role: 'USER',\n  isActive: true,\n  permissions: [],\n  createdAt: new Date('2023-01-01'),\n  updatedAt: new Date('2023-01-01'),\n};\n\n// Default mock credentials\nconst defaultMockCredentials: mockLoginCredentialsInterface = {\n  email: 'test@example.com',\n  password: 'password123',\n};\n\n/**\n * Creates a mock auth service for testing\n *\n * @param customData - Optional custom mock data to override defaults\n * @returns A mock auth service object\n */\nexport const mockAuthService = (\n  customData: Partial<mockAuthServiceInterface> = {}\n): mockAuthServiceInterface => {\n  const mockService: mockAuthServiceInterface = {\n    register: jest.fn().mockResolvedValue({\n      user: defaultMockUser,\n      token: 'mock-jwt-token',\n    }),\n    login: jest.fn().mockResolvedValue({\n      user: defaultMockUser,\n      token: 'mock-jwt-token',\n    }),\n    verifyToken: jest.fn().mockResolvedValue(defaultMockUser),\n    getSecurityEvents: jest.fn().mockReturnValue([]),\n    ...customData,\n  };\n\n  return mockService;\n};\n\n/**\n * Creates a mock user for testing\n *\n * @param customData - Optional custom user data to override defaults\n * @returns A mock user object\n */\nexport const mockUser = (customData: Partial<mockUserInterface> = {}): mockUserInterface => {\n  return {\n    ...defaultMockUser,\n    ...customData,\n  };\n};\n\n/**\n * Creates mock login credentials for testing\n *\n * @param customData - Optional custom credentials to override defaults\n * @returns Mock login credentials\n */\nexport const mockLoginCredentials = (\n  customData: Partial<mockLoginCredentialsInterface> = {}\n): mockLoginCredentialsInterface => {\n  return {\n    ...defaultMockCredentials,\n    ...customData,\n  };\n};\n\n// Default mock instances\nexport const defaultAuthServiceMock = mockAuthService();\nexport const defaultUserMock = mockUser();\nexport const defaultCredentialsMock = mockLoginCredentials();\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}