{"version":3,"names":["cov_1sbf9cfmsy","actualCoverage","Text_1","s","require","Button_1","Text_types_1","Button_types_1","classNames_1","lib_1","PageError_module_scss_1","__importDefault","PageError","props","f","error","className","handleReload","window","location","reload","errorMessage","getErrorMessage","isChunk","isChunkError","isNetwork","isNetworkError","getTitle","b","getDescription","getButtonText","jsx_runtime_1","jsx","classNames","default","pageError","children","jsxs","pageError__content","Text","as","variant","TextVariant","PRIMARY","ERROR","size","TextSize","LG","align","TextAlign","CENTER","SECONDARY","MD","pageError__actions","Button","ButtonVariant","ButtonSize","onClick","exports"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/widgets/PageError/ui/PageError.tsx"],"sourcesContent":["import { type FC } from 'react';\nimport { Text } from '@/shared/ui/Text';\nimport { Button } from '@/shared/ui/Button';\nimport { TextAlign, TextSize, TextVariant } from '@/shared/ui/Text/Text.types';\nimport { ButtonSize, ButtonVariant } from '@/shared/ui/Button/Button.types';\nimport { classNames } from '@/shared/lib/utils/classNames/classNames';\nimport { getErrorMessage, isChunkError, isNetworkError } from '../lib/lib';\nimport type { PageErrorProps } from '../types/types';\nimport styles from './PageError.module.scss';\n\nconst PageError: FC<PageErrorProps> = (props) => {\n  const { error, className } = props;\n\n  const handleReload = () => {\n    window.location.reload();\n  };\n\n  const errorMessage = getErrorMessage(error);\n  const isChunk = isChunkError(error);\n  const isNetwork = isNetworkError(error);\n\n  const getTitle = (): string => {\n    if (isChunk) return 'Update Available';\n    if (isNetwork) return 'Connection Error';\n    return 'Something went wrong';\n  };\n\n  const getDescription = (): string => {\n    if (isChunk) return 'A new version is available. Please reload to get the latest updates.';\n    if (isNetwork) return 'Unable to connect to the server. Please check your internet connection.';\n    return errorMessage;\n  };\n\n  const getButtonText = (): string => {\n    if (isChunk) return 'Reload Page';\n    if (isNetwork) return 'Retry';\n    return 'Try again';\n  };\n\n  return (\n    <div className={classNames(styles.pageError || '', {}, [className])}>\n      <div className={styles.pageError__content}>\n        <Text\n          as=\"h1\"\n          variant={isChunk ? TextVariant.PRIMARY : TextVariant.ERROR}\n          size={TextSize.LG}\n          align={TextAlign.CENTER}\n        >\n          {getTitle()}\n        </Text>\n\n        <Text as=\"p\" variant={TextVariant.SECONDARY} size={TextSize.MD} align={TextAlign.CENTER}>\n          {getDescription()}\n        </Text>\n\n        <div className={styles.pageError__actions}>\n          <Button variant={ButtonVariant.PRIMARY} size={ButtonSize.MD} onClick={handleReload}>\n            {getButtonText()}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageError;\n"],"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","ignoreList":[]}