{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/react/react.mock.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/react/react.mock.ts"],"sourcesContent":["/**\n * React Testing Mock Utilities\n *\n * Common React-related mocks for testing hooks,\n * components, and rendering patterns.\n */\n\n/**\n * Creates a mock render counter for testing re-renders\n */\nexport const createMockRenderCounter = () => {\n  const renderCount = jest.fn();\n  return {\n    renderCount,\n    getRenderCount: () => renderCount.mock.calls.length,\n    reset: () => renderCount.mockClear(),\n  };\n};\n\n/**\n * Creates a mock render counter with expectations\n */\nexport const createMockRenderCounterWithExpectations = (expectedRenders: number) => {\n  const renderCount = jest.fn();\n  renderCount.mockImplementation(() => {\n    expect(renderCount).toHaveBeenCalledTimes(expectedRenders);\n  });\n  return {\n    renderCount,\n    getRenderCount: () => renderCount.mock.calls.length,\n    reset: () => renderCount.mockClear(),\n  };\n};\n\n/**\n * Mock React component props\n */\nexport const createMockComponentProps = <T extends Record<string, unknown>>(\n  overrides: Partial<T> = {}\n): T =>\n  ({\n    ...overrides,\n  }) as T;\n\n/**\n * Mock React ref\n */\nexport const createMockRef = <T = unknown>(initialValue?: T) => {\n  const ref = { current: initialValue as T };\n  return {\n    ref,\n    setValue: (value: T) => {\n      ref.current = value;\n    },\n    getValue: () => ref.current,\n  };\n};\n\n/**\n * Mock React callback ref\n */\nexport const createMockCallbackRef = () => {\n  const callback = jest.fn();\n  return {\n    callback,\n    getLastValue: () => (callback.mock.calls[callback.mock.calls.length - 1] as unknown[])?.[0],\n    getCallCount: () => callback.mock.calls.length,\n  };\n};\n\n/**\n * Mock React state setter\n */\nexport const createMockStateSetter = <T = unknown>(initialValue?: T) => {\n  const setState = jest.fn();\n  let currentValue = initialValue;\n\n  setState.mockImplementation((newValue: T | ((prev: T) => T)) => {\n    if (typeof newValue === 'function') {\n      currentValue = (newValue as (prev: T) => T)(currentValue as T);\n    } else {\n      currentValue = newValue;\n    }\n  });\n\n  return {\n    setState,\n    getCurrentValue: () => currentValue,\n    getCallCount: () => setState.mock.calls.length,\n    getLastCall: () => setState.mock.calls[setState.mock.calls.length - 1] as unknown,\n  };\n};\n\n/**\n * Mock React effect cleanup function\n */\nexport const createMockEffectCleanup = () => {\n  const cleanup = jest.fn();\n  return {\n    cleanup,\n    wasCalled: () => cleanup.mock.calls.length > 0,\n    getCallCount: () => cleanup.mock.calls.length,\n  };\n};\n"],"version":3}