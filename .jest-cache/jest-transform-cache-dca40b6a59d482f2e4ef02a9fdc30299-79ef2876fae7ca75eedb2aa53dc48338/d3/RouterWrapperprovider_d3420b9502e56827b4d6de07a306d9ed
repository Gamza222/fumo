6ba47733dce75bb173fb8ca52d788a81
"use strict";

/* istanbul ignore next */
function cov_mrmcvzlr6() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/providers/components/RouterWrapper.provider.tsx";
  var hash = "7f262c56a1cc95a72fa53e0f74318986c202026e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/providers/components/RouterWrapper.provider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 10,
          column: 6
        }
      },
      "2": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 8,
          column: 9
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 25
        }
      },
      "4": {
        start: {
          line: 4,
          column: 31
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "5": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 29
        }
      },
      "6": {
        start: {
          line: 6,
          column: 12
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "7": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "8": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "9": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 17
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "11": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "12": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "13": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "14": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 99
        }
      },
      "15": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 22,
          column: 98
        }
      },
      "16": {
        start: {
          line: 18,
          column: 46
        },
        end: {
          line: 22,
          column: 96
        }
      },
      "17": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "18": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "19": {
        start: {
          line: 43,
          column: 41
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "20": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 133
        }
      },
      "22": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 43
          }
        },
        loc: {
          start: {
            line: 2,
            column: 54
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 3,
            column: 33
          }
        },
        loc: {
          start: {
            line: 3,
            column: 44
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 24
          }
        },
        loc: {
          start: {
            line: 18,
            column: 44
          },
          end: {
            line: 22,
            column: 98
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 42,
            column: 21
          }
        },
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 15
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 2,
            column: 20
          }
        }, {
          start: {
            line: 2,
            column: 24
          },
          end: {
            line: 2,
            column: 37
          }
        }, {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 3,
            column: 28
          }
        }, {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 10,
            column: 5
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/providers/components/RouterWrapper.provider.tsx",
      mappings: ";;;;;;;;;;;;;;;AAAA,oGAAmF;AAInF,8DAA8D;AAC9D,IAAM,gBAAgB,GAAG,UAAC,SAA+B,IAAiB,OAAA,YACxE,QAAQ,EAAE,EAAE,EACZ,QAAQ,EAAE,GAAG,EACb,KAAK,EAAE,GAAG,EACV,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,GAAG,EACX,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,EACf,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,EAClB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,EACf,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,EAClB,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAChD,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,EACzB,MAAM,EAAE;QACN,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QACb,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;QACd,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;KAChB,EACD,UAAU,EAAE,KAAK,EACjB,OAAO,EAAE,IAAI,EACb,SAAS,EAAE,KAAK,EAChB,cAAc,EAAE,KAAK,IAClB,SAAS,EACZ,EAvBwE,CAuBxE,CAAC;AAEH;;;;;;;;;;;;;;;;;;GAkBG;AACI,IAAM,aAAa,GAAG,UAAC,EAAiD;QAA/C,QAAQ,cAAA,EAAE,MAAM,YAAA;IAC9C,IAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAC5C,OAAO,uBAAC,6CAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,UAAU,YAAG,QAAQ,GAA0B,CAAC;AACxF,CAAC,CAAC;AAHW,QAAA,aAAa,iBAGxB",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/providers/components/RouterWrapper.provider.tsx"],
      sourcesContent: ["import { RouterContext } from 'next/dist/shared/lib/router-context.shared-runtime';\nimport type { NextRouter } from 'next/router';\nimport type { RouterWrapperPropsInterface } from '../types/types';\n\n// A mock router instance that can be customized for each test\nconst createMockRouter = (overrides?: Partial<NextRouter>): NextRouter => ({\n  basePath: '',\n  pathname: '/',\n  route: '/',\n  query: {},\n  asPath: '/',\n  push: jest.fn(),\n  replace: jest.fn(),\n  reload: jest.fn(),\n  back: jest.fn(),\n  forward: jest.fn(),\n  prefetch: jest.fn().mockResolvedValue(undefined),\n  beforePopState: jest.fn(),\n  events: {\n    on: jest.fn(),\n    off: jest.fn(),\n    emit: jest.fn(),\n  },\n  isFallback: false,\n  isReady: true,\n  isPreview: false,\n  isLocaleDomain: false,\n  ...overrides,\n});\n\n/**\n * Router Test Provider\n *\n * Provides Next.js router context for testing components that use router hooks.\n * Use this when testing components that call useRouter(), usePathname(), etc.\n *\n * @usage\n * ```typescript\n * import { RouterWrapper } from '@/config/jest/providers';\n *\n * const wrapper = ({ children }) => (\n *   <RouterWrapper router={{ pathname: '/dashboard', query: { id: '123' } }}>\n *     {children}\n *   </RouterWrapper>\n * );\n *\n * render(<MyComponent />, { wrapper });\n * ```\n */\nexport const RouterWrapper = ({ children, router }: RouterWrapperPropsInterface): JSX.Element => {\n  const mockRouter = createMockRouter(router);\n  return <RouterContext.Provider value={mockRouter}>{children}</RouterContext.Provider>;\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7f262c56a1cc95a72fa53e0f74318986c202026e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mrmcvzlr6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mrmcvzlr6();
var __assign =
/* istanbul ignore next */
(cov_mrmcvzlr6().s[0]++,
/* istanbul ignore next */
(cov_mrmcvzlr6().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_mrmcvzlr6().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_mrmcvzlr6().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_mrmcvzlr6().f[0]++;
  cov_mrmcvzlr6().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_mrmcvzlr6().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_mrmcvzlr6().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_mrmcvzlr6().f[1]++;
    cov_mrmcvzlr6().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_mrmcvzlr6().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_mrmcvzlr6().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_mrmcvzlr6().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_mrmcvzlr6().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_mrmcvzlr6().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_mrmcvzlr6().b[2][0]++;
          cov_mrmcvzlr6().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_mrmcvzlr6().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_mrmcvzlr6().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_mrmcvzlr6().s[10]++;
  return __assign.apply(this, arguments);
}));
/* istanbul ignore next */
cov_mrmcvzlr6().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_mrmcvzlr6().s[12]++;
exports.RouterWrapper = void 0;
var jsx_runtime_1 =
/* istanbul ignore next */
(cov_mrmcvzlr6().s[13]++, require("react/jsx-runtime"));
var router_context_shared_runtime_1 =
/* istanbul ignore next */
(cov_mrmcvzlr6().s[14]++, require("next/dist/shared/lib/router-context.shared-runtime"));
// A mock router instance that can be customized for each test
/* istanbul ignore next */
cov_mrmcvzlr6().s[15]++;
var createMockRouter = function (overrides) {
  /* istanbul ignore next */
  cov_mrmcvzlr6().f[2]++;
  cov_mrmcvzlr6().s[16]++;
  return __assign({
    basePath: '',
    pathname: '/',
    route: '/',
    query: {},
    asPath: '/',
    push: jest.fn(),
    replace: jest.fn(),
    reload: jest.fn(),
    back: jest.fn(),
    forward: jest.fn(),
    prefetch: jest.fn().mockResolvedValue(undefined),
    beforePopState: jest.fn(),
    events: {
      on: jest.fn(),
      off: jest.fn(),
      emit: jest.fn()
    },
    isFallback: false,
    isReady: true,
    isPreview: false,
    isLocaleDomain: false
  }, overrides);
};
/**
 * Router Test Provider
 *
 * Provides Next.js router context for testing components that use router hooks.
 * Use this when testing components that call useRouter(), usePathname(), etc.
 *
 * @usage
 * ```typescript
 * import { RouterWrapper } from '@/config/jest/providers';
 *
 * const wrapper = ({ children }) => (
 *   <RouterWrapper router={{ pathname: '/dashboard', query: { id: '123' } }}>
 *     {children}
 *   </RouterWrapper>
 * );
 *
 * render(<MyComponent />, { wrapper });
 * ```
 */
/* istanbul ignore next */
cov_mrmcvzlr6().s[17]++;
var RouterWrapper = function (_a) {
  /* istanbul ignore next */
  cov_mrmcvzlr6().f[3]++;
  var children =
    /* istanbul ignore next */
    (cov_mrmcvzlr6().s[18]++, _a.children),
    router =
    /* istanbul ignore next */
    (cov_mrmcvzlr6().s[19]++, _a.router);
  var mockRouter =
  /* istanbul ignore next */
  (cov_mrmcvzlr6().s[20]++, createMockRouter(router));
  /* istanbul ignore next */
  cov_mrmcvzlr6().s[21]++;
  return (0, jsx_runtime_1.jsx)(router_context_shared_runtime_1.RouterContext.Provider, {
    value: mockRouter,
    children: children
  });
};
/* istanbul ignore next */
cov_mrmcvzlr6().s[22]++;
exports.RouterWrapper = RouterWrapper;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbXJtY3Z6bHI2IiwiYWN0dWFsQ292ZXJhZ2UiLCJyb3V0ZXJfY29udGV4dF9zaGFyZWRfcnVudGltZV8xIiwicyIsInJlcXVpcmUiLCJjcmVhdGVNb2NrUm91dGVyIiwib3ZlcnJpZGVzIiwiZiIsIl9fYXNzaWduIiwiYmFzZVBhdGgiLCJwYXRobmFtZSIsInJvdXRlIiwicXVlcnkiLCJhc1BhdGgiLCJwdXNoIiwiamVzdCIsImZuIiwicmVwbGFjZSIsInJlbG9hZCIsImJhY2siLCJmb3J3YXJkIiwicHJlZmV0Y2giLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsInVuZGVmaW5lZCIsImJlZm9yZVBvcFN0YXRlIiwiZXZlbnRzIiwib24iLCJvZmYiLCJlbWl0IiwiaXNGYWxsYmFjayIsImlzUmVhZHkiLCJpc1ByZXZpZXciLCJpc0xvY2FsZURvbWFpbiIsIlJvdXRlcldyYXBwZXIiLCJfYSIsImNoaWxkcmVuIiwicm91dGVyIiwibW9ja1JvdXRlciIsImpzeF9ydW50aW1lXzEiLCJqc3giLCJSb3V0ZXJDb250ZXh0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvVXNlcnMvZ2FtemFyYW1hemFub3YvRGVza3RvcC9mdW1vL3NyYy9zaGFyZWQvdGVzdGluZy9wcm92aWRlcnMvY29tcG9uZW50cy9Sb3V0ZXJXcmFwcGVyLnByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXJDb250ZXh0IH0gZnJvbSAnbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUnO1xuaW1wb3J0IHR5cGUgeyBOZXh0Um91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IHR5cGUgeyBSb3V0ZXJXcmFwcGVyUHJvcHNJbnRlcmZhY2UgfSBmcm9tICcuLi90eXBlcy90eXBlcyc7XG5cbi8vIEEgbW9jayByb3V0ZXIgaW5zdGFuY2UgdGhhdCBjYW4gYmUgY3VzdG9taXplZCBmb3IgZWFjaCB0ZXN0XG5jb25zdCBjcmVhdGVNb2NrUm91dGVyID0gKG92ZXJyaWRlcz86IFBhcnRpYWw8TmV4dFJvdXRlcj4pOiBOZXh0Um91dGVyID0+ICh7XG4gIGJhc2VQYXRoOiAnJyxcbiAgcGF0aG5hbWU6ICcvJyxcbiAgcm91dGU6ICcvJyxcbiAgcXVlcnk6IHt9LFxuICBhc1BhdGg6ICcvJyxcbiAgcHVzaDogamVzdC5mbigpLFxuICByZXBsYWNlOiBqZXN0LmZuKCksXG4gIHJlbG9hZDogamVzdC5mbigpLFxuICBiYWNrOiBqZXN0LmZuKCksXG4gIGZvcndhcmQ6IGplc3QuZm4oKSxcbiAgcHJlZmV0Y2g6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSh1bmRlZmluZWQpLFxuICBiZWZvcmVQb3BTdGF0ZTogamVzdC5mbigpLFxuICBldmVudHM6IHtcbiAgICBvbjogamVzdC5mbigpLFxuICAgIG9mZjogamVzdC5mbigpLFxuICAgIGVtaXQ6IGplc3QuZm4oKSxcbiAgfSxcbiAgaXNGYWxsYmFjazogZmFsc2UsXG4gIGlzUmVhZHk6IHRydWUsXG4gIGlzUHJldmlldzogZmFsc2UsXG4gIGlzTG9jYWxlRG9tYWluOiBmYWxzZSxcbiAgLi4ub3ZlcnJpZGVzLFxufSk7XG5cbi8qKlxuICogUm91dGVyIFRlc3QgUHJvdmlkZXJcbiAqXG4gKiBQcm92aWRlcyBOZXh0LmpzIHJvdXRlciBjb250ZXh0IGZvciB0ZXN0aW5nIGNvbXBvbmVudHMgdGhhdCB1c2Ugcm91dGVyIGhvb2tzLlxuICogVXNlIHRoaXMgd2hlbiB0ZXN0aW5nIGNvbXBvbmVudHMgdGhhdCBjYWxsIHVzZVJvdXRlcigpLCB1c2VQYXRobmFtZSgpLCBldGMuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBSb3V0ZXJXcmFwcGVyIH0gZnJvbSAnQC9jb25maWcvamVzdC9wcm92aWRlcnMnO1xuICpcbiAqIGNvbnN0IHdyYXBwZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiAoXG4gKiAgIDxSb3V0ZXJXcmFwcGVyIHJvdXRlcj17eyBwYXRobmFtZTogJy9kYXNoYm9hcmQnLCBxdWVyeTogeyBpZDogJzEyMycgfSB9fT5cbiAqICAgICB7Y2hpbGRyZW59XG4gKiAgIDwvUm91dGVyV3JhcHBlcj5cbiAqICk7XG4gKlxuICogcmVuZGVyKDxNeUNvbXBvbmVudCAvPiwgeyB3cmFwcGVyIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBSb3V0ZXJXcmFwcGVyID0gKHsgY2hpbGRyZW4sIHJvdXRlciB9OiBSb3V0ZXJXcmFwcGVyUHJvcHNJbnRlcmZhY2UpOiBKU1guRWxlbWVudCA9PiB7XG4gIGNvbnN0IG1vY2tSb3V0ZXIgPSBjcmVhdGVNb2NrUm91dGVyKHJvdXRlcik7XG4gIHJldHVybiA8Um91dGVyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17bW9ja1JvdXRlcn0+e2NoaWxkcmVufTwvUm91dGVyQ29udGV4dC5Qcm92aWRlcj47XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUFBO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUUsK0JBQUE7QUFBQTtBQUFBLENBQUFGLGFBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBSUE7QUFBQTtBQUFBSixhQUFBLEdBQUFHLENBQUE7QUFDQSxJQUFNRSxnQkFBZ0IsR0FBRyxTQUFBQSxDQUFDQyxTQUErQjtFQUFBO0VBQUFOLGFBQUEsR0FBQU8sQ0FBQTtFQUFBUCxhQUFBLEdBQUFHLENBQUE7RUFBaUIsT0FBQUssUUFBQTtJQUN4RUMsUUFBUSxFQUFFLEVBQUU7SUFDWkMsUUFBUSxFQUFFLEdBQUc7SUFDYkMsS0FBSyxFQUFFLEdBQUc7SUFDVkMsS0FBSyxFQUFFLEVBQUU7SUFDVEMsTUFBTSxFQUFFLEdBQUc7SUFDWEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUNmQyxPQUFPLEVBQUVGLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ2xCRSxNQUFNLEVBQUVILElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ2pCRyxJQUFJLEVBQUVKLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ2ZJLE9BQU8sRUFBRUwsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDbEJLLFFBQVEsRUFBRU4sSUFBSSxDQUFDQyxFQUFFLEVBQUUsQ0FBQ00saUJBQWlCLENBQUNDLFNBQVMsQ0FBQztJQUNoREMsY0FBYyxFQUFFVCxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUN6QlMsTUFBTSxFQUFFO01BQ05DLEVBQUUsRUFBRVgsSUFBSSxDQUFDQyxFQUFFLEVBQUU7TUFDYlcsR0FBRyxFQUFFWixJQUFJLENBQUNDLEVBQUUsRUFBRTtNQUNkWSxJQUFJLEVBQUViLElBQUksQ0FBQ0MsRUFBRTtLQUNkO0lBQ0RhLFVBQVUsRUFBRSxLQUFLO0lBQ2pCQyxPQUFPLEVBQUUsSUFBSTtJQUNiQyxTQUFTLEVBQUUsS0FBSztJQUNoQkMsY0FBYyxFQUFFO0VBQUssR0FDbEIxQixTQUFTO0FBdEI0RCxDQXVCeEU7QUFFRjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUFOLGFBQUEsR0FBQUcsQ0FBQTtBQW1CTyxJQUFNOEIsYUFBYSxHQUFHLFNBQUFBLENBQUNDLEVBQWlEO0VBQUE7RUFBQWxDLGFBQUEsR0FBQU8sQ0FBQTtNQUEvQzRCLFFBQVE7SUFBQTtJQUFBLENBQUFuQyxhQUFBLEdBQUFHLENBQUEsUUFBQStCLEVBQUEsQ0FBQUMsUUFBQTtJQUFFQyxNQUFNO0lBQUE7SUFBQSxDQUFBcEMsYUFBQSxHQUFBRyxDQUFBLFFBQUErQixFQUFBLENBQUFFLE1BQUE7RUFDOUMsSUFBTUMsVUFBVTtFQUFBO0VBQUEsQ0FBQXJDLGFBQUEsR0FBQUcsQ0FBQSxRQUFHRSxnQkFBZ0IsQ0FBQytCLE1BQU0sQ0FBQztFQUFDO0VBQUFwQyxhQUFBLEdBQUFHLENBQUE7RUFDNUMsT0FBTyxJQUFBbUMsYUFBQSxDQUFBQyxHQUFBLEVBQUNyQywrQkFBQSxDQUFBc0MsYUFBYSxDQUFDQyxRQUFRO0lBQUNDLEtBQUssRUFBRUwsVUFBVTtJQUFBRixRQUFBLEVBQUdBO0VBQVEsRUFBMEI7QUFDdkYsQ0FBQztBQUFDO0FBQUFuQyxhQUFBLEdBQUFHLENBQUE7QUFIV3dDLE9BQUEsQ0FBQVYsYUFBYSxHQUFBQSxhQUFBIiwiaWdub3JlTGlzdCI6W119