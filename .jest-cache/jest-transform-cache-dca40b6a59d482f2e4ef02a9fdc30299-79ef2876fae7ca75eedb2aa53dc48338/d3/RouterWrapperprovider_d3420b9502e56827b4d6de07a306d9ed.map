{"version":3,"names":["cov_mrmcvzlr6","actualCoverage","router_context_shared_runtime_1","s","require","createMockRouter","overrides","f","__assign","basePath","pathname","route","query","asPath","push","jest","fn","replace","reload","back","forward","prefetch","mockResolvedValue","undefined","beforePopState","events","on","off","emit","isFallback","isReady","isPreview","isLocaleDomain","RouterWrapper","_a","children","router","mockRouter","jsx_runtime_1","jsx","RouterContext","Provider","value","exports"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/providers/components/RouterWrapper.provider.tsx"],"sourcesContent":["import { RouterContext } from 'next/dist/shared/lib/router-context.shared-runtime';\nimport type { NextRouter } from 'next/router';\nimport type { RouterWrapperPropsInterface } from '../types/types';\n\n// A mock router instance that can be customized for each test\nconst createMockRouter = (overrides?: Partial<NextRouter>): NextRouter => ({\n  basePath: '',\n  pathname: '/',\n  route: '/',\n  query: {},\n  asPath: '/',\n  push: jest.fn(),\n  replace: jest.fn(),\n  reload: jest.fn(),\n  back: jest.fn(),\n  forward: jest.fn(),\n  prefetch: jest.fn().mockResolvedValue(undefined),\n  beforePopState: jest.fn(),\n  events: {\n    on: jest.fn(),\n    off: jest.fn(),\n    emit: jest.fn(),\n  },\n  isFallback: false,\n  isReady: true,\n  isPreview: false,\n  isLocaleDomain: false,\n  ...overrides,\n});\n\n/**\n * Router Test Provider\n *\n * Provides Next.js router context for testing components that use router hooks.\n * Use this when testing components that call useRouter(), usePathname(), etc.\n *\n * @usage\n * ```typescript\n * import { RouterWrapper } from '@/config/jest/providers';\n *\n * const wrapper = ({ children }) => (\n *   <RouterWrapper router={{ pathname: '/dashboard', query: { id: '123' } }}>\n *     {children}\n *   </RouterWrapper>\n * );\n *\n * render(<MyComponent />, { wrapper });\n * ```\n */\nexport const RouterWrapper = ({ children, router }: RouterWrapperPropsInterface): JSX.Element => {\n  const mockRouter = createMockRouter(router);\n  return <RouterContext.Provider value={mockRouter}>{children}</RouterContext.Provider>;\n};\n"],"mappingsaAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAE,+BAAA;AAAA;AAAA,CAAAF,aAAA,GAAAG,CAAA,QAAAC,OAAA;AAIA;AAAA;AAAAJ,aAAA,GAAAG,CAAA;AACA,IAAME,gBAAgB,GAAG,SAAAA,CAACC,SAA+B;EAAA;EAAAN,aAAA,GAAAO,CAAA;EAAAP,aAAA,GAAAG,CAAA;EAAiB,OAAAK,QAAA;IACxEC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAEC,IAAI,CAACC,EAAE,EAAE;IACfC,OAAO,EAAEF,IAAI,CAACC,EAAE,EAAE;IAClBE,MAAM,EAAEH,IAAI,CAACC,EAAE,EAAE;IACjBG,IAAI,EAAEJ,IAAI,CAACC,EAAE,EAAE;IACfI,OAAO,EAAEL,IAAI,CAACC,EAAE,EAAE;IAClBK,QAAQ,EAAEN,IAAI,CAACC,EAAE,EAAE,CAACM,iBAAiB,CAACC,SAAS,CAAC;IAChDC,cAAc,EAAET,IAAI,CAACC,EAAE,EAAE;IACzBS,MAAM,EAAE;MACNC,EAAE,EAAEX,IAAI,CAACC,EAAE,EAAE;MACbW,GAAG,EAAEZ,IAAI,CAACC,EAAE,EAAE;MACdY,IAAI,EAAEb,IAAI,CAACC,EAAE;KACd;IACDa,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE,IAAI;IACbC,SAAS,EAAE,KAAK;IAChBC,cAAc,EAAE;EAAK,GAClB1B,SAAS;AAtB4D,CAuBxE;AAEF;;;;;;;;;;;;;;;;;;;AAAA;AAAAN,aAAA,GAAAG,CAAA;AAmBO,IAAM8B,aAAa,GAAG,SAAAA,CAACC,EAAiD;EAAA;EAAAlC,aAAA,GAAAO,CAAA;MAA/C4B,QAAQ;IAAA;IAAA,CAAAnC,aAAA,GAAAG,CAAA,QAAA+B,EAAA,CAAAC,QAAA;IAAEC,MAAM;IAAA;IAAA,CAAApC,aAAA,GAAAG,CAAA,QAAA+B,EAAA,CAAAE,MAAA;EAC9C,IAAMC,UAAU;EAAA;EAAA,CAAArC,aAAA,GAAAG,CAAA,QAAGE,gBAAgB,CAAC+B,MAAM,CAAC;EAAC;EAAApC,aAAA,GAAAG,CAAA;EAC5C,OAAO,IAAAmC,aAAA,CAAAC,GAAA,EAACrC,+BAAA,CAAAsC,aAAa,CAACC,QAAQ;IAACC,KAAK,EAAEL,UAAU;IAAAF,QAAA,EAAGA;EAAQ,EAA0B;AACvF,CAAC;AAAC;AAAAnC,aAAA,GAAAG,CAAA;AAHWwC,OAAA,CAAAV,aAAa,GAAAA,aAAA","ignoreList":[]}