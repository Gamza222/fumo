{"version":3,"names":["cov_2lf0fvopgf","actualCoverage","route_enums_1","s","require","route_constants_1","exports","defaultRouteConfig","loader","type","LoaderType","CUSTOM","enabled","minDisplayTime","MIN_DISPLAY_TIMES","NORMAL","showProgress","showStepDetails","cache","strategy","CacheStrategy","CACHE","ttl","CACHE_TIMES","routeConfigs","_a","AppRoute","HOME","route","RouteType","PUBLIC","FULL","SLOW","customMessage","key","concat","CACHE_KEY_PREFIXES","ROUTE","metadata","title","description","requiresAuth","ABOUT","__assign","getRouteConfig","f","specificConfig","b","_b","getCurrentRouteConfig","pathname","safePathname","exactRoute","Object","values","find","config","isMatched","_i","length","startsWith","createRouteConfigSelector","currentRoute"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/config/route/route.config.ts"],"sourcesContent":["import { AppRoute, RouteType, LoaderType, CacheStrategy } from './route.enums';\nimport {\n  RouteConfig,\n  DefaultRouteConfig,\n  RouteConfigSelector,\n  CurrentRouteInfo,\n} from './route.types';\nimport { CACHE_TIMES, MIN_DISPLAY_TIMES, CACHE_KEY_PREFIXES } from './route.constants';\n\n/**\n * Default configuration that applies to all routes\n */\nexport const defaultRouteConfig: DefaultRouteConfig = {\n  loader: {\n    type: LoaderType.CUSTOM,\n    enabled: true,\n    minDisplayTime: MIN_DISPLAY_TIMES.NORMAL,\n    showProgress: true,\n    showStepDetails: false,\n  },\n  cache: {\n    strategy: CacheStrategy.CACHE,\n    enabled: true,\n    ttl: CACHE_TIMES[CacheStrategy.CACHE],\n  },\n};\n\n/**\n * Route-specific configurations\n * Override defaults for specific routes\n */\nexport const routeConfigs: Record<AppRoute, Partial<RouteConfig>> = {\n  [AppRoute.HOME]: {\n    route: AppRoute.HOME,\n    type: RouteType.PUBLIC,\n    loader: {\n      type: LoaderType.FULL,\n      enabled: true,\n      minDisplayTime: MIN_DISPLAY_TIMES.SLOW,\n      showProgress: true,\n      showStepDetails: true,\n      customMessage: 'Loading...',\n    },\n    cache: {\n      strategy: CacheStrategy.CACHE,\n      enabled: true,\n      key: `${CACHE_KEY_PREFIXES.ROUTE}-home`,\n    },\n    metadata: {\n      title: 'Home - Fumo',\n      description: 'Fumo main page',\n      requiresAuth: false,\n    },\n  },\n\n  [AppRoute.ABOUT]: {\n    route: AppRoute.ABOUT,\n    type: RouteType.PUBLIC,\n    ...defaultRouteConfig,\n    metadata: {\n      title: 'About - Fumo',\n      description: 'Learn more about Fumo',\n      requiresAuth: false,\n    },\n  },\n};\n\n/**\n * Get route configuration for a specific route\n * Merges route-specific config with defaults\n */\nexport const getRouteConfig = (route: AppRoute): RouteConfig => {\n  const specificConfig = routeConfigs[route];\n\n  return {\n    route,\n    type: specificConfig.type || RouteType.PUBLIC,\n    loader: {\n      ...defaultRouteConfig.loader,\n      ...specificConfig.loader,\n    },\n    cache: {\n      ...defaultRouteConfig.cache,\n      ...specificConfig.cache,\n      ttl:\n        specificConfig.cache?.ttl ||\n        CACHE_TIMES[specificConfig.cache?.strategy || CacheStrategy.CACHE],\n    },\n    metadata: specificConfig.metadata || {},\n  };\n};\n\n/**\n * Get current route configuration based on pathname\n * Handles dynamic routes and fallbacks\n */\nexport const getCurrentRouteConfig = (pathname: string | null | undefined): CurrentRouteInfo => {\n  // Handle null/undefined pathname\n  const safePathname = pathname || '/';\n\n  // Try exact match first\n  const exactRoute = Object.values(AppRoute).find((route) => route === (safePathname as AppRoute));\n\n  if (exactRoute) {\n    return {\n      route: exactRoute,\n      pathname: safePathname,\n      config: getRouteConfig(exactRoute),\n      isMatched: true,\n    };\n  }\n\n  // Handle dynamic routes and patterns\n  for (const route of Object.values(AppRoute)) {\n    if (safePathname.startsWith(route) && route !== AppRoute.HOME) {\n      return {\n        route: route as AppRoute,\n        pathname: safePathname,\n        config: getRouteConfig(route as AppRoute),\n        isMatched: true,\n      };\n    }\n  }\n\n  // Fallback to home route\n  return {\n    route: AppRoute.HOME,\n    pathname: safePathname,\n    config: getRouteConfig(AppRoute.HOME),\n    isMatched: false,\n  };\n};\n\n/**\n * Create a route configuration selector\n * Useful for components that need to react to route changes\n */\nexport const createRouteConfigSelector = (): RouteConfigSelector => {\n  return (pathname: string) => {\n    const currentRoute = getCurrentRouteConfig(pathname);\n    return currentRoute.isMatched ? currentRoute.config : null;\n  };\n};\n"],"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","ignoreList":[]}