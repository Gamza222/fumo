{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/location/location.mock.ts","mappings":";;;;;;;;;;;;;;AAEA,IAAM,YAAY,GAAG,UAAC,UAAwC;;IAAxC,2BAAA,EAAA,gCAAwC;IAC5D,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAEhC,IAAM,YAAY,yBACb,GAAG,KACN,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,EAClB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,eAAe;gBACb,MAAM,EAAE,CAAC;gBACT,QAAQ,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK;gBACrB,IAAI,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI;;YAChB,GAAC,MAAM,CAAC,QAAQ,IAAG,IAAI,CAAC,EAAE,EAAE;iBAE9B,QAAQ,EAAE,cAAM,OAAA,GAAG,CAAC,QAAQ,EAAE,EAAd,CAAc;QAC9B,oCAAoC;QACpC,QAAQ,EAAE,GAAG,CAAC,QAAQ,EACtB,IAAI,EAAE,GAAG,CAAC,IAAI,EACd,MAAM,EAAE,GAAG,CAAC,MAAM,EAClB,QAAQ,EAAE,GAAG,CAAC,QAAQ,EACtB,IAAI,EAAE,GAAG,CAAC,IAAI,EACd,QAAQ,EAAE,GAAG,CAAC,QAAQ,EACtB,IAAI,EAAE,GAAG,CAAC,IAAI,EACd,MAAM,EAAE,GAAG,CAAC,MAAM,EAClB,IAAI,EAAE,GAAG,CAAC,IAAI,GACf,CAAC;IAEF,4CAA4C;IAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;QACxC,KAAK,EAAE,YAAY;QACnB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAKO,oCAAY;AAHrB,6BAA6B;AAC7B,YAAY,EAAE,CAAC","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/browser/lib/location/location.mock.ts"],"sourcesContent":["import { mockLocationInterface } from '../../types/types';\n\nconst mockLocation = (initialUrl: string = 'http://localhost/'): mockLocationInterface => {\n  const url = new URL(initialUrl);\n\n  const locationMock: mockLocationInterface = {\n    ...url,\n    assign: jest.fn(),\n    replace: jest.fn(),\n    reload: jest.fn(),\n    ancestorOrigins: {\n      length: 0,\n      contains: () => false,\n      item: () => null,\n      [Symbol.iterator]: jest.fn(),\n    },\n    toString: () => url.toString(),\n    // Ensure pathname is explicitly set\n    pathname: url.pathname,\n    href: url.href,\n    origin: url.origin,\n    protocol: url.protocol,\n    host: url.host,\n    hostname: url.hostname,\n    port: url.port,\n    search: url.search,\n    hash: url.hash,\n  };\n\n  // Allows properties to be modified in tests\n  Object.defineProperty(window, 'location', {\n    value: locationMock,\n    writable: true,\n  });\n\n  return locationMock;\n};\n\n// Initialize the global mock\nmockLocation();\n\nexport { mockLocation };\n"],"version":3}