a214a827aa567e4e18bde6a7cef95305
"use strict";

/**
 * External Library Mocks
 *
 * Type: ðŸ”„ AUTOMATIC & ðŸ“¦ MANUAL
 *
 * This file exports external library mocks and auto-applies global mocks.
 * Some mocks are automatically applied globally (like Sentry), while others
 * need to be manually imported and configured in tests.
 *
 * Organization follows SOLID principles:
 * - sentry.mock.ts: Complete Sentry API mock (SRP: Sentry error reporting)
 */
/* istanbul ignore next */
function cov_pumk6xlgc() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/index.ts";
  var hash = "4f67d1a5ed3dca8775da92a4adfec099ca138770";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "1": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 81
        }
      },
      "2": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "3": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "4": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 122
        }
      },
      "5": {
        start: {
          line: 22,
          column: 84
        },
        end: {
          line: 22,
          column: 116
        }
      },
      "6": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 134
        }
      },
      "7": {
        start: {
          line: 23,
          column: 90
        },
        end: {
          line: 23,
          column: 128
        }
      },
      "8": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 132
        }
      },
      "9": {
        start: {
          line: 24,
          column: 89
        },
        end: {
          line: 24,
          column: 126
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 70
          },
          end: {
            line: 22,
            column: 71
          }
        },
        loc: {
          start: {
            line: 22,
            column: 82
          },
          end: {
            line: 22,
            column: 118
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 76
          },
          end: {
            line: 23,
            column: 77
          }
        },
        loc: {
          start: {
            line: 23,
            column: 88
          },
          end: {
            line: 23,
            column: 130
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 75
          },
          end: {
            line: 24,
            column: 76
          }
        },
        loc: {
          start: {
            line: 24,
            column: 87
          },
          end: {
            line: 24,
            column: 128
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/index.ts",
      mappings: ";AAAA;;;;;;;;;;;GAWG;;;AAEH,0CAA0C;AAC1C,uBAAqB;AAErB,+EAA+E;AAC/E,+BAA+B;AAC/B,+EAA+E;AAE/E,iDAAkF;AAAzE,yGAAA,UAAU,OAAA;AAAE,+GAAA,gBAAgB,OAAA;AAAE,8GAAA,eAAe,OAAA;AAYtD,+EAA+E;AAC/E,wBAAwB;AACxB,+EAA+E;AAE/E,yDAAyD;AACzD,2BAA2B;AAC3B,qBAAqB;AACrB,gBAAgB;AAChB,kBAAkB;AAClB,OAAO",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/external/index.ts"],
      sourcesContent: ["/**\n * External Library Mocks\n *\n * Type: \uD83D\uDD04 AUTOMATIC & \uD83D\uDCE6 MANUAL\n *\n * This file exports external library mocks and auto-applies global mocks.\n * Some mocks are automatically applied globally (like Sentry), while others\n * need to be manually imported and configured in tests.\n *\n * Organization follows SOLID principles:\n * - sentry.mock.ts: Complete Sentry API mock (SRP: Sentry error reporting)\n */\n\n// Auto-apply global mocks (must be first)\nimport './lib/setup';\n\n// ============================================================================\n// ANALYTICS & MONITORING MOCKS\n// ============================================================================\n\nexport { mockSentry, createSentryMock, sentryTestUtils } from './lib/sentry.mock';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport type {\n  MockSentryInterface,\n  MockSentryTransaction,\n  SentryTestUtilsInterface,\n} from './types/types';\n\n// ============================================================================\n// FUTURE EXTERNAL MOCKS\n// ============================================================================\n\n// NOTE: Add other external library mocks here as needed:\n// - Google Analytics mocks\n// - Stripe SDK mocks\n// - Auth0 mocks\n// - AWS SDK mocks\n// etc.\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f67d1a5ed3dca8775da92a4adfec099ca138770"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pumk6xlgc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pumk6xlgc();
cov_pumk6xlgc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pumk6xlgc().s[1]++;
exports.sentryTestUtils = exports.createSentryMock = exports.mockSentry = void 0;
// Auto-apply global mocks (must be first)
/* istanbul ignore next */
cov_pumk6xlgc().s[2]++;
require("./lib/setup");
// ============================================================================
// ANALYTICS & MONITORING MOCKS
// ============================================================================
var sentry_mock_1 =
/* istanbul ignore next */
(cov_pumk6xlgc().s[3]++, require("./lib/sentry.mock"));
/* istanbul ignore next */
cov_pumk6xlgc().s[4]++;
Object.defineProperty(exports, "mockSentry", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pumk6xlgc().f[0]++;
    cov_pumk6xlgc().s[5]++;
    return sentry_mock_1.mockSentry;
  }
});
/* istanbul ignore next */
cov_pumk6xlgc().s[6]++;
Object.defineProperty(exports, "createSentryMock", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pumk6xlgc().f[1]++;
    cov_pumk6xlgc().s[7]++;
    return sentry_mock_1.createSentryMock;
  }
});
/* istanbul ignore next */
cov_pumk6xlgc().s[8]++;
Object.defineProperty(exports, "sentryTestUtils", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pumk6xlgc().f[2]++;
    cov_pumk6xlgc().s[9]++;
    return sentry_mock_1.sentryTestUtils;
  }
});
// ============================================================================
// FUTURE EXTERNAL MOCKS
// ============================================================================
// NOTE: Add other external library mocks here as needed:
// - Google Analytics mocks
// - Stripe SDK mocks
// - Auth0 mocks
// - AWS SDK mocks
// etc.
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcHVtazZ4bGdjIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJpbnB1dFNvdXJjZU1hcCIsImZpbGUiLCJtYXBwaW5ncyIsIm5hbWVzIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwidmVyc2lvbiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJyZXF1aXJlIiwic2VudHJ5X21vY2tfMSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsImVudW1lcmFibGUiLCJnZXQiLCJtb2NrU2VudHJ5IiwiY3JlYXRlU2VudHJ5TW9jayIsInNlbnRyeVRlc3RVdGlscyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3NoYXJlZC90ZXN0aW5nL21vY2tzL2V4dGVybmFsL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgTGlicmFyeSBNb2Nrc1xuICpcbiAqIFR5cGU6IPCflIQgQVVUT01BVElDICYg8J+TpiBNQU5VQUxcbiAqXG4gKiBUaGlzIGZpbGUgZXhwb3J0cyBleHRlcm5hbCBsaWJyYXJ5IG1vY2tzIGFuZCBhdXRvLWFwcGxpZXMgZ2xvYmFsIG1vY2tzLlxuICogU29tZSBtb2NrcyBhcmUgYXV0b21hdGljYWxseSBhcHBsaWVkIGdsb2JhbGx5IChsaWtlIFNlbnRyeSksIHdoaWxlIG90aGVyc1xuICogbmVlZCB0byBiZSBtYW51YWxseSBpbXBvcnRlZCBhbmQgY29uZmlndXJlZCBpbiB0ZXN0cy5cbiAqXG4gKiBPcmdhbml6YXRpb24gZm9sbG93cyBTT0xJRCBwcmluY2lwbGVzOlxuICogLSBzZW50cnkubW9jay50czogQ29tcGxldGUgU2VudHJ5IEFQSSBtb2NrIChTUlA6IFNlbnRyeSBlcnJvciByZXBvcnRpbmcpXG4gKi9cblxuLy8gQXV0by1hcHBseSBnbG9iYWwgbW9ja3MgKG11c3QgYmUgZmlyc3QpXG5pbXBvcnQgJy4vbGliL3NldHVwJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQU5BTFlUSUNTICYgTU9OSVRPUklORyBNT0NLU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgeyBtb2NrU2VudHJ5LCBjcmVhdGVTZW50cnlNb2NrLCBzZW50cnlUZXN0VXRpbHMgfSBmcm9tICcuL2xpYi9zZW50cnkubW9jayc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCB0eXBlIHtcbiAgTW9ja1NlbnRyeUludGVyZmFjZSxcbiAgTW9ja1NlbnRyeVRyYW5zYWN0aW9uLFxuICBTZW50cnlUZXN0VXRpbHNJbnRlcmZhY2UsXG59IGZyb20gJy4vdHlwZXMvdHlwZXMnO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGVVRVUkUgRVhURVJOQUwgTU9DS1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gTk9URTogQWRkIG90aGVyIGV4dGVybmFsIGxpYnJhcnkgbW9ja3MgaGVyZSBhcyBuZWVkZWQ6XG4vLyAtIEdvb2dsZSBBbmFseXRpY3MgbW9ja3Ncbi8vIC0gU3RyaXBlIFNESyBtb2Nrc1xuLy8gLSBBdXRoMCBtb2Nrc1xuLy8gLSBBV1MgU0RLIG1vY2tzXG4vLyBldGMuXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7OztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBekIsSUFBQTtFQUFBO0VBQUEsSUFBQTBCLFFBQUEsR0FBQXpCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBdUIsUUFBQSxDQUFBM0IsSUFBQSxLQUFBMkIsUUFBQSxDQUFBM0IsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTBCLFFBQUEsQ0FBQTNCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQXVCLGNBQUEsR0FBQUQsUUFBQSxDQUFBM0IsSUFBQTtFQUFBO0lBYUE7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQTZCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUE3QixhQUFBO0FBQUFBLGFBQUEsR0FBQWlCLENBQUE7Ozs7Ozs7QUFBQTtBQUFBO0FBQUFqQixhQUFBLEdBQUFpQixDQUFBO0FBQ0FhLE9BQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQSxJQUFBQyxhQUFBO0FBQUE7QUFBQSxDQUFBL0IsYUFBQSxHQUFBaUIsQ0FBQSxPQUFBYSxPQUFBO0FBQWtGO0FBQUE5QixhQUFBLEdBQUFpQixDQUFBO0FBQXpFZSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxVQUFBO0VBQUFDLEdBQUEsV0FBQUEsQ0FBQTtJQUFBO0lBQUFwQyxhQUFBLEdBQUFrQixDQUFBO0lBQUFsQixhQUFBLEdBQUFpQixDQUFBO0lBQUEsT0FBQWMsYUFBQSxDQUFBTSxVQUFVO0VBQUE7QUFBQTtBQUFBO0FBQUFyQyxhQUFBLEdBQUFpQixDQUFBO0FBQUVlLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLFVBQUE7RUFBQUMsR0FBQSxXQUFBQSxDQUFBO0lBQUE7SUFBQXBDLGFBQUEsR0FBQWtCLENBQUE7SUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7SUFBQSxPQUFBYyxhQUFBLENBQUFPLGdCQUFnQjtFQUFBO0FBQUE7QUFBQTtBQUFBdEMsYUFBQSxHQUFBaUIsQ0FBQTtBQUFFZSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxVQUFBO0VBQUFDLEdBQUEsV0FBQUEsQ0FBQTtJQUFBO0lBQUFwQyxhQUFBLEdBQUFrQixDQUFBO0lBQUFsQixhQUFBLEdBQUFpQixDQUFBO0lBQUEsT0FBQWMsYUFBQSxDQUFBUSxlQUFlO0VBQUE7QUFBQTtBQVl0RDtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJpZ25vcmVMaXN0IjpbXX0=