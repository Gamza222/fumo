{"version":3,"names":["cov_2j2aaxvtyl","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","UserRole","exports","Permission","SecurityEventType","SecuritySeverity"],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/security/types/security.types.ts"],"sourcesContent":["/**\n * Security-related type definitions\n */\n\n// ============================================================================\n// AUTHENTICATION TYPES\n// ============================================================================\n\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  password: string;\n  role: UserRole;\n  permissions: Permission[];\n  isActive: boolean;\n  lastLoginAt?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  USER = 'user',\n  MODERATOR = 'moderator',\n  GUEST = 'guest',\n}\n\nexport enum Permission {\n  // User permissions\n  READ_USERS = 'read:users',\n  WRITE_USERS = 'write:users',\n  DELETE_USERS = 'delete:users',\n\n  // Content permissions\n  READ_CONTENT = 'read:content',\n  WRITE_CONTENT = 'write:content',\n  DELETE_CONTENT = 'delete:content',\n\n  // System permissions\n  READ_SYSTEM = 'read:system',\n  WRITE_SYSTEM = 'write:system',\n  ADMIN_SYSTEM = 'admin:system',\n}\n\nexport interface AuthToken {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  tokenType: 'Bearer';\n}\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n}\n\nexport interface RegisterData {\n  email: string;\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\n// ============================================================================\n// AUTHORIZATION TYPES\n// ============================================================================\n\nexport interface AuthorizationContext {\n  user: User;\n  resource?: string;\n  action?: string;\n  resourceId?: string;\n}\n\nexport interface PermissionCheck {\n  hasPermission: boolean;\n  reason?: string;\n}\n\n// ============================================================================\n// SECURITY EVENT TYPES\n// ============================================================================\n\nexport enum SecurityEventType {\n  LOGIN_SUCCESS = 'login_success',\n  LOGIN_FAILED = 'login_failed',\n  LOGOUT = 'logout',\n  PASSWORD_CHANGE = 'password_change',\n  PERMISSION_DENIED = 'permission_denied',\n  SUSPICIOUS_ACTIVITY = 'suspicious_activity',\n  RATE_LIMIT_EXCEEDED = 'rate_limit_exceeded',\n  INVALID_TOKEN = 'invalid_token',\n  TOKEN_EXPIRED = 'token_expired',\n}\n\nexport interface SecurityEvent {\n  id: string;\n  type: SecurityEventType;\n  userId?: string;\n  ipAddress: string;\n  userAgent: string;\n  timestamp: Date;\n  details: Record<string, unknown>;\n  severity: SecuritySeverity;\n}\n\nexport enum SecuritySeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical',\n}\n\n// ============================================================================\n// RATE LIMITING TYPES\n// ============================================================================\n\nexport interface RateLimitInfo {\n  limit: number;\n  remaining: number;\n  reset: Date;\n  retryAfter?: number;\n}\n\nexport interface RateLimitConfig {\n  windowMs: number;\n  maxRequests: number;\n  keyGenerator?: (req: unknown) => string;\n  skipSuccessfulRequests?: boolean;\n  skipFailedRequests?: boolean;\n}\n\nexport interface SecurityConfig {\n  headers: SecurityHeaders;\n  cors: CorsConfig;\n  auth: AuthConfig;\n  rateLimit: RateLimitConfig;\n}\n\nexport interface CorsConfig {\n  origin: string | string[];\n  credentials: boolean;\n  methods: string[];\n  allowedHeaders: string[];\n  exposedHeaders: string[];\n  maxAge: number;\n}\n\nexport interface AuthConfig {\n  jwtSecret: string;\n  jwtExpiresIn: string;\n  refreshTokenExpiresIn: string;\n  passwordMinLength: number;\n  passwordRequireSpecialChars: boolean;\n  passwordRequireNumbers: boolean;\n  passwordRequireUppercase: boolean;\n  sessionTimeout: number;\n}\n\n// ============================================================================\n// CSP TYPES\n// ============================================================================\n\nexport interface CSPDirective {\n  name: string;\n  values: string[];\n}\n\nexport interface CSPViolation {\n  blockedURI: string;\n  documentURI: string;\n  effectiveDirective: string;\n  originalPolicy: string;\n  referrer: string;\n  violatedDirective: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n// ============================================================================\n// SECURITY HEADERS TYPES\n// ============================================================================\n\nexport interface SecurityHeaders {\n  'Content-Security-Policy'?: string;\n  'X-Frame-Options'?: string;\n  'X-Content-Type-Options'?: string;\n  'Referrer-Policy'?: string;\n  'Permissions-Policy'?: string;\n  'Strict-Transport-Security'?: string;\n  'X-XSS-Protection'?: string;\n  'Cross-Origin-Embedder-Policy'?: string;\n  'Cross-Origin-Opener-Policy'?: string;\n  'Cross-Origin-Resource-Policy'?: string;\n}\n\n// ============================================================================\n// ENCRYPTION TYPES\n// ============================================================================\n\nexport interface EncryptionConfig {\n  algorithm: string;\n  keyLength: number;\n  ivLength: number;\n  tagLength: number;\n}\n\nexport interface EncryptedData {\n  data: string;\n  iv: string;\n  tag: string;\n  algorithm: string;\n}\n"],"mappings":";;AAAA;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC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","ignoreList":[]}