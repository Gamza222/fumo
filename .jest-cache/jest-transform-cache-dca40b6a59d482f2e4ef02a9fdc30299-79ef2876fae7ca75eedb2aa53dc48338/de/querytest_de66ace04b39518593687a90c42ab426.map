{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/query/ui/query.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/providers/query/ui/query.test.tsx"],"sourcesContent":["/**\n * QueryProvider Tests\n *\n * Tests for the React Query provider component.\n */\n\nimport { render, screen } from '@testing-library/react';\nimport QueryProvider from './queryProvider';\n\n// Mock React Query\njest.mock('@tanstack/react-query', () => ({\n  QueryClientProvider: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid=\"query-client-provider\">{children}</div>\n  ),\n}));\n\n// Mock queryClient\njest.mock('../../../data/react-query/queryClient', () => ({\n  queryClient: {\n    getQueryData: jest.fn(),\n    setQueryData: jest.fn(),\n    invalidateQueries: jest.fn(),\n  },\n}));\n\ndescribe('QueryProvider', () => {\n  it('should render children wrapped in QueryClientProvider', () => {\n    const { getByTestId, getByText } = render(\n      <QueryProvider>\n        <div>Test Child</div>\n      </QueryProvider>\n    );\n\n    expect(getByTestId('query-client-provider')).toBeInTheDocument();\n    expect(getByText('Test Child')).toBeInTheDocument();\n  });\n\n  it('should render multiple children', () => {\n    const { getByText } = render(\n      <QueryProvider>\n        <div>Child 1</div>\n        <div>Child 2</div>\n        <span>Child 3</span>\n      </QueryProvider>\n    );\n\n    expect(getByText('Child 1')).toBeInTheDocument();\n    expect(getByText('Child 2')).toBeInTheDocument();\n    expect(getByText('Child 3')).toBeInTheDocument();\n  });\n\n  it('should render without children', () => {\n    const { getByTestId } = render(\n      <QueryProvider>\n        <div>Test</div>\n      </QueryProvider>\n    );\n\n    expect(getByTestId('query-client-provider')).toBeInTheDocument();\n  });\n\n  it('should pass queryClient to QueryClientProvider', () => {\n    render(\n      <QueryProvider>\n        <div>Test Child</div>\n      </QueryProvider>\n    );\n\n    // The QueryProvider should render without errors\n    expect(screen.getByText('Test Child')).toBeInTheDocument();\n  });\n\n  it('should handle complex nested children', () => {\n    const { getByText } = render(\n      <QueryProvider>\n        <div>\n          <h1>Title</h1>\n          <p>Description</p>\n          <button>Click me</button>\n        </div>\n      </QueryProvider>\n    );\n\n    expect(getByText('Title')).toBeInTheDocument();\n    expect(getByText('Description')).toBeInTheDocument();\n    expect(getByText('Click me')).toBeInTheDocument();\n  });\n\n  it('should render with conditional children', () => {\n    const showChild = true;\n\n    const { getByText, queryByText } = render(\n      <QueryProvider>\n        {showChild && <div>Conditional Child</div>}\n        {!showChild && <div>Hidden Child</div>}\n      </QueryProvider>\n    );\n\n    expect(getByText('Conditional Child')).toBeInTheDocument();\n    expect(queryByText('Hidden Child')).not.toBeInTheDocument();\n  });\n});\n"],"version":3}