{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/security/lib/security-headers/security-headers.middleware.test.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/security/lib/security-headers/security-headers.middleware.test.ts"],"sourcesContent":["/**\n * Security Headers Middleware Tests\n */\n\n// Import Next.js server mocks from factory\nimport { MockNextRequest } from '@/shared/testing/mocks/nextjs';\n\n// import { NextRequest } from 'next/server';\nimport {\n  applySecurityHeaders,\n  corsMiddleware,\n  generateNonce,\n  isSuspiciousRequest,\n  reportCSPViolation,\n  securityMiddleware,\n  updateCSPWithNonce,\n} from './security-headers.middleware';\n\ndescribe('Security Headers Middleware', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('applySecurityHeaders', () => {\n    it('should apply security headers to response', () => {\n      const mockResponse = {\n        headers: {\n          set: jest.fn(),\n        },\n      };\n\n      applySecurityHeaders(mockResponse as any);\n\n      expect(mockResponse.headers.set).toHaveBeenCalledWith(\n        'Content-Security-Policy',\n        expect.any(String)\n      );\n      expect(mockResponse.headers.set).toHaveBeenCalledWith('X-Frame-Options', 'DENY');\n      expect(mockResponse.headers.set).toHaveBeenCalledWith('X-Content-Type-Options', 'nosniff');\n    });\n  });\n\n  describe('generateNonce', () => {\n    it('should generate a nonce string', () => {\n      const nonce = generateNonce();\n      expect(nonce).toMatch(/^[0-9a-f]{32}$/);\n    });\n\n    it('should generate different nonces', () => {\n      const nonce1 = generateNonce();\n      const nonce2 = generateNonce();\n      expect(nonce1).not.toBe(nonce2);\n    });\n  });\n\n  describe('updateCSPWithNonce', () => {\n    it('should add nonce to CSP', () => {\n      const nonce = 'test-nonce';\n      const updatedCSP = updateCSPWithNonce(nonce);\n\n      expect(updatedCSP).toContain(`'nonce-${nonce}'`);\n    });\n  });\n\n  describe('reportCSPViolation', () => {\n    it('should log CSP violation', () => {\n      const consoleSpy = jest.spyOn(console, 'error').mockImplementation();\n      const consoleLogSpy = jest.spyOn(console, 'log').mockImplementation();\n\n      const violation = {\n        blockedURI: 'http://example.com/script.js',\n        documentURI: 'http://localhost:3000/',\n        violatedDirective: 'script-src',\n        effectiveDirective: 'script-src',\n        originalPolicy: \"script-src 'self'\",\n        referrer: 'http://localhost:3000/',\n      };\n\n      reportCSPViolation(violation);\n\n      expect(consoleSpy).toHaveBeenCalledWith('CSP Violation:', violation);\n      expect(consoleLogSpy).toHaveBeenCalledWith('CSP Violation Report:', expect.any(Object));\n\n      consoleSpy.mockRestore();\n      consoleLogSpy.mockRestore();\n    });\n  });\n\n  describe('isSuspiciousRequest', () => {\n    it('should detect suspicious user agents', () => {\n      const request = new MockNextRequest('http://localhost:3000/', {\n        headers: {\n          'user-agent': 'sqlmap/1.0',\n        },\n      });\n\n      expect(isSuspiciousRequest(request as any)).toBe(true);\n    });\n\n    it('should detect suspicious origins', () => {\n      const request = new MockNextRequest('http://localhost:3000/', {\n        headers: {\n          origin: 'http://localhost:8080',\n        },\n      });\n\n      expect(isSuspiciousRequest(request as any)).toBe(true);\n    });\n\n    it('should allow normal requests', () => {\n      const request = new MockNextRequest('http://localhost:3000/', {\n        headers: {\n          'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n          origin: 'http://localhost:3000',\n        },\n      });\n\n      expect(isSuspiciousRequest(request as any)).toBe(false);\n    });\n  });\n\n  describe('securityMiddleware', () => {\n    it('should block suspicious requests', () => {\n      const request = new MockNextRequest('http://localhost:3000/', {\n        headers: {\n          'user-agent': 'sqlmap/1.0',\n        },\n      });\n\n      const response = securityMiddleware(request as any);\n      expect(response.status).toBe(403);\n    });\n\n    it('should allow normal requests', () => {\n      const request = new MockNextRequest('http://localhost:3000/', {\n        headers: {\n          'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n        },\n      });\n\n      const response = securityMiddleware(request as any);\n      expect(response.status).toBe(200);\n    });\n  });\n\n  describe('corsMiddleware', () => {\n    it('should handle preflight requests', () => {\n      const request = new MockNextRequest('http://localhost:3000/api/test', {\n        method: 'OPTIONS',\n        headers: {\n          origin: 'http://localhost:3000',\n          'access-control-request-method': 'POST',\n          'access-control-request-headers': 'Content-Type',\n        },\n      });\n\n      const response = corsMiddleware(request as any);\n      expect(response.status).toBe(200);\n    });\n\n    it('should handle actual requests', () => {\n      const request = new MockNextRequest('http://localhost:3000/api/test', {\n        method: 'POST',\n        headers: {\n          origin: 'http://localhost:3000',\n        },\n      });\n\n      const response = corsMiddleware(request as any);\n      expect(response.status).toBe(200);\n    });\n  });\n});\n"],"version":3}