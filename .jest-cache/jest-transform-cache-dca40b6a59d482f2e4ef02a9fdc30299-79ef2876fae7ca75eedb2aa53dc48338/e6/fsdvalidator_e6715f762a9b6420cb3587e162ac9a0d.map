{"file":"/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/lib/dev-tools/generators/fsd-validator/fsd-validator.ts"],"sourcesContent":["import * as fs from 'fs';\nimport path from 'path';\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\ninterface FSDRule {\n  from: string;\n  to: string;\n  allowed: boolean;\n  reason: string;\n}\n\n// FSD Architecture Rules\nconst FSD_RULES: FSDRule[] = [\n  // Shared layer rules\n  { from: 'shared/ui', to: 'shared/lib', allowed: true, reason: 'UI can use shared utilities' },\n  { from: 'shared/ui', to: 'shared/model', allowed: true, reason: 'UI can use shared models' },\n  { from: 'shared/lib', to: 'shared/model', allowed: true, reason: 'Lib can use shared models' },\n  {\n    from: 'shared/model',\n    to: 'shared/ui',\n    allowed: false,\n    reason: 'Models should not depend on UI',\n  },\n  {\n    from: 'shared/model',\n    to: 'shared/lib',\n    allowed: false,\n    reason: 'Models should not depend on lib',\n  },\n\n  // Widgets layer rules\n  { from: 'widgets', to: 'shared', allowed: true, reason: 'Widgets can use shared components' },\n  {\n    from: 'widgets',\n    to: 'infrastructure',\n    allowed: true,\n    reason: 'Widgets can use infrastructure',\n  },\n  {\n    from: 'widgets',\n    to: 'widgets',\n    allowed: false,\n    reason: 'Widgets should not depend on other widgets',\n  },\n\n  // Infrastructure layer rules\n  {\n    from: 'infrastructure',\n    to: 'shared',\n    allowed: true,\n    reason: 'Infrastructure can use shared utilities',\n  },\n  {\n    from: 'infrastructure',\n    to: 'widgets',\n    allowed: false,\n    reason: 'Infrastructure should not depend on widgets',\n  },\n  {\n    from: 'infrastructure',\n    to: 'infrastructure',\n    allowed: true,\n    reason: 'Infrastructure can use other infrastructure',\n  },\n\n  // App layer rules\n  { from: 'app', to: 'shared', allowed: true, reason: 'App can use shared components' },\n  { from: 'app', to: 'widgets', allowed: true, reason: 'App can use widgets' },\n  { from: 'app', to: 'infrastructure', allowed: true, reason: 'App can use infrastructure' },\n];\n\nexport function fsdValidator(): ValidationResult {\n  const result: ValidationResult = {\n    isValid: true,\n    errors: [],\n    warnings: [],\n  };\n\n  try {\n    // Get all TypeScript files\n    const files = getAllTsFiles('src');\n\n    for (const file of files) {\n      const violations = validateFile(file);\n      result.errors.push(...violations.errors);\n      result.warnings.push(...violations.warnings);\n    }\n\n    result.isValid = result.errors.length === 0;\n\n    if (result.errors.length > 0) {\n      // FSD Validation Failed\n      result.errors.forEach((_error) => {\n        // Error: ${_error}\n      });\n    }\n\n    if (result.warnings.length > 0) {\n      // FSD Warnings\n      result.warnings.forEach((_warning) => {\n        // Warning: ${_warning}\n      });\n    }\n\n    if (result.isValid && result.warnings.length === 0) {\n      // FSD Validation Passed - No violations found\n    }\n  } catch (error) {\n    result.isValid = false;\n    result.errors.push(`Validation failed: ${String(error)}`);\n  }\n\n  return result;\n}\n\nfunction getAllTsFiles(dir: string): string[] {\n  const files: string[] = [];\n\n  if (!fs.existsSync(dir)) {\n    return files;\n  }\n\n  const items = fs.readdirSync(dir);\n\n  for (const item of items) {\n    const fullPath = path.join(dir, item);\n    const stat = fs.statSync(fullPath);\n\n    if (stat.isDirectory()) {\n      files.push(...getAllTsFiles(fullPath));\n    } else if (item.endsWith('.ts') || item.endsWith('.tsx')) {\n      files.push(fullPath);\n    }\n  }\n\n  return files;\n}\n\nfunction validateFile(filePath: string): { errors: string[]; warnings: string[] } {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n\n  try {\n    const content = fs.readFileSync(filePath, 'utf-8');\n    const imports = extractImports(content);\n\n    for (const importPath of imports) {\n      const violation = checkImportViolation(filePath, importPath);\n      if (violation) {\n        if (violation.severity === 'error') {\n          errors.push(violation.message);\n        } else {\n          warnings.push(violation.message);\n        }\n      }\n    }\n  } catch (error) {\n    errors.push(`Failed to read file ${filePath}: ${String(error)}`);\n  }\n\n  return { errors, warnings };\n}\n\nfunction extractImports(content: string): string[] {\n  const imports: string[] = [];\n  const importRegex = /import.*from\\s+['\"]([^'\"]+)['\"]/g;\n  let match;\n\n  while ((match = importRegex.exec(content)) !== null) {\n    const importPath = match[1];\n    // Only check internal imports (starting with @/ or ./)\n    if (\n      importPath &&\n      (importPath.startsWith('@/') || importPath.startsWith('./') || importPath.startsWith('../'))\n    ) {\n      imports.push(importPath);\n    }\n  }\n\n  return imports;\n}\n\nfunction checkImportViolation(\n  filePath: string,\n  importPath: string\n): { message: string; severity: 'error' | 'warning' } | null {\n  const fromLayer = getLayerFromPath(filePath);\n  const toLayer = getLayerFromPath(importPath);\n\n  if (!fromLayer || !toLayer) {\n    return null; // Skip external imports or unrecognized paths\n  }\n\n  const rule = FSD_RULES.find((r) => r.from === fromLayer && r.to === toLayer);\n\n  if (!rule) {\n    return null; // No rule defined, assume allowed\n  }\n\n  if (!rule.allowed) {\n    return {\n      message: `❌ ${filePath}: Cannot import from ${toLayer} (${rule.reason})`,\n      severity: 'error',\n    };\n  }\n\n  return null; // Import is allowed\n}\n\nfunction getLayerFromPath(filePath: string): string | null {\n  // Convert file path to layer path\n  const normalizedPath = filePath.replace(/\\\\/g, '/');\n\n  if (normalizedPath.includes('/shared/ui/')) return 'shared/ui';\n  if (normalizedPath.includes('/shared/lib/')) return 'shared/lib';\n  if (normalizedPath.includes('/shared/model/')) return 'shared/model';\n  if (normalizedPath.includes('/widgets/')) return 'widgets';\n  if (normalizedPath.includes('/infrastructure/')) return 'infrastructure';\n  if (normalizedPath.includes('/app/')) return 'app';\n\n  return null;\n}\n"],"version":3}