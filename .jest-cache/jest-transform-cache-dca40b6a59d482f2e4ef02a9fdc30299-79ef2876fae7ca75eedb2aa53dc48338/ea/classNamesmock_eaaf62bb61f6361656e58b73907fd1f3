88829eed16a82092e58c3f69f073aa39
"use strict";

/* istanbul ignore next */
function cov_1rzqbrp53i() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/lib/classNames.mock.ts";
  var hash = "dbf00f9bece840a8407a62afb2740ae1c07ed644";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/lib/classNames.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 20
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 8,
          column: 5
        }
      },
      "2": {
        start: {
          line: 3,
          column: 40
        },
        end: {
          line: 8,
          column: 5
        }
      },
      "3": {
        start: {
          line: 3,
          column: 53
        },
        end: {
          line: 3,
          column: 54
        }
      },
      "4": {
        start: {
          line: 3,
          column: 60
        },
        end: {
          line: 3,
          column: 71
        }
      },
      "5": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 7,
          column: 9
        }
      },
      "6": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 65
        }
      },
      "7": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 65
        }
      },
      "8": {
        start: {
          line: 6,
          column: 12
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "9": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "10": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "11": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "12": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "13": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "14": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "15": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "16": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "17": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 52
          },
          end: {
            line: 2,
            column: 53
          }
        },
        loc: {
          start: {
            line: 2,
            column: 78
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 34
          }
        },
        loc: {
          start: {
            line: 14,
            column: 65
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 20
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 21
          },
          end: {
            line: 2,
            column: 25
          }
        }, {
          start: {
            line: 2,
            column: 29
          },
          end: {
            line: 2,
            column: 47
          }
        }, {
          start: {
            line: 2,
            column: 52
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 12
          }
        }, {
          start: {
            line: 3,
            column: 16
          },
          end: {
            line: 3,
            column: 38
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 7,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 7,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 14
          }
        }, {
          start: {
            line: 4,
            column: 18
          },
          end: {
            line: 4,
            column: 30
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 23
          }
        }, {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 9,
            column: 59
          }
        }],
        line: 9
      },
      "7": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "8": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/lib/classNames.mock.ts",
      mappings: ";;;;;;;;;;;;AAAA,8BAA8B;AACjB,QAAA,cAAc,GAAG,IAAI,CAAC,EAAE,CACnC,UAAC,IAAY,EAAE,KAAkB,EAAE,OAAsB;IAA1C,sBAAA,EAAA,UAAkB;IAAE,wBAAA,EAAA,YAAsB;IACvD,sEAAsE;IACtE,OAAO,eAAC,IAAI,GAAK,OAAO,QAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtD,CAAC,CACF,CAAC",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/assets/lib/classNames.mock.ts"],
      sourcesContent: ["// Mock the classNames utility\nexport const mockClassNames = jest.fn(\n  (base: string, _mods: object = {}, classes: string[] = []) => {\n    // Simple implementation that joins base class with additional classes\n    return [base, ...classes].filter(Boolean).join(' ');\n  }\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbf00f9bece840a8407a62afb2740ae1c07ed644"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rzqbrp53i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rzqbrp53i();
var __spreadArray =
/* istanbul ignore next */
(cov_1rzqbrp53i().s[0]++,
/* istanbul ignore next */
(cov_1rzqbrp53i().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1rzqbrp53i().b[0][1]++, this.__spreadArray) ||
/* istanbul ignore next */
(cov_1rzqbrp53i().b[0][2]++, function (to, from, pack) {
  /* istanbul ignore next */
  cov_1rzqbrp53i().f[0]++;
  cov_1rzqbrp53i().s[1]++;
  if (
  /* istanbul ignore next */
  (cov_1rzqbrp53i().b[2][0]++, pack) ||
  /* istanbul ignore next */
  (cov_1rzqbrp53i().b[2][1]++, arguments.length === 2)) {
    /* istanbul ignore next */
    cov_1rzqbrp53i().b[1][0]++;
    cov_1rzqbrp53i().s[2]++;
    for (var i =
      /* istanbul ignore next */
      (cov_1rzqbrp53i().s[3]++, 0), l =
      /* istanbul ignore next */
      (cov_1rzqbrp53i().s[4]++, from.length), ar; i < l; i++) {
      /* istanbul ignore next */
      cov_1rzqbrp53i().s[5]++;
      if (
      /* istanbul ignore next */
      (cov_1rzqbrp53i().b[4][0]++, ar) ||
      /* istanbul ignore next */
      (cov_1rzqbrp53i().b[4][1]++, !(i in from))) {
        /* istanbul ignore next */
        cov_1rzqbrp53i().b[3][0]++;
        cov_1rzqbrp53i().s[6]++;
        if (!ar) {
          /* istanbul ignore next */
          cov_1rzqbrp53i().b[5][0]++;
          cov_1rzqbrp53i().s[7]++;
          ar = Array.prototype.slice.call(from, 0, i);
        } else
        /* istanbul ignore next */
        {
          cov_1rzqbrp53i().b[5][1]++;
        }
        cov_1rzqbrp53i().s[8]++;
        ar[i] = from[i];
      } else
      /* istanbul ignore next */
      {
        cov_1rzqbrp53i().b[3][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1rzqbrp53i().b[1][1]++;
  }
  cov_1rzqbrp53i().s[9]++;
  return to.concat(
  /* istanbul ignore next */
  (cov_1rzqbrp53i().b[6][0]++, ar) ||
  /* istanbul ignore next */
  (cov_1rzqbrp53i().b[6][1]++, Array.prototype.slice.call(from)));
}));
/* istanbul ignore next */
cov_1rzqbrp53i().s[10]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rzqbrp53i().s[11]++;
exports.mockClassNames = void 0;
// Mock the classNames utility
/* istanbul ignore next */
cov_1rzqbrp53i().s[12]++;
exports.mockClassNames = jest.fn(function (base, _mods, classes) {
  /* istanbul ignore next */
  cov_1rzqbrp53i().f[1]++;
  cov_1rzqbrp53i().s[13]++;
  if (_mods === void 0) {
    /* istanbul ignore next */
    cov_1rzqbrp53i().b[7][0]++;
    cov_1rzqbrp53i().s[14]++;
    _mods = {};
  } else
  /* istanbul ignore next */
  {
    cov_1rzqbrp53i().b[7][1]++;
  }
  cov_1rzqbrp53i().s[15]++;
  if (classes === void 0) {
    /* istanbul ignore next */
    cov_1rzqbrp53i().b[8][0]++;
    cov_1rzqbrp53i().s[16]++;
    classes = [];
  } else
  /* istanbul ignore next */
  {
    cov_1rzqbrp53i().b[8][1]++;
  }
  // Simple implementation that joins base class with additional classes
  cov_1rzqbrp53i().s[17]++;
  return __spreadArray([base], classes, true).filter(Boolean).join(' ');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXJ6cWJycDUzaSIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJtb2NrQ2xhc3NOYW1lcyIsImplc3QiLCJmbiIsImJhc2UiLCJfbW9kcyIsImNsYXNzZXMiLCJmIiwiYiIsIl9fc3ByZWFkQXJyYXkiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW16YXJhbWF6YW5vdi9EZXNrdG9wL2Z1bW8vc3JjL3NoYXJlZC90ZXN0aW5nL21vY2tzL2Fzc2V0cy9saWIvY2xhc3NOYW1lcy5tb2NrLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1vY2sgdGhlIGNsYXNzTmFtZXMgdXRpbGl0eVxuZXhwb3J0IGNvbnN0IG1vY2tDbGFzc05hbWVzID0gamVzdC5mbihcbiAgKGJhc2U6IHN0cmluZywgX21vZHM6IG9iamVjdCA9IHt9LCBjbGFzc2VzOiBzdHJpbmdbXSA9IFtdKSA9PiB7XG4gICAgLy8gU2ltcGxlIGltcGxlbWVudGF0aW9uIHRoYXQgam9pbnMgYmFzZSBjbGFzcyB3aXRoIGFkZGl0aW9uYWwgY2xhc3Nlc1xuICAgIHJldHVybiBbYmFzZSwgLi4uY2xhc3Nlc10uZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcbiAgfVxuKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUM7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFGckM7QUFBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7QUFDYUMsT0FBQSxDQUFBQyxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxDQUNuQyxVQUFDQyxJQUFZLEVBQUVDLEtBQWtCLEVBQUVDLE9BQXNCO0VBQUE7RUFBQVQsY0FBQSxHQUFBVSxDQUFBO0VBQUFWLGNBQUEsR0FBQUUsQ0FBQTtFQUExQyxJQUFBTSxLQUFBO0lBQUE7SUFBQVIsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUUsQ0FBQTtJQUFBTSxLQUFBLEtBQWtCO0VBQUE7RUFBQTtFQUFBO0lBQUFSLGNBQUEsR0FBQVcsQ0FBQTtFQUFBO0VBQUFYLGNBQUEsR0FBQUUsQ0FBQTtFQUFFLElBQUFPLE9BQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRSxDQUFBO0lBQUFPLE9BQUEsS0FBc0I7RUFBQTtFQUFBO0VBQUE7SUFBQVQsY0FBQSxHQUFBVyxDQUFBO0VBQUE7RUFDdkQ7RUFBQVgsY0FBQSxHQUFBRSxDQUFBO0VBQ0EsT0FBT1UsYUFBQSxFQUFDTCxJQUFJLEdBQUtFLE9BQU8sUUFBRUksTUFBTSxDQUFDQyxPQUFPLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUNyRCxDQUFDLENBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=