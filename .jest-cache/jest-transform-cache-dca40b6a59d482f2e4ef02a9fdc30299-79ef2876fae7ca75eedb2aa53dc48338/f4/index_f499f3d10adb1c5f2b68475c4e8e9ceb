3957612fa32cde462e3ac3871487aec7
"use strict";

/**
 * API Mocks
 *
 * Type: ðŸ“¦ MANUAL
 *
 * This file exports all mocks for API/network clients that need to be manually imported
 * and configured in tests.
 *
 * These are MANUAL mocks - they use named exports for functions that need to be imported
 * and controlled in tests.
 */
/* istanbul ignore next */
function cov_1oqmrlthd8() {
  var path = "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/api/index.ts";
  var hash = "b7bccc6d82cdb33a387ba3da23df779d116a398c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/api/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 119
        }
      },
      "2": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 70
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 143
        }
      },
      "4": {
        start: {
          line: 19,
          column: 91
        },
        end: {
          line: 19,
          column: 137
        }
      },
      "5": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 159
        }
      },
      "6": {
        start: {
          line: 20,
          column: 99
        },
        end: {
          line: 20,
          column: 153
        }
      },
      "7": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "8": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 131
        }
      },
      "9": {
        start: {
          line: 25,
          column: 87
        },
        end: {
          line: 25,
          column: 125
        }
      },
      "10": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "11": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 137
        }
      },
      "12": {
        start: {
          line: 27,
          column: 87
        },
        end: {
          line: 27,
          column: 131
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 77
          },
          end: {
            line: 19,
            column: 78
          }
        },
        loc: {
          start: {
            line: 19,
            column: 89
          },
          end: {
            line: 19,
            column: 139
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 85
          },
          end: {
            line: 20,
            column: 86
          }
        },
        loc: {
          start: {
            line: 20,
            column: 97
          },
          end: {
            line: 20,
            column: 155
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 73
          },
          end: {
            line: 25,
            column: 74
          }
        },
        loc: {
          start: {
            line: 25,
            column: 85
          },
          end: {
            line: 25,
            column: 127
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 73
          },
          end: {
            line: 27,
            column: 74
          }
        },
        loc: {
          start: {
            line: 27,
            column: 85
          },
          end: {
            line: 27,
            column: 133
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/api/index.ts",
      mappings: ";AAAA;;;;;;;;;;GAUG;;;AAEH,+EAA+E;AAC/E,gBAAgB;AAChB,+EAA+E;AAE/E,uEAAgG;AAAvF,uHAAA,iBAAiB,OAAA;AAAE,+HAAA,yBAAyB,OAAA;AAErD,+EAA+E;AAC/E,kBAAkB;AAClB,+EAA+E;AAE/E,iEAA+D;AAAtD,+GAAA,aAAa,OAAA;AACtB,iEAAsF;AAA7E,+GAAA,mBAAmB,OAAiB",
      names: [],
      sources: ["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/api/index.ts"],
      sourcesContent: ["/**\n * API Mocks\n *\n * Type: \uD83D\uDCE6 MANUAL\n *\n * This file exports all mocks for API/network clients that need to be manually imported\n * and configured in tests.\n *\n * These are MANUAL mocks - they use named exports for functions that need to be imported\n * and controlled in tests.\n */\n\n// ============================================================================\n// GRAPHQL MOCKS\n// ============================================================================\n\nexport { mockGraphQLClient, mockGraphQLClientInstance } from './lib/graphql/graphQLClient.mock';\n\n// ============================================================================\n// WEBSOCKET MOCKS\n// ============================================================================\n\nexport { WebSocketMock } from './lib/websocket/webSocket.mock';\nexport { createWebSocketMock as mockWebSocket } from './lib/websocket/webSocket.mock';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport type {\n  mockGraphQLOperationInterface,\n  mockGraphQLResponseInterface,\n  mockWebSocketMessageInterface,\n  mockWebSocketInstanceInterface,\n  mockGraphQLCacheInterface,\n} from './types/types';\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b7bccc6d82cdb33a387ba3da23df779d116a398c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1oqmrlthd8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1oqmrlthd8();
cov_1oqmrlthd8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1oqmrlthd8().s[1]++;
exports.mockWebSocket = exports.WebSocketMock = exports.mockGraphQLClientInstance = exports.mockGraphQLClient = void 0;
// ============================================================================
// GRAPHQL MOCKS
// ============================================================================
var graphQLClient_mock_1 =
/* istanbul ignore next */
(cov_1oqmrlthd8().s[2]++, require("./lib/graphql/graphQLClient.mock"));
/* istanbul ignore next */
cov_1oqmrlthd8().s[3]++;
Object.defineProperty(exports, "mockGraphQLClient", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1oqmrlthd8().f[0]++;
    cov_1oqmrlthd8().s[4]++;
    return graphQLClient_mock_1.mockGraphQLClient;
  }
});
/* istanbul ignore next */
cov_1oqmrlthd8().s[5]++;
Object.defineProperty(exports, "mockGraphQLClientInstance", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1oqmrlthd8().f[1]++;
    cov_1oqmrlthd8().s[6]++;
    return graphQLClient_mock_1.mockGraphQLClientInstance;
  }
});
// ============================================================================
// WEBSOCKET MOCKS
// ============================================================================
var webSocket_mock_1 =
/* istanbul ignore next */
(cov_1oqmrlthd8().s[7]++, require("./lib/websocket/webSocket.mock"));
/* istanbul ignore next */
cov_1oqmrlthd8().s[8]++;
Object.defineProperty(exports, "WebSocketMock", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1oqmrlthd8().f[2]++;
    cov_1oqmrlthd8().s[9]++;
    return webSocket_mock_1.WebSocketMock;
  }
});
var webSocket_mock_2 =
/* istanbul ignore next */
(cov_1oqmrlthd8().s[10]++, require("./lib/websocket/webSocket.mock"));
/* istanbul ignore next */
cov_1oqmrlthd8().s[11]++;
Object.defineProperty(exports, "mockWebSocket", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1oqmrlthd8().f[3]++;
    cov_1oqmrlthd8().s[12]++;
    return webSocket_mock_2.createWebSocketMock;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW9xbXJsdGhkOCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZ3JhcGhRTENsaWVudF9tb2NrXzEiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwiZW51bWVyYWJsZSIsImdldCIsIm1vY2tHcmFwaFFMQ2xpZW50IiwibW9ja0dyYXBoUUxDbGllbnRJbnN0YW5jZSIsIndlYlNvY2tldF9tb2NrXzEiLCJXZWJTb2NrZXRNb2NrIiwid2ViU29ja2V0X21vY2tfMiIsImNyZWF0ZVdlYlNvY2tldE1vY2siXSwic291cmNlcyI6WyIvVXNlcnMvZ2FtemFyYW1hemFub3YvRGVza3RvcC9mdW1vL3NyYy9zaGFyZWQvdGVzdGluZy9tb2Nrcy9hcGkvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBUEkgTW9ja3NcbiAqXG4gKiBUeXBlOiDwn5OmIE1BTlVBTFxuICpcbiAqIFRoaXMgZmlsZSBleHBvcnRzIGFsbCBtb2NrcyBmb3IgQVBJL25ldHdvcmsgY2xpZW50cyB0aGF0IG5lZWQgdG8gYmUgbWFudWFsbHkgaW1wb3J0ZWRcbiAqIGFuZCBjb25maWd1cmVkIGluIHRlc3RzLlxuICpcbiAqIFRoZXNlIGFyZSBNQU5VQUwgbW9ja3MgLSB0aGV5IHVzZSBuYW1lZCBleHBvcnRzIGZvciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGltcG9ydGVkXG4gKiBhbmQgY29udHJvbGxlZCBpbiB0ZXN0cy5cbiAqL1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBHUkFQSFFMIE1PQ0tTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCB7IG1vY2tHcmFwaFFMQ2xpZW50LCBtb2NrR3JhcGhRTENsaWVudEluc3RhbmNlIH0gZnJvbSAnLi9saWIvZ3JhcGhxbC9ncmFwaFFMQ2xpZW50Lm1vY2snO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBXRUJTT0NLRVQgTU9DS1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHsgV2ViU29ja2V0TW9jayB9IGZyb20gJy4vbGliL3dlYnNvY2tldC93ZWJTb2NrZXQubW9jayc7XG5leHBvcnQgeyBjcmVhdGVXZWJTb2NrZXRNb2NrIGFzIG1vY2tXZWJTb2NrZXQgfSBmcm9tICcuL2xpYi93ZWJzb2NrZXQvd2ViU29ja2V0Lm1vY2snO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUWVBFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgdHlwZSB7XG4gIG1vY2tHcmFwaFFMT3BlcmF0aW9uSW50ZXJmYWNlLFxuICBtb2NrR3JhcGhRTFJlc3BvbnNlSW50ZXJmYWNlLFxuICBtb2NrV2ViU29ja2V0TWVzc2FnZUludGVyZmFjZSxcbiAgbW9ja1dlYlNvY2tldEluc3RhbmNlSW50ZXJmYWNlLFxuICBtb2NrR3JhcGhRTENhY2hlSW50ZXJmYWNlLFxufSBmcm9tICcuL3R5cGVzL3R5cGVzJztcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBekIsSUFBQTtFQUFBO0VBQUEsSUFBQTBCLFFBQUEsR0FBQXpCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBdUIsUUFBQSxDQUFBM0IsSUFBQSxLQUFBMkIsUUFBQSxDQUFBM0IsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTBCLFFBQUEsQ0FBQTNCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQXVCLGNBQUEsR0FBQUQsUUFBQSxDQUFBM0IsSUFBQTtFQUFBO0lBYUE7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQTZCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUE3QixjQUFBO0FBQUFBLGNBQUEsR0FBQWlCLENBQUE7Ozs7Ozs7QUFEQTtBQUNBO0FBQ0E7QUFFQSxJQUFBYSxvQkFBQTtBQUFBO0FBQUEsQ0FBQTlCLGNBQUEsR0FBQWlCLENBQUEsT0FBQWMsT0FBQTtBQUFnRztBQUFBL0IsY0FBQSxHQUFBaUIsQ0FBQTtBQUF2RmUsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsVUFBQTtFQUFBQyxHQUFBLFdBQUFBLENBQUE7SUFBQTtJQUFBcEMsY0FBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUFBLE9BQUFhLG9CQUFBLENBQUFPLGlCQUFpQjtFQUFBO0FBQUE7QUFBQTtBQUFBckMsY0FBQSxHQUFBaUIsQ0FBQTtBQUFFZSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxVQUFBO0VBQUFDLEdBQUEsV0FBQUEsQ0FBQTtJQUFBO0lBQUFwQyxjQUFBLEdBQUFrQixDQUFBO0lBQUFsQixjQUFBLEdBQUFpQixDQUFBO0lBQUEsT0FBQWEsb0JBQUEsQ0FBQVEseUJBQXlCO0VBQUE7QUFBQTtBQUVyRDtBQUNBO0FBQ0E7QUFFQSxJQUFBQyxnQkFBQTtBQUFBO0FBQUEsQ0FBQXZDLGNBQUEsR0FBQWlCLENBQUEsT0FBQWMsT0FBQTtBQUErRDtBQUFBL0IsY0FBQSxHQUFBaUIsQ0FBQTtBQUF0RGUsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsVUFBQTtFQUFBQyxHQUFBLFdBQUFBLENBQUE7SUFBQTtJQUFBcEMsY0FBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUFBLE9BQUFzQixnQkFBQSxDQUFBQyxhQUFhO0VBQUE7QUFBQTtBQUN0QixJQUFBQyxnQkFBQTtBQUFBO0FBQUEsQ0FBQXpDLGNBQUEsR0FBQWlCLENBQUEsUUFBQWMsT0FBQTtBQUFzRjtBQUFBL0IsY0FBQSxHQUFBaUIsQ0FBQTtBQUE3RWUsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsVUFBQTtFQUFBQyxHQUFBLFdBQUFBLENBQUE7SUFBQTtJQUFBcEMsY0FBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUFBLE9BQUF3QixnQkFBQSxDQUFBQyxtQkFBbUI7RUFBQTtBQUFBIiwiaWdub3JlTGlzdCI6W119