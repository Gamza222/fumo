{"file":"/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/suspense/fallbacks/fallbacks.test.tsx","mappings":"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","names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/infrastructure/suspense/fallbacks/fallbacks.test.tsx"],"sourcesContent":["/**\n * Suspense Fallbacks Tests\n *\n * Real-life enterprise scenarios testing with minimal mocking.\n * Uses existing mock factory patterns.\n */\n\nimport React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport {\n  CardLoadingFallback,\n  ComponentLoadingFallback,\n  DefaultSuspenseFallback,\n  InlineLoadingFallback,\n  PageLoadingFallback,\n} from './fallbacks';\nimport { LoadingSize } from '../types/types';\n\ndescribe('Suspense Fallbacks', () => {\n  // ============================================================================\n  // COMPONENT LOADING FALLBACK\n  // ============================================================================\n\n  describe('ComponentLoadingFallback', () => {\n    it('should render with default props', () => {\n      // Real scenario: default loading state\n      render(<ComponentLoadingFallback />);\n\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n    });\n\n    it('should render with custom text', () => {\n      // Real scenario: specific loading message\n      render(<ComponentLoadingFallback text=\"Loading widget...\" />);\n\n      expect(screen.getByText('Loading widget...')).toBeInTheDocument();\n    });\n\n    it('should render with different sizes', () => {\n      // Real scenario: different component sizes\n      const { rerender } = render(<ComponentLoadingFallback size={LoadingSize.SMALL} />);\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n\n      rerender(<ComponentLoadingFallback size={LoadingSize.MEDIUM} />);\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n\n      rerender(<ComponentLoadingFallback size={LoadingSize.LARGE} />);\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n    });\n\n    it('should apply custom className', () => {\n      // Real scenario: styled loading component\n      const { container } = render(<ComponentLoadingFallback className=\"custom-loading\" />);\n\n      expect(container.firstChild).toHaveClass('custom-loading');\n    });\n\n    it('should render loading spinner', () => {\n      // Real scenario: visual loading indicator\n      const { container } = render(<ComponentLoadingFallback />);\n\n      // Should have spinner element\n      const spinner = container.querySelector('[class*=\"spinner\"]');\n      expect(spinner).toBeInTheDocument();\n    });\n  });\n\n  // ============================================================================\n  // PAGE LOADING FALLBACK\n  // ============================================================================\n\n  describe('PageLoadingFallback', () => {\n    it('should render with default props', () => {\n      // Real scenario: full page loading\n      render(<PageLoadingFallback />);\n\n      expect(screen.getByText('Loading page...')).toBeInTheDocument();\n    });\n\n    it('should render with custom text', () => {\n      // Real scenario: specific page loading message\n      render(<PageLoadingFallback text=\"Loading dashboard...\" />);\n\n      expect(screen.getByText('Loading dashboard...')).toBeInTheDocument();\n    });\n\n    it('should use large size by default', () => {\n      // Real scenario: prominent page loading\n      const { container } = render(<PageLoadingFallback />);\n\n      // Should have large spinner\n      const spinner = container.querySelector('[class*=\"spinnerLarge\"]');\n      expect(spinner).toBeInTheDocument();\n    });\n\n    it('should apply custom className', () => {\n      // Real scenario: branded page loading\n      const { container } = render(<PageLoadingFallback className=\"branded-loading\" />);\n\n      expect(container.firstChild).toHaveClass('branded-loading');\n    });\n\n    it('should take full screen height', () => {\n      // Real scenario: full screen loading experience\n      const { container } = render(<PageLoadingFallback />);\n\n      expect(container.firstChild).toHaveClass('pageFallback');\n    });\n  });\n\n  // ============================================================================\n  // DEFAULT SUSPENSE FALLBACK\n  // ============================================================================\n\n  describe('DefaultSuspenseFallback', () => {\n    it('should render with default props', () => {\n      // Real scenario: generic suspense fallback\n      render(<DefaultSuspenseFallback />);\n\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n    });\n\n    it('should render with custom text', () => {\n      // Real scenario: context-specific loading\n      render(<DefaultSuspenseFallback text=\"Preparing content...\" />);\n\n      expect(screen.getByText('Preparing content...')).toBeInTheDocument();\n    });\n\n    it('should use medium size by default', () => {\n      // Real scenario: balanced loading indicator\n      const { container } = render(<DefaultSuspenseFallback />);\n\n      // Should have medium spinner\n      const spinner = container.querySelector('[class*=\"spinnerMedium\"]');\n      expect(spinner).toBeInTheDocument();\n    });\n\n    it('should apply custom className', () => {\n      // Real scenario: contextual styling\n      const { container } = render(<DefaultSuspenseFallback className=\"modal-loading\" />);\n\n      expect(container.firstChild).toHaveClass('modal-loading');\n    });\n  });\n\n  // ============================================================================\n  // INLINE LOADING FALLBACK\n  // ============================================================================\n\n  describe('InlineLoadingFallback', () => {\n    it('should render with default text', () => {\n      // Real scenario: inline loading state\n      render(<InlineLoadingFallback />);\n\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n    });\n\n    it('should render with custom text', () => {\n      // Real scenario: specific inline loading\n      render(<InlineLoadingFallback text=\"Saving...\" />);\n\n      expect(screen.getByText('Saving...')).toBeInTheDocument();\n    });\n\n    it('should use small spinner', () => {\n      // Real scenario: compact inline indicator\n      const { container } = render(<InlineLoadingFallback />);\n\n      // Should have small spinner\n      const spinner = container.querySelector('[class*=\"spinnerSmall\"]');\n      expect(spinner).toBeInTheDocument();\n    });\n\n    it('should be inline element', () => {\n      // Real scenario: inline with text content\n      const { container } = render(\n        <div>\n          Processing <InlineLoadingFallback /> please wait\n        </div>\n      );\n\n      expect(container.firstChild).toHaveTextContent('Processing Loading... please wait');\n    });\n  });\n\n  // ============================================================================\n  // CARD LOADING FALLBACK\n  // ============================================================================\n\n  describe('CardLoadingFallback', () => {\n    it('should render skeleton loading', () => {\n      // Real scenario: list item loading state\n      render(<CardLoadingFallback />);\n\n      // Should have skeleton elements\n      const { container } = render(<CardLoadingFallback />);\n      const skeletonElements = container.querySelectorAll('[class*=\"cardLine\"]');\n      expect(skeletonElements.length).toBeGreaterThan(0);\n    });\n\n    it('should apply custom className', () => {\n      // Real scenario: card-specific styling\n      const { container } = render(<CardLoadingFallback className=\"card-skeleton\" />);\n\n      expect(container.firstChild).toHaveClass('card-skeleton');\n    });\n\n    it('should have pulsing animation', () => {\n      // Real scenario: animated skeleton\n      const { container } = render(<CardLoadingFallback />);\n\n      expect(container.firstChild).toHaveClass('cardFallback');\n    });\n  });\n\n  // ============================================================================\n  // INTEGRATION SCENARIOS\n  // ============================================================================\n\n  describe('Integration Scenarios', () => {\n    it('should work with different loading contexts', () => {\n      // Real scenario: multiple loading states in one interface\n      render(\n        <div>\n          <header>\n            <InlineLoadingFallback text=\"Syncing...\" />\n          </header>\n          <main>\n            <ComponentLoadingFallback text=\"Loading content...\" />\n          </main>\n          <aside>\n            <CardLoadingFallback />\n          </aside>\n        </div>\n      );\n\n      expect(screen.getByText('Syncing...')).toBeInTheDocument();\n      expect(screen.getByText('Loading content...')).toBeInTheDocument();\n    });\n\n    it('should handle rapid state changes', () => {\n      // Real scenario: loading state changing quickly\n      const { rerender } = render(<ComponentLoadingFallback text=\"Loading...\" />);\n\n      expect(screen.getByText('Loading...')).toBeInTheDocument();\n\n      rerender(<ComponentLoadingFallback text=\"Almost ready...\" />);\n      expect(screen.getByText('Almost ready...')).toBeInTheDocument();\n\n      rerender(<ComponentLoadingFallback text=\"Finalizing...\" />);\n      expect(screen.getByText('Finalizing...')).toBeInTheDocument();\n    });\n\n    it('should work with nested loading states', () => {\n      // Real scenario: hierarchical loading\n      render(\n        <div>\n          <PageLoadingFallback text=\"Loading application...\" />\n          <ComponentLoadingFallback text=\"Loading module...\" />\n        </div>\n      );\n\n      expect(screen.getByText('Loading application...')).toBeInTheDocument();\n    });\n\n    it('should maintain accessibility', () => {\n      // Real scenario: screen reader compatibility\n      render(<ComponentLoadingFallback text=\"Loading user profile\" />);\n\n      const loadingText = screen.getByText('Loading user profile');\n      expect(loadingText).toBeInTheDocument();\n\n      // Should be readable by screen readers\n      expect(loadingText).toBeVisible();\n    });\n  });\n\n  // ============================================================================\n  // RESPONSIVE SCENARIOS\n  // ============================================================================\n\n  describe('Responsive Scenarios', () => {\n    it('should handle long loading text', () => {\n      // Real scenario: descriptive loading messages\n      const longText =\n        'Loading your personalized dashboard with all your widgets and recent activity...';\n\n      render(<ComponentLoadingFallback text={longText} />);\n\n      expect(screen.getByText(longText)).toBeInTheDocument();\n    });\n\n    it('should work with empty text', () => {\n      // Real scenario: loading without text\n      render(<ComponentLoadingFallback text=\"\" />);\n\n      // Should still show spinner\n      const { container } = render(<ComponentLoadingFallback text=\"\" />);\n      const spinner = container.querySelector('[class*=\"spinner\"]');\n      expect(spinner).toBeInTheDocument();\n    });\n\n    it('should handle special characters in text', () => {\n      // Real scenario: internationalized loading messages\n      const specialText = 'Chargement en cours... 🔄 Please wait!';\n\n      render(<ComponentLoadingFallback text={specialText} />);\n\n      expect(screen.getByText(specialText)).toBeInTheDocument();\n    });\n  });\n\n  // ============================================================================\n  // PERFORMANCE SCENARIOS\n  // ============================================================================\n\n  describe('Performance Scenarios', () => {\n    it('should render quickly without complex calculations', () => {\n      // Real scenario: fast loading state transitions\n      const startTime = performance.now();\n\n      render(<ComponentLoadingFallback />);\n\n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n\n      // Should render in reasonable time (< 10ms)\n      expect(renderTime).toBeLessThan(10);\n    });\n\n    it('should not cause memory leaks with rapid rerenders', () => {\n      // Real scenario: rapidly changing loading states\n      const { rerender, unmount } = render(<ComponentLoadingFallback />);\n\n      // Rapidly rerender many times\n      for (let i = 0; i < 100; i++) {\n        rerender(<ComponentLoadingFallback text={`Loading ${i}...`} />);\n      }\n\n      // Should unmount cleanly\n      expect(() => unmount()).not.toThrow();\n    });\n\n    it('should handle multiple instances efficiently', () => {\n      // Real scenario: many loading states simultaneously\n      const components = Array.from({ length: 20 }, (_, i) => (\n        <ComponentLoadingFallback key={i} text={`Loading item ${i}...`} />\n      ));\n\n      render(<div>{components}</div>);\n\n      // All should render without issues\n      expect(screen.getByText('Loading item 0...')).toBeInTheDocument();\n      expect(screen.getByText('Loading item 19...')).toBeInTheDocument();\n    });\n  });\n});\n\ndescribe('Suspense Fallbacks Integration', () => {\n  it('should work in complete suspense scenario', () => {\n    // Real scenario: full loading experience\n    const LoadingPage: React.FC = () => (\n      <div>\n        <PageLoadingFallback text=\"Loading application...\" />\n\n        <div style={{ position: 'absolute', top: 10, right: 10 }}>\n          <InlineLoadingFallback text=\"Syncing...\" />\n        </div>\n\n        <main style={{ marginTop: 100 }}>\n          <div style={{ display: 'grid', gap: 16, gridTemplateColumns: 'repeat(2, 1fr)' }}>\n            <ComponentLoadingFallback text=\"Loading dashboard...\" />\n            <ComponentLoadingFallback text=\"Loading notifications...\" />\n          </div>\n\n          <div style={{ marginTop: 20 }}>\n            <CardLoadingFallback />\n            <CardLoadingFallback />\n          </div>\n        </main>\n      </div>\n    );\n\n    render(<LoadingPage />);\n\n    expect(screen.getByText('Loading application...')).toBeInTheDocument();\n    expect(screen.getByText('Syncing...')).toBeInTheDocument();\n    expect(screen.getByText('Loading dashboard...')).toBeInTheDocument();\n    expect(screen.getByText('Loading notifications...')).toBeInTheDocument();\n  });\n});\n"],"version":3}