{"version":3,"names":[],"sources":["/Users/gamzaramazanov/Desktop/fumo/src/shared/testing/mocks/api/types/types.ts"],"sourcesContent":["// GraphQL Request Types\nexport type GraphQLRequest = {\n  query: string;\n  variables?: Record<string, unknown> | undefined;\n};\n\nexport type GraphQLMutationRequest = {\n  mutation: string;\n  variables?: Record<string, unknown> | undefined;\n};\n\nexport type GraphQLCacheRequest<T> = {\n  query: string;\n  variables?: Record<string, unknown> | undefined;\n  data?: T;\n};\n\n// GraphQL Operation Types\nexport interface mockGraphQLOperationInterface {\n  request: {\n    query: string;\n    variables?: Record<string, unknown>;\n  };\n  result?: mockGraphQLResponseInterface;\n  error?: Error; // Network errors\n  delay?: number; // Simulate network delay\n}\n\n// Response Types\nexport interface mockGraphQLResponseInterface<T = unknown> {\n  data?: T;\n  errors?: mockGraphQLErrorInterface[];\n  loading?: boolean;\n  networkStatus?: number;\n}\n\n// Error Types\nexport interface mockGraphQLErrorInterface {\n  message: string;\n  locations?: { line: number; column: number }[];\n  path?: string[];\n  extensions?: Record<string, unknown>;\n}\n\n// WebSocket Types\nexport interface mockWebSocketMessageInterface {\n  type: 'subscription' | 'next' | 'error' | 'complete';\n  payload?: unknown;\n  id?: string;\n}\n\nexport interface mockWebSocketInstanceInterface {\n  addEventListener(type: string, handler: (event: MessageEvent) => void): void;\n  removeEventListener(type: string, handler: (event: MessageEvent) => void): void;\n  send(data: string): void;\n  close(): void;\n  mockMessage(message: mockWebSocketMessageInterface): void;\n}\n\n// Cache Types\nexport interface mockGraphQLCacheInterface {\n  readQuery: <T>(options: GraphQLRequest) => T | null;\n  writeQuery: <T>(options: GraphQLCacheRequest<T> & { data: T }) => void;\n}\n"],"mappings":"","ignoreList":[]}